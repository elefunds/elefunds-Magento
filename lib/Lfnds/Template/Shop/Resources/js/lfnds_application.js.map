{
  "version": 3,
  "file": "/Users/onlyahost/Documents/Elefunds/API-Libraries/API-Libraries/PHP/src/Lfnds/Template/Shop/Resources/js/lfnds_application.js",
  "sources": [
    "../../../../../../../Frontend/src/js/app/../lib/require.js",
    "../../../../../../../Frontend/src/js/lib/zepto.js",
    "../../../../../../../Frontend/src/js/lib/underscore.js",
    "../../../../../../../Frontend/src/js/lib/backbone.js",
    "../../../../../../../Frontend/src/js/app/text.js",
    "../../../../../../../../../../../../../../text!template/donationModule.html",
    "../../../../../../../Frontend/src/js/app/model/donationModule.js",
    "../../../../../../../Frontend/src/js/app/manager/getElefundsData.js",
    "../../../../../../../Frontend/src/js/app/model/receiver.js",
    "../../../../../../../Frontend/src/js/app/collection/receiver.js",
    "../../../../../../../Frontend/src/js/app/i18n.js",
    "../../../../../../../Frontend/src/js/app/nls/donationModule.js",
    "../../../../../../../../../../../../../../i18n!nls/donationModule",
    "../../../../../../../Frontend/src/js/app/view/donationModule.js",
    "../../../../../../../Frontend/src/js/app/model/donation.js",
    "../../../../../../../Frontend/src/js/app/model/shareModule.js",
    "../../../../../../../Frontend/src/js/app/collection/shareModule.js",
    "../../../../../../../../../../../../../../text!template/donationForm.html",
    "../../../../../../../Frontend/src/js/app/view/donationForm.js",
    "../../../../../../../../../../../../../../text!template/shareModule.html",
    "../../../../../../../Frontend/src/js/app/nls/shareModule.js",
    "../../../../../../../../../../../../../../i18n!nls/shareModule",
    "../../../../../../../Frontend/src/js/app/view/shareModule.js",
    "../../../../../../../Frontend/src/js/lib/qunit.js",
    "../../../../../../../Frontend/src/js/app/tests/model/donation.js",
    "../../../../../../../Frontend/src/js/app/tests/testMain.js",
    "../../../../../../../Frontend/src/js/app/router.js",
    "../../../../../../../Frontend/src/js/app/app.js",
    "../../../../../../../Frontend/src/js/app/main.js"
  ],
  "names": [],
  "mappingsvmDA,ADwmDA;ACvmjtCA,ADktCA;ACjtziDA,AD0iDA;ACzinFA,ADoFA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA,ADaA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA,ADoFA;ACnvLA,ADwLA;ACvnbA,ADobA;ACnbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtVA,ADuVA;ACtVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA,ADsFA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA,ADyDA;ACxhFA,ADiFA;AChnnEA,ADonEA;ACnnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnGA,ADoGA;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA,AD8DA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChGA,ADiGA;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA,AD4DA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "\n/** vim: et:ts=4:sw=4:sts=4\n * @license RequireJS 2.1.6 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/requirejs for details\n */\n//Not using strict: uneven strict support in browsers, #392, and causes\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\n/*jslint regexp: true, nomen: true, sloppy: true */\n/*global window, navigator, document, importScripts, setTimeout, opera */\n\nvar requirejs, require, define;\n(function (global) {\n    var req, s, head, baseElement, dataMain, src,\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\n        version = '2.1.6',\n        commentRegExp = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/mg,\n        cjsRequireRegExp = /[^.]\\s*require\\s*\\(\\s*[\"']([^'\"\\s]+)[\"']\\s*\\)/g,\n        jsSuffixRegExp = /\\.js$/,\n        currDirRegExp = /^\\.\\//,\n        op = Object.prototype,\n        ostring = op.toString,\n        hasOwn = op.hasOwnProperty,\n        ap = Array.prototype,\n        apsp = ap.splice,\n        isBrowser = !!(typeof window !== 'undefined' && navigator && window.document),\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\n    //PS3 indicates loaded and complete, but need to wait for complete\n    //specifically. Sequence is 'loading', 'loaded', execution,\n    // then 'complete'. The UA check is unfortunate, but not sure how\n    //to feature test w/o causing perf issues.\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\n            /^complete$/ : /^(complete|loaded)$/,\n        defContextName = '_',\n    //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\n        contexts = {},\n        cfg = {},\n        globalDefQueue = [],\n        useInteractive = false;\n\n    function isFunction(it) {\n        return ostring.call(it) === '[object Function]';\n    }\n\n    function isArray(it) {\n        return ostring.call(it) === '[object Array]';\n    }\n\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n    function each(ary, func) {\n        if (ary) {\n            var i;\n            for (i = 0; i < ary.length; i += 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Helper function for iterating over an array backwards. If the func\n     * returns a true value, it will break out of the loop.\n     */\n    function eachReverse(ary, func) {\n        if (ary) {\n            var i;\n            for (i = ary.length - 1; i > -1; i -= 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    function getOwn(obj, prop) {\n        return hasProp(obj, prop) && obj[prop];\n    }\n\n    /**\n     * Cycles over properties in an object and calls a function for each\n     * property value. If the function returns a truthy value, then the\n     * iteration is stopped.\n     */\n    function eachProp(obj, func) {\n        var prop;\n        for (prop in obj) {\n            if (hasProp(obj, prop)) {\n                if (func(obj[prop], prop)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     */\n    function mixin(target, source, force, deepStringMixin) {\n        if (source) {\n            eachProp(source, function (value, prop) {\n                if (force || !hasProp(target, prop)) {\n                    if (deepStringMixin && typeof value !== 'string') {\n                        if (!target[prop]) {\n                            target[prop] = {};\n                        }\n                        mixin(target[prop], value, force, deepStringMixin);\n                    } else {\n                        target[prop] = value;\n                    }\n                }\n            });\n        }\n        return target;\n    }\n\n    //Similar to Function.prototype.bind, but the 'this' object is specified\n    //first, since it is easier to read/figure out what 'this' will be.\n    function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n\n    /**\n     * Constructs an error with a pointer to an URL with more information.\n     * @param {String} id the error ID that maps to an ID on a web page.\n     * @param {String} message human readable error.\n     * @param {Error} [err] the original error, if there is one.\n     *\n     * @returns {Error}\n     */\n    function makeError(id, msg, err, requireModules) {\n        var e = new Error(msg + '\\nhttp://requirejs.org/docs/errors.html#' + id);\n        e.requireType = id;\n        e.requireModules = requireModules;\n        if (err) {\n            e.originalError = err;\n        }\n        return e;\n    }\n\n    if (typeof define !== 'undefined') {\n        //If a define is already in play via another AMD loader,\n        //do not overwrite.\n        return;\n    }\n\n    if (typeof requirejs !== 'undefined') {\n        if (isFunction(requirejs)) {\n            //Do not overwrite and existing requirejs instance.\n            return;\n        }\n        cfg = requirejs;\n        requirejs = undefined;\n    }\n\n    //Allow for a require config object\n    if (typeof require !== 'undefined' && !isFunction(require)) {\n        //assume it is a config object.\n        cfg = require;\n        require = undefined;\n    }\n\n    function newContext(contextName) {\n        var inCheckLoaded, Module, context, handlers,\n            checkLoadedTimeoutId,\n            config = {\n                //Defaults. Do not set a default for map\n                //config to speed up normalize(), which\n                //will run faster if there is no default.\n                waitSeconds: 7,\n                baseUrl: './',\n                paths: {},\n                pkgs: {},\n                shim: {},\n                config: {}\n            },\n            registry = {},\n        //registry of just enabled modules, to speed\n        //cycle breaking code when lots of modules\n        //are registered, but not activated.\n            enabledRegistry = {},\n            undefEvents = {},\n            defQueue = [],\n            defined = {},\n            urlFetched = {},\n            requireCounter = 1,\n            unnormalizedCounter = 1;\n\n        /**\n         * Trims the . and .. from an array of path segments.\n         * It will keep a leading path segment if a .. will become\n         * the first path segment, to help with module name lookups,\n         * which act like paths, but can be remapped. But the end result,\n         * all paths that use this function should look normalized.\n         * NOTE: this method MODIFIES the input array.\n         * @param {Array} ary the array of path segments.\n         */\n        function trimDots(ary) {\n            var i, part;\n            for (i = 0; ary[i]; i += 1) {\n                part = ary[i];\n                if (part === '.') {\n                    ary.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\n                        //End of the line. Keep at least one non-dot\n                        //path segment at the front so it can be mapped\n                        //correctly to disk. Otherwise, there is likely\n                        //no path mapping for a path starting with '..'.\n                        //This can still fail, but catches the most reasonable\n                        //uses of ..\n                        break;\n                    } else if (i > 0) {\n                        ary.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Given a relative module name, like ./something, normalize it to\n         * a real name that can be mapped to a path.\n         * @param {String} name the relative name\n         * @param {String} baseName a real name that the name arg is relative\n         * to.\n         * @param {Boolean} applyMap apply the map config to the value. Should\n         * only be done if this normalization is for a dependency ID.\n         * @returns {String} normalized name\n         */\n        function normalize(name, baseName, applyMap) {\n            var pkgName, pkgConfig, mapValue, nameParts, i, j, nameSegment,\n                foundMap, foundI, foundStarMap, starI,\n                baseParts = baseName && baseName.split('/'),\n                normalizedBaseParts = baseParts,\n                map = config.map,\n                starMap = map && map['*'];\n\n            //Adjust any relative paths.\n            if (name && name.charAt(0) === '.') {\n                //If have a base name, try to normalize against it,\n                //otherwise, assume it is a top-level require that will\n                //be relative to baseUrl in the end.\n                if (baseName) {\n                    if (getOwn(config.pkgs, baseName)) {\n                        //If the baseName is a package name, then just treat it as one\n                        //name to concat the name with.\n                        normalizedBaseParts = baseParts = [baseName];\n                    } else {\n                        //Convert baseName to array, and lop off the last part,\n                        //so that . matches that 'directory' and not name of the baseName's\n                        //module. For instance, baseName of 'one/two/three', maps to\n                        //'one/two/three.js', but we want the directory, 'one/two' for\n                        //this normalization.\n                        normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                    }\n\n                    name = normalizedBaseParts.concat(name.split('/'));\n                    trimDots(name);\n\n                    //Some use of packages may use a . path to reference the\n                    //'main' module name, so normalize for that.\n                    pkgConfig = getOwn(config.pkgs, (pkgName = name[0]));\n                    name = name.join('/');\n                    if (pkgConfig && name === pkgName + '/' + pkgConfig.main) {\n                        name = pkgName;\n                    }\n                } else if (name.indexOf('./') === 0) {\n                    // No baseName, so this is ID is resolved relative\n                    // to baseUrl, pull off the leading dot.\n                    name = name.substring(2);\n                }\n            }\n\n            //Apply map config if available.\n            if (applyMap && map && (baseParts || starMap)) {\n                nameParts = name.split('/');\n\n                for (i = nameParts.length; i > 0; i -= 1) {\n                    nameSegment = nameParts.slice(0, i).join('/');\n\n                    if (baseParts) {\n                        //Find the longest baseName segment match in the config.\n                        //So, do joins on the biggest to smallest lengths of baseParts.\n                        for (j = baseParts.length; j > 0; j -= 1) {\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\n\n                            //baseName segment has config, find if it has one for\n                            //this name.\n                            if (mapValue) {\n                                mapValue = getOwn(mapValue, nameSegment);\n                                if (mapValue) {\n                                    //Match, update name to the new value.\n                                    foundMap = mapValue;\n                                    foundI = i;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (foundMap) {\n                        break;\n                    }\n\n                    //Check for a star map match, but just hold on to it,\n                    //if there is a shorter segment match later in a matching\n                    //config, then favor over this star map.\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\n                        foundStarMap = getOwn(starMap, nameSegment);\n                        starI = i;\n                    }\n                }\n\n                if (!foundMap && foundStarMap) {\n                    foundMap = foundStarMap;\n                    foundI = starI;\n                }\n\n                if (foundMap) {\n                    nameParts.splice(0, foundI, foundMap);\n                    name = nameParts.join('/');\n                }\n            }\n\n            return name;\n        }\n\n        function removeScript(name) {\n            if (isBrowser) {\n                each(scripts(), function (scriptNode) {\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\n                        scriptNode.getAttribute('data-requirecontext') === context.contextName) {\n                        scriptNode.parentNode.removeChild(scriptNode);\n                        return true;\n                    }\n                });\n            }\n        }\n\n        function hasPathFallback(id) {\n            var pathConfig = getOwn(config.paths, id);\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\n                removeScript(id);\n                //Pop off the first array value, since it failed, and\n                //retry\n                pathConfig.shift();\n                context.require.undef(id);\n                context.require([id]);\n                return true;\n            }\n        }\n\n        //Turns a plugin!resource to [plugin, resource]\n        //with the plugin being undefined if the name\n        //did not have a plugin prefix.\n        function splitPrefix(name) {\n            var prefix,\n                index = name ? name.indexOf('!') : -1;\n            if (index > -1) {\n                prefix = name.substring(0, index);\n                name = name.substring(index + 1, name.length);\n            }\n            return [prefix, name];\n        }\n\n        /**\n         * Creates a module mapping that includes plugin prefix, module\n         * name, and path. If parentModuleMap is provided it will\n         * also normalize the name via require.normalize()\n         *\n         * @param {String} name the module name\n         * @param {String} [parentModuleMap] parent module map\n         * for the module name, used to resolve relative names.\n         * @param {Boolean} isNormalized: is the ID already normalized.\n         * This is true if this call is done for a define() module ID.\n         * @param {Boolean} applyMap: apply the map config to the ID.\n         * Should only be true if this map is for a dependency.\n         *\n         * @returns {Object}\n         */\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\n            var url, pluginModule, suffix, nameParts,\n                prefix = null,\n                parentName = parentModuleMap ? parentModuleMap.name : null,\n                originalName = name,\n                isDefine = true,\n                normalizedName = '';\n\n            //If no name, then it means it is a require call, generate an\n            //internal name.\n            if (!name) {\n                isDefine = false;\n                name = '_@r' + (requireCounter += 1);\n            }\n\n            nameParts = splitPrefix(name);\n            prefix = nameParts[0];\n            name = nameParts[1];\n\n            if (prefix) {\n                prefix = normalize(prefix, parentName, applyMap);\n                pluginModule = getOwn(defined, prefix);\n            }\n\n            //Account for relative paths if there is a base name.\n            if (name) {\n                if (prefix) {\n                    if (pluginModule && pluginModule.normalize) {\n                        //Plugin is loaded, use its normalize method.\n                        normalizedName = pluginModule.normalize(name, function (name) {\n                            return normalize(name, parentName, applyMap);\n                        });\n                    } else {\n                        normalizedName = normalize(name, parentName, applyMap);\n                    }\n                } else {\n                    //A regular module.\n                    normalizedName = normalize(name, parentName, applyMap);\n\n                    //Normalized name may be a plugin ID due to map config\n                    //application in normalize. The map config values must\n                    //already be normalized, so do not need to redo that part.\n                    nameParts = splitPrefix(normalizedName);\n                    prefix = nameParts[0];\n                    normalizedName = nameParts[1];\n                    isNormalized = true;\n\n                    url = context.nameToUrl(normalizedName);\n                }\n            }\n\n            //If the id is a plugin id that cannot be determined if it needs\n            //normalization, stamp it with a unique ID so two matching relative\n            //ids that may conflict can be separate.\n            suffix = prefix && !pluginModule && !isNormalized ?\n                '_unnormalized' + (unnormalizedCounter += 1) :\n                '';\n\n            return {\n                prefix: prefix,\n                name: normalizedName,\n                parentMap: parentModuleMap,\n                unnormalized: !!suffix,\n                url: url,\n                originalName: originalName,\n                isDefine: isDefine,\n                id: (prefix ?\n                    prefix + '!' + normalizedName :\n                    normalizedName) + suffix\n            };\n        }\n\n        function getModule(depMap) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (!mod) {\n                mod = registry[id] = new context.Module(depMap);\n            }\n\n            return mod;\n        }\n\n        function on(depMap, name, fn) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (hasProp(defined, id) &&\n                (!mod || mod.defineEmitComplete)) {\n                if (name === 'defined') {\n                    fn(defined[id]);\n                }\n            } else {\n                mod = getModule(depMap);\n                if (mod.error && name === 'error') {\n                    fn(mod.error);\n                } else {\n                    mod.on(name, fn);\n                }\n            }\n        }\n\n        function onError(err, errback) {\n            var ids = err.requireModules,\n                notified = false;\n\n            if (errback) {\n                errback(err);\n            } else {\n                each(ids, function (id) {\n                    var mod = getOwn(registry, id);\n                    if (mod) {\n                        //Set error on module, so it skips timeout checks.\n                        mod.error = err;\n                        if (mod.events.error) {\n                            notified = true;\n                            mod.emit('error', err);\n                        }\n                    }\n                });\n\n                if (!notified) {\n                    req.onError(err);\n                }\n            }\n        }\n\n        /**\n         * Internal method to transfer globalQueue items to this context's\n         * defQueue.\n         */\n        function takeGlobalQueue() {\n            //Push all the globalDefQueue items into the context's defQueue\n            if (globalDefQueue.length) {\n                //Array splice in the values since the context code has a\n                //local var ref to defQueue, so cannot just reassign the one\n                //on context.\n                apsp.apply(defQueue,\n                    [defQueue.length - 1, 0].concat(globalDefQueue));\n                globalDefQueue = [];\n            }\n        }\n\n        handlers = {\n            'require': function (mod) {\n                if (mod.require) {\n                    return mod.require;\n                } else {\n                    return (mod.require = context.makeRequire(mod.map));\n                }\n            },\n            'exports': function (mod) {\n                mod.usingExports = true;\n                if (mod.map.isDefine) {\n                    if (mod.exports) {\n                        return mod.exports;\n                    } else {\n                        return (mod.exports = defined[mod.map.id] = {});\n                    }\n                }\n            },\n            'module': function (mod) {\n                if (mod.module) {\n                    return mod.module;\n                } else {\n                    return (mod.module = {\n                        id: mod.map.id,\n                        uri: mod.map.url,\n                        config: function () {\n                            var c,\n                                pkg = getOwn(config.pkgs, mod.map.id);\n                            // For packages, only support config targeted\n                            // at the main module.\n                            c = pkg ? getOwn(config.config, mod.map.id + '/' + pkg.main) :\n                                getOwn(config.config, mod.map.id);\n                            return  c || {};\n                        },\n                        exports: defined[mod.map.id]\n                    });\n                }\n            }\n        };\n\n        function cleanRegistry(id) {\n            //Clean up machinery used for waiting modules.\n            delete registry[id];\n            delete enabledRegistry[id];\n        }\n\n        function breakCycle(mod, traced, processed) {\n            var id = mod.map.id;\n\n            if (mod.error) {\n                mod.emit('error', mod.error);\n            } else {\n                traced[id] = true;\n                each(mod.depMaps, function (depMap, i) {\n                    var depId = depMap.id,\n                        dep = getOwn(registry, depId);\n\n                    //Only force things that have not completed\n                    //being defined, so still in the registry,\n                    //and only if it has not been matched up\n                    //in the module already.\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\n                        if (getOwn(traced, depId)) {\n                            mod.defineDep(i, defined[depId]);\n                            mod.check(); //pass false?\n                        } else {\n                            breakCycle(dep, traced, processed);\n                        }\n                    }\n                });\n                processed[id] = true;\n            }\n        }\n\n        function checkLoaded() {\n            var map, modId, err, usingPathFallback,\n                waitInterval = config.waitSeconds * 1000,\n            //It is possible to disable the wait interval by using waitSeconds of 0.\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\n                noLoads = [],\n                reqCalls = [],\n                stillLoading = false,\n                needCycleCheck = true;\n\n            //Do not bother if this call was a result of a cycle break.\n            if (inCheckLoaded) {\n                return;\n            }\n\n            inCheckLoaded = true;\n\n            //Figure out the state of all the modules.\n            eachProp(enabledRegistry, function (mod) {\n                map = mod.map;\n                modId = map.id;\n\n                //Skip things that are not enabled or in error state.\n                if (!mod.enabled) {\n                    return;\n                }\n\n                if (!map.isDefine) {\n                    reqCalls.push(mod);\n                }\n\n                if (!mod.error) {\n                    //If the module should be executed, and it has not\n                    //been inited and time is up, remember it.\n                    if (!mod.inited && expired) {\n                        if (hasPathFallback(modId)) {\n                            usingPathFallback = true;\n                            stillLoading = true;\n                        } else {\n                            noLoads.push(modId);\n                            removeScript(modId);\n                        }\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\n                        stillLoading = true;\n                        if (!map.prefix) {\n                            //No reason to keep looking for unfinished\n                            //loading. If the only stillLoading is a\n                            //plugin resource though, keep going,\n                            //because it may be that a plugin resource\n                            //is waiting on a non-plugin cycle.\n                            return (needCycleCheck = false);\n                        }\n                    }\n                }\n            });\n\n            if (expired && noLoads.length) {\n                //If wait time expired, throw error of unloaded modules.\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\n                err.contextName = context.contextName;\n                return onError(err);\n            }\n\n            //Not expired, check for a cycle.\n            if (needCycleCheck) {\n                each(reqCalls, function (mod) {\n                    breakCycle(mod, {}, {});\n                });\n            }\n\n            //If still waiting on loads, and the waiting load is something\n            //other than a plugin resource, or there are still outstanding\n            //scripts, then just try back later.\n            if ((!expired || usingPathFallback) && stillLoading) {\n                //Something is still waiting to load. Wait for it, but only\n                //if a timeout is not already in effect.\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\n                    checkLoadedTimeoutId = setTimeout(function () {\n                        checkLoadedTimeoutId = 0;\n                        checkLoaded();\n                    }, 50);\n                }\n            }\n\n            inCheckLoaded = false;\n        }\n\n        Module = function (map) {\n            this.events = getOwn(undefEvents, map.id) || {};\n            this.map = map;\n            this.shim = getOwn(config.shim, map.id);\n            this.depExports = [];\n            this.depMaps = [];\n            this.depMatched = [];\n            this.pluginMaps = {};\n            this.depCount = 0;\n\n            /* this.exports this.factory\n             this.depMaps = [],\n             this.enabled, this.fetched\n             */\n        };\n\n        Module.prototype = {\n            init: function (depMaps, factory, errback, options) {\n                options = options || {};\n\n                //Do not do more inits if already done. Can happen if there\n                //are multiple define calls for the same module. That is not\n                //a normal, common case, but it is also not unexpected.\n                if (this.inited) {\n                    return;\n                }\n\n                this.factory = factory;\n\n                if (errback) {\n                    //Register for errors on this module.\n                    this.on('error', errback);\n                } else if (this.events.error) {\n                    //If no errback already, but there are error listeners\n                    //on this module, set up an errback to pass to the deps.\n                    errback = bind(this, function (err) {\n                        this.emit('error', err);\n                    });\n                }\n\n                //Do a copy of the dependency array, so that\n                //source inputs are not modified. For example\n                //\"shim\" deps are passed in here directly, and\n                //doing a direct modification of the depMaps array\n                //would affect that config.\n                this.depMaps = depMaps && depMaps.slice(0);\n\n                this.errback = errback;\n\n                //Indicate this module has be initialized\n                this.inited = true;\n\n                this.ignore = options.ignore;\n\n                //Could have option to init this module in enabled mode,\n                //or could have been previously marked as enabled. However,\n                //the dependencies are not known until init is called. So\n                //if enabled previously, now trigger dependencies as enabled.\n                if (options.enabled || this.enabled) {\n                    //Enable this module and dependencies.\n                    //Will call this.check()\n                    this.enable();\n                } else {\n                    this.check();\n                }\n            },\n\n            defineDep: function (i, depExports) {\n                //Because of cycles, defined callback for a given\n                //export can be called more than once.\n                if (!this.depMatched[i]) {\n                    this.depMatched[i] = true;\n                    this.depCount -= 1;\n                    this.depExports[i] = depExports;\n                }\n            },\n\n            fetch: function () {\n                if (this.fetched) {\n                    return;\n                }\n                this.fetched = true;\n\n                context.startTime = (new Date()).getTime();\n\n                var map = this.map;\n\n                //If the manager is for a plugin managed resource,\n                //ask the plugin to load it now.\n                if (this.shim) {\n                    context.makeRequire(this.map, {\n                        enableBuildCallback: true\n                    })(this.shim.deps || [], bind(this, function () {\n                            return map.prefix ? this.callPlugin() : this.load();\n                        }));\n                } else {\n                    //Regular dependency.\n                    return map.prefix ? this.callPlugin() : this.load();\n                }\n            },\n\n            load: function () {\n                var url = this.map.url;\n\n                //Regular dependency.\n                if (!urlFetched[url]) {\n                    urlFetched[url] = true;\n                    context.load(this.map.id, url);\n                }\n            },\n\n            /**\n             * Checks if the module is ready to define itself, and if so,\n             * define it.\n             */\n            check: function () {\n                if (!this.enabled || this.enabling) {\n                    return;\n                }\n\n                var err, cjsModule,\n                    id = this.map.id,\n                    depExports = this.depExports,\n                    exports = this.exports,\n                    factory = this.factory;\n\n                if (!this.inited) {\n                    this.fetch();\n                } else if (this.error) {\n                    this.emit('error', this.error);\n                } else if (!this.defining) {\n                    //The factory could trigger another require call\n                    //that would result in checking this module to\n                    //define itself again. If already in the process\n                    //of doing that, skip this work.\n                    this.defining = true;\n\n                    if (this.depCount < 1 && !this.defined) {\n                        if (isFunction(factory)) {\n                            //If there is an error listener, favor passing\n                            //to that instead of throwing an error. However,\n                            //only do it for define()'d  modules. require\n                            //errbacks should not be called for failures in\n                            //their callbacks (#699). However if a global\n                            //onError is set, use that.\n                            if ((this.events.error && this.map.isDefine) ||\n                                req.onError !== defaultOnError) {\n                                try {\n                                    exports = context.execCb(id, factory, depExports, exports);\n                                } catch (e) {\n                                    err = e;\n                                }\n                            } else {\n                                exports = context.execCb(id, factory, depExports, exports);\n                            }\n\n                            if (this.map.isDefine) {\n                                //If setting exports via 'module' is in play,\n                                //favor that over return value and exports. After that,\n                                //favor a non-undefined return value over exports use.\n                                cjsModule = this.module;\n                                if (cjsModule &&\n                                    cjsModule.exports !== undefined &&\n                                    //Make sure it is not already the exports value\n                                    cjsModule.exports !== this.exports) {\n                                    exports = cjsModule.exports;\n                                } else if (exports === undefined && this.usingExports) {\n                                    //exports already set the defined value.\n                                    exports = this.exports;\n                                }\n                            }\n\n                            if (err) {\n                                err.requireMap = this.map;\n                                err.requireModules = this.map.isDefine ? [this.map.id] : null;\n                                err.requireType = this.map.isDefine ? 'define' : 'require';\n                                return onError((this.error = err));\n                            }\n\n                        } else {\n                            //Just a literal value\n                            exports = factory;\n                        }\n\n                        this.exports = exports;\n\n                        if (this.map.isDefine && !this.ignore) {\n                            defined[id] = exports;\n\n                            if (req.onResourceLoad) {\n                                req.onResourceLoad(context, this.map, this.depMaps);\n                            }\n                        }\n\n                        //Clean up\n                        cleanRegistry(id);\n\n                        this.defined = true;\n                    }\n\n                    //Finished the define stage. Allow calling check again\n                    //to allow define notifications below in the case of a\n                    //cycle.\n                    this.defining = false;\n\n                    if (this.defined && !this.defineEmitted) {\n                        this.defineEmitted = true;\n                        this.emit('defined', this.exports);\n                        this.defineEmitComplete = true;\n                    }\n\n                }\n            },\n\n            callPlugin: function () {\n                var map = this.map,\n                    id = map.id,\n                //Map already normalized the prefix.\n                    pluginMap = makeModuleMap(map.prefix);\n\n                //Mark this as a dependency for this plugin, so it\n                //can be traced for cycles.\n                this.depMaps.push(pluginMap);\n\n                on(pluginMap, 'defined', bind(this, function (plugin) {\n                    var load, normalizedMap, normalizedMod,\n                        name = this.map.name,\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\n                        localRequire = context.makeRequire(map.parentMap, {\n                            enableBuildCallback: true\n                        });\n\n                    //If current map is not normalized, wait for that\n                    //normalized name to load instead of continuing.\n                    if (this.map.unnormalized) {\n                        //Normalize the ID if the plugin allows it.\n                        if (plugin.normalize) {\n                            name = plugin.normalize(name, function (name) {\n                                return normalize(name, parentName, true);\n                            }) || '';\n                        }\n\n                        //prefix and name should already be normalized, no need\n                        //for applying map config again either.\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\n                            this.map.parentMap);\n                        on(normalizedMap,\n                            'defined', bind(this, function (value) {\n                                this.init([], function () { return value; }, null, {\n                                    enabled: true,\n                                    ignore: true\n                                });\n                            }));\n\n                        normalizedMod = getOwn(registry, normalizedMap.id);\n                        if (normalizedMod) {\n                            //Mark this as a dependency for this plugin, so it\n                            //can be traced for cycles.\n                            this.depMaps.push(normalizedMap);\n\n                            if (this.events.error) {\n                                normalizedMod.on('error', bind(this, function (err) {\n                                    this.emit('error', err);\n                                }));\n                            }\n                            normalizedMod.enable();\n                        }\n\n                        return;\n                    }\n\n                    load = bind(this, function (value) {\n                        this.init([], function () { return value; }, null, {\n                            enabled: true\n                        });\n                    });\n\n                    load.error = bind(this, function (err) {\n                        this.inited = true;\n                        this.error = err;\n                        err.requireModules = [id];\n\n                        //Remove temp unnormalized modules for this module,\n                        //since they will never be resolved otherwise now.\n                        eachProp(registry, function (mod) {\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\n                                cleanRegistry(mod.map.id);\n                            }\n                        });\n\n                        onError(err);\n                    });\n\n                    //Allow plugins to load other code without having to know the\n                    //context or how to 'complete' the load.\n                    load.fromText = bind(this, function (text, textAlt) {\n                        /*jslint evil: true */\n                        var moduleName = map.name,\n                            moduleMap = makeModuleMap(moduleName),\n                            hasInteractive = useInteractive;\n\n                        //As of 2.1.0, support just passing the text, to reinforce\n                        //fromText only being called once per resource. Still\n                        //support old style of passing moduleName but discard\n                        //that moduleName in favor of the internal ref.\n                        if (textAlt) {\n                            text = textAlt;\n                        }\n\n                        //Turn off interactive script matching for IE for any define\n                        //calls in the text, then turn it back on at the end.\n                        if (hasInteractive) {\n                            useInteractive = false;\n                        }\n\n                        //Prime the system by creating a module instance for\n                        //it.\n                        getModule(moduleMap);\n\n                        //Transfer any config to this other module.\n                        if (hasProp(config.config, id)) {\n                            config.config[moduleName] = config.config[id];\n                        }\n\n                        try {\n                            req.exec(text);\n                        } catch (e) {\n                            return onError(makeError('fromtexteval',\n                                'fromText eval for ' + id +\n                                    ' failed: ' + e,\n                                e,\n                                [id]));\n                        }\n\n                        if (hasInteractive) {\n                            useInteractive = true;\n                        }\n\n                        //Mark this as a dependency for the plugin\n                        //resource\n                        this.depMaps.push(moduleMap);\n\n                        //Support anonymous modules.\n                        context.completeLoad(moduleName);\n\n                        //Bind the value of that module to the value for this\n                        //resource ID.\n                        localRequire([moduleName], load);\n                    });\n\n                    //Use parentName here since the plugin's name is not reliable,\n                    //could be some weird string with no path that actually wants to\n                    //reference the parentName's path.\n                    plugin.load(map.name, localRequire, load, config);\n                }));\n\n                context.enable(pluginMap, this);\n                this.pluginMaps[pluginMap.id] = pluginMap;\n            },\n\n            enable: function () {\n                enabledRegistry[this.map.id] = this;\n                this.enabled = true;\n\n                //Set flag mentioning that the module is enabling,\n                //so that immediate calls to the defined callbacks\n                //for dependencies do not trigger inadvertent load\n                //with the depCount still being zero.\n                this.enabling = true;\n\n                //Enable each dependency\n                each(this.depMaps, bind(this, function (depMap, i) {\n                    var id, mod, handler;\n\n                    if (typeof depMap === 'string') {\n                        //Dependency needs to be converted to a depMap\n                        //and wired up to this module.\n                        depMap = makeModuleMap(depMap,\n                            (this.map.isDefine ? this.map : this.map.parentMap),\n                            false,\n                            !this.skipMap);\n                        this.depMaps[i] = depMap;\n\n                        handler = getOwn(handlers, depMap.id);\n\n                        if (handler) {\n                            this.depExports[i] = handler(this);\n                            return;\n                        }\n\n                        this.depCount += 1;\n\n                        on(depMap, 'defined', bind(this, function (depExports) {\n                            this.defineDep(i, depExports);\n                            this.check();\n                        }));\n\n                        if (this.errback) {\n                            on(depMap, 'error', bind(this, this.errback));\n                        }\n                    }\n\n                    id = depMap.id;\n                    mod = registry[id];\n\n                    //Skip special modules like 'require', 'exports', 'module'\n                    //Also, don't call enable if it is already enabled,\n                    //important in circular dependency cases.\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\n                        context.enable(depMap, this);\n                    }\n                }));\n\n                //Enable each plugin that is used in\n                //a dependency\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\n                    var mod = getOwn(registry, pluginMap.id);\n                    if (mod && !mod.enabled) {\n                        context.enable(pluginMap, this);\n                    }\n                }));\n\n                this.enabling = false;\n\n                this.check();\n            },\n\n            on: function (name, cb) {\n                var cbs = this.events[name];\n                if (!cbs) {\n                    cbs = this.events[name] = [];\n                }\n                cbs.push(cb);\n            },\n\n            emit: function (name, evt) {\n                each(this.events[name], function (cb) {\n                    cb(evt);\n                });\n                if (name === 'error') {\n                    //Now that the error handler was triggered, remove\n                    //the listeners, since this broken Module instance\n                    //can stay around for a while in the registry.\n                    delete this.events[name];\n                }\n            }\n        };\n\n        function callGetModule(args) {\n            //Skip modules already defined.\n            if (!hasProp(defined, args[0])) {\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\n            }\n        }\n\n        function removeListener(node, func, name, ieName) {\n            //Favor detachEvent because of IE9\n            //issue, see attachEvent/addEventListener comment elsewhere\n            //in this file.\n            if (node.detachEvent && !isOpera) {\n                //Probably IE. If not it will throw an error, which will be\n                //useful to know.\n                if (ieName) {\n                    node.detachEvent(ieName, func);\n                }\n            } else {\n                node.removeEventListener(name, func, false);\n            }\n        }\n\n        /**\n         * Given an event from a script node, get the requirejs info from it,\n         * and then removes the event listeners on the node.\n         * @param {Event} evt\n         * @returns {Object}\n         */\n        function getScriptData(evt) {\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\n            //all old browsers will be supported, but this one was easy enough\n            //to support and still makes sense.\n            var node = evt.currentTarget || evt.srcElement;\n\n            //Remove the listeners once here.\n            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\n            removeListener(node, context.onScriptError, 'error');\n\n            return {\n                node: node,\n                id: node && node.getAttribute('data-requiremodule')\n            };\n        }\n\n        function intakeDefines() {\n            var args;\n\n            //Any defined modules in the global queue, intake them now.\n            takeGlobalQueue();\n\n            //Make sure any remaining defQueue items get properly processed.\n            while (defQueue.length) {\n                args = defQueue.shift();\n                if (args[0] === null) {\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' + args[args.length - 1]));\n                } else {\n                    //args are id, deps, factory. Should be normalized by the\n                    //define() function.\n                    callGetModule(args);\n                }\n            }\n        }\n\n        context = {\n            config: config,\n            contextName: contextName,\n            registry: registry,\n            defined: defined,\n            urlFetched: urlFetched,\n            defQueue: defQueue,\n            Module: Module,\n            makeModuleMap: makeModuleMap,\n            nextTick: req.nextTick,\n            onError: onError,\n\n            /**\n             * Set a configuration for the context.\n             * @param {Object} cfg config object to integrate.\n             */\n            configure: function (cfg) {\n                //Make sure the baseUrl ends in a slash.\n                if (cfg.baseUrl) {\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\n                        cfg.baseUrl += '/';\n                    }\n                }\n\n                //Save off the paths and packages since they require special processing,\n                //they are additive.\n                var pkgs = config.pkgs,\n                    shim = config.shim,\n                    objs = {\n                        paths: true,\n                        config: true,\n                        map: true\n                    };\n\n                eachProp(cfg, function (value, prop) {\n                    if (objs[prop]) {\n                        if (prop === 'map') {\n                            if (!config.map) {\n                                config.map = {};\n                            }\n                            mixin(config[prop], value, true, true);\n                        } else {\n                            mixin(config[prop], value, true);\n                        }\n                    } else {\n                        config[prop] = value;\n                    }\n                });\n\n                //Merge shim\n                if (cfg.shim) {\n                    eachProp(cfg.shim, function (value, id) {\n                        //Normalize the structure\n                        if (isArray(value)) {\n                            value = {\n                                deps: value\n                            };\n                        }\n                        if ((value.exports || value.init) && !value.exportsFn) {\n                            value.exportsFn = context.makeShimExports(value);\n                        }\n                        shim[id] = value;\n                    });\n                    config.shim = shim;\n                }\n\n                //Adjust packages if necessary.\n                if (cfg.packages) {\n                    each(cfg.packages, function (pkgObj) {\n                        var location;\n\n                        pkgObj = typeof pkgObj === 'string' ? { name: pkgObj } : pkgObj;\n                        location = pkgObj.location;\n\n                        //Create a brand new object on pkgs, since currentPackages can\n                        //be passed in again, and config.pkgs is the internal transformed\n                        //state for all package configs.\n                        pkgs[pkgObj.name] = {\n                            name: pkgObj.name,\n                            location: location || pkgObj.name,\n                            //Remove leading dot in main, so main paths are normalized,\n                            //and remove any trailing .js, since different package\n                            //envs have different conventions: some use a module name,\n                            //some use a file name.\n                            main: (pkgObj.main || 'main')\n                                .replace(currDirRegExp, '')\n                                .replace(jsSuffixRegExp, '')\n                        };\n                    });\n\n                    //Done with modifications, assing packages back to context config\n                    config.pkgs = pkgs;\n                }\n\n                //If there are any \"waiting to execute\" modules in the registry,\n                //update the maps for them, since their info, like URLs to load,\n                //may have changed.\n                eachProp(registry, function (mod, id) {\n                    //If module already has init called, since it is too\n                    //late to modify them, and ignore unnormalized ones\n                    //since they are transient.\n                    if (!mod.inited && !mod.map.unnormalized) {\n                        mod.map = makeModuleMap(id);\n                    }\n                });\n\n                //If a deps array or a config callback is specified, then call\n                //require with those args. This is useful when require is defined as a\n                //config object before require.js is loaded.\n                if (cfg.deps || cfg.callback) {\n                    context.require(cfg.deps || [], cfg.callback);\n                }\n            },\n\n            makeShimExports: function (value) {\n                function fn() {\n                    var ret;\n                    if (value.init) {\n                        ret = value.init.apply(global, arguments);\n                    }\n                    return ret || (value.exports && getGlobal(value.exports));\n                }\n                return fn;\n            },\n\n            makeRequire: function (relMap, options) {\n                options = options || {};\n\n                function localRequire(deps, callback, errback) {\n                    var id, map, requireMod;\n\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\n                        callback.__requireJsBuild = true;\n                    }\n\n                    if (typeof deps === 'string') {\n                        if (isFunction(callback)) {\n                            //Invalid call\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\n                        }\n\n                        //If require|exports|module are requested, get the\n                        //value for them from the special handlers. Caveat:\n                        //this only works while module is being defined.\n                        if (relMap && hasProp(handlers, deps)) {\n                            return handlers[deps](registry[relMap.id]);\n                        }\n\n                        //Synchronous access to one module. If require.get is\n                        //available (as in the Node adapter), prefer that.\n                        if (req.get) {\n                            return req.get(context, deps, relMap, localRequire);\n                        }\n\n                        //Normalize module name, if it contains . or ..\n                        map = makeModuleMap(deps, relMap, false, true);\n                        id = map.id;\n\n                        if (!hasProp(defined, id)) {\n                            return onError(makeError('notloaded', 'Module name \"' +\n                                id +\n                                '\" has not been loaded yet for context: ' +\n                                contextName +\n                                (relMap ? '' : '. Use require([])')));\n                        }\n                        return defined[id];\n                    }\n\n                    //Grab defines waiting in the global queue.\n                    intakeDefines();\n\n                    //Mark all the dependencies as needing to be loaded.\n                    context.nextTick(function () {\n                        //Some defines could have been added since the\n                        //require call, collect them.\n                        intakeDefines();\n\n                        requireMod = getModule(makeModuleMap(null, relMap));\n\n                        //Store if map config should be applied to this require\n                        //call for dependencies.\n                        requireMod.skipMap = options.skipMap;\n\n                        requireMod.init(deps, callback, errback, {\n                            enabled: true\n                        });\n\n                        checkLoaded();\n                    });\n\n                    return localRequire;\n                }\n\n                mixin(localRequire, {\n                    isBrowser: isBrowser,\n\n                    /**\n                     * Converts a module name + .extension into an URL path.\n                     * *Requires* the use of a module name. It does not support using\n                     * plain URLs like nameToUrl.\n                     */\n                    toUrl: function (moduleNamePlusExt) {\n                        var ext,\n                            index = moduleNamePlusExt.lastIndexOf('.'),\n                            segment = moduleNamePlusExt.split('/')[0],\n                            isRelative = segment === '.' || segment === '..';\n\n                        //Have a file extension alias, and it is not the\n                        //dots from a relative path.\n                        if (index !== -1 && (!isRelative || index > 1)) {\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\n                        }\n\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\n                            relMap && relMap.id, true), ext,  true);\n                    },\n\n                    defined: function (id) {\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\n                    },\n\n                    specified: function (id) {\n                        id = makeModuleMap(id, relMap, false, true).id;\n                        return hasProp(defined, id) || hasProp(registry, id);\n                    }\n                });\n\n                //Only allow undef on top level require calls\n                if (!relMap) {\n                    localRequire.undef = function (id) {\n                        //Bind any waiting define() calls to this context,\n                        //fix for #408\n                        takeGlobalQueue();\n\n                        var map = makeModuleMap(id, relMap, true),\n                            mod = getOwn(registry, id);\n\n                        delete defined[id];\n                        delete urlFetched[map.url];\n                        delete undefEvents[id];\n\n                        if (mod) {\n                            //Hold on to listeners in case the\n                            //module will be attempted to be reloaded\n                            //using a different config.\n                            if (mod.events.defined) {\n                                undefEvents[id] = mod.events;\n                            }\n\n                            cleanRegistry(id);\n                        }\n                    };\n                }\n\n                return localRequire;\n            },\n\n            /**\n             * Called to enable a module if it is still in the registry\n             * awaiting enablement. A second arg, parent, the parent module,\n             * is passed in for context, when this method is overriden by\n             * the optimizer. Not shown here to keep code compact.\n             */\n            enable: function (depMap) {\n                var mod = getOwn(registry, depMap.id);\n                if (mod) {\n                    getModule(depMap).enable();\n                }\n            },\n\n            /**\n             * Internal method used by environment adapters to complete a load event.\n             * A load event could be a script load or just a load pass from a synchronous\n             * load call.\n             * @param {String} moduleName the name of the module to potentially complete.\n             */\n            completeLoad: function (moduleName) {\n                var found, args, mod,\n                    shim = getOwn(config.shim, moduleName) || {},\n                    shExports = shim.exports;\n\n                takeGlobalQueue();\n\n                while (defQueue.length) {\n                    args = defQueue.shift();\n                    if (args[0] === null) {\n                        args[0] = moduleName;\n                        //If already found an anonymous module and bound it\n                        //to this name, then this is some other anon module\n                        //waiting for its completeLoad to fire.\n                        if (found) {\n                            break;\n                        }\n                        found = true;\n                    } else if (args[0] === moduleName) {\n                        //Found matching define call for this script!\n                        found = true;\n                    }\n\n                    callGetModule(args);\n                }\n\n                //Do this after the cycle of callGetModule in case the result\n                //of those calls/init calls changes the registry.\n                mod = getOwn(registry, moduleName);\n\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\n                        if (hasPathFallback(moduleName)) {\n                            return;\n                        } else {\n                            return onError(makeError('nodefine',\n                                'No define call for ' + moduleName,\n                                null,\n                                [moduleName]));\n                        }\n                    } else {\n                        //A script that does not call define(), so just simulate\n                        //the call for it.\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\n                    }\n                }\n\n                checkLoaded();\n            },\n\n            /**\n             * Converts a module name to a file path. Supports cases where\n             * moduleName may actually be just an URL.\n             * Note that it **does not** call normalize on the moduleName,\n             * it is assumed to have already been normalized. This is an\n             * internal API, not a public one. Use toUrl for the public API.\n             */\n            nameToUrl: function (moduleName, ext, skipExt) {\n                var paths, pkgs, pkg, pkgPath, syms, i, parentModule, url,\n                    parentPath;\n\n                //If a colon is in the URL, it indicates a protocol is used and it is just\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\n                //or ends with .js, then assume the user meant to use an url and not a module id.\n                //The slash is important for protocol-less URLs as well as full paths.\n                if (req.jsExtRegExp.test(moduleName)) {\n                    //Just a plain path, not module name lookup, so just return it.\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\n                    //an extension, this method probably needs to be reworked.\n                    url = moduleName + (ext || '');\n                } else {\n                    //A module that needs to be converted to a path.\n                    paths = config.paths;\n                    pkgs = config.pkgs;\n\n                    syms = moduleName.split('/');\n                    //For each module name segment, see if there is a path\n                    //registered for it. Start with most specific name\n                    //and work up from it.\n                    for (i = syms.length; i > 0; i -= 1) {\n                        parentModule = syms.slice(0, i).join('/');\n                        pkg = getOwn(pkgs, parentModule);\n                        parentPath = getOwn(paths, parentModule);\n                        if (parentPath) {\n                            //If an array, it means there are a few choices,\n                            //Choose the one that is desired\n                            if (isArray(parentPath)) {\n                                parentPath = parentPath[0];\n                            }\n                            syms.splice(0, i, parentPath);\n                            break;\n                        } else if (pkg) {\n                            //If module name is just the package name, then looking\n                            //for the main module.\n                            if (moduleName === pkg.name) {\n                                pkgPath = pkg.location + '/' + pkg.main;\n                            } else {\n                                pkgPath = pkg.location;\n                            }\n                            syms.splice(0, i, pkgPath);\n                            break;\n                        }\n                    }\n\n                    //Join the path parts together, then figure out if baseUrl is needed.\n                    url = syms.join('/');\n                    url += (ext || (/\\?/.test(url) || skipExt ? '' : '.js'));\n                    url = (url.charAt(0) === '/' || url.match(/^[\\w\\+\\.\\-]+:/) ? '' : config.baseUrl) + url;\n                }\n\n                return config.urlArgs ? url +\n                    ((url.indexOf('?') === -1 ? '?' : '&') +\n                        config.urlArgs) : url;\n            },\n\n            //Delegates to req.load. Broken out as a separate function to\n            //allow overriding in the optimizer.\n            load: function (id, url) {\n                req.load(context, id, url);\n            },\n\n            /**\n             * Executes a module callback function. Broken out as a separate function\n             * solely to allow the build system to sequence the files in the built\n             * layer in the right sequence.\n             *\n             * @private\n             */\n            execCb: function (name, callback, args, exports) {\n                return callback.apply(exports, args);\n            },\n\n            /**\n             * callback for script loads, used to check status of loading.\n             *\n             * @param {Event} evt the event from the browser for the script\n             * that was loaded.\n             */\n            onScriptLoad: function (evt) {\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\n                //all old browsers will be supported, but this one was easy enough\n                //to support and still makes sense.\n                if (evt.type === 'load' ||\n                    (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\n                    //Reset interactive script so a script node is not held onto for\n                    //to long.\n                    interactiveScript = null;\n\n                    //Pull out the name of the module and the context.\n                    var data = getScriptData(evt);\n                    context.completeLoad(data.id);\n                }\n            },\n\n            /**\n             * Callback for script errors.\n             */\n            onScriptError: function (evt) {\n                var data = getScriptData(evt);\n                if (!hasPathFallback(data.id)) {\n                    return onError(makeError('scripterror', 'Script error for: ' + data.id, evt, [data.id]));\n                }\n            }\n        };\n\n        context.require = context.makeRequire();\n        return context;\n    }\n\n    /**\n     * Main entry point.\n     *\n     * If the only argument to require is a string, then the module that\n     * is represented by that string is fetched for the appropriate context.\n     *\n     * If the first argument is an array, then it will be treated as an array\n     * of dependency string names to fetch. An optional function callback can\n     * be specified to execute when all of those dependencies are available.\n     *\n     * Make a local req variable to help Caja compliance (it assumes things\n     * on a require that are not standardized), and to give a short\n     * name for minification/local scope use.\n     */\n    req = requirejs = function (deps, callback, errback, optional) {\n\n        //Find the right context, use default\n        var context, config,\n            contextName = defContextName;\n\n        // Determine if have config object in the call.\n        if (!isArray(deps) && typeof deps !== 'string') {\n            // deps is a config object\n            config = deps;\n            if (isArray(callback)) {\n                // Adjust args if there are dependencies\n                deps = callback;\n                callback = errback;\n                errback = optional;\n            } else {\n                deps = [];\n            }\n        }\n\n        if (config && config.context) {\n            contextName = config.context;\n        }\n\n        context = getOwn(contexts, contextName);\n        if (!context) {\n            context = contexts[contextName] = req.s.newContext(contextName);\n        }\n\n        if (config) {\n            context.configure(config);\n        }\n\n        return context.require(deps, callback, errback);\n    };\n\n    /**\n     * Support require.config() to make it easier to cooperate with other\n     * AMD loaders on globally agreed names.\n     */\n    req.config = function (config) {\n        return req(config);\n    };\n\n    /**\n     * Execute something after the current tick\n     * of the event loop. Override for other envs\n     * that have a better solution than setTimeout.\n     * @param  {Function} fn function to execute later.\n     */\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\n        setTimeout(fn, 4);\n    } : function (fn) { fn(); };\n\n    /**\n     * Export require as a global, but only if it does not already exist.\n     */\n    if (!require) {\n        require = req;\n    }\n\n    req.version = version;\n\n    //Used to filter out dependencies that are already paths.\n    req.jsExtRegExp = /^\\/|:|\\?|\\.js$/;\n    req.isBrowser = isBrowser;\n    s = req.s = {\n        contexts: contexts,\n        newContext: newContext\n    };\n\n    //Create default context.\n    req({});\n\n    //Exports some context-sensitive methods on global require.\n    each([\n        'toUrl',\n        'undef',\n        'defined',\n        'specified'\n    ], function (prop) {\n        //Reference from contexts instead of early binding to default context,\n        //so that during builds, the latest instance of the default context\n        //with its config gets used.\n        req[prop] = function () {\n            var ctx = contexts[defContextName];\n            return ctx.require[prop].apply(ctx, arguments);\n        };\n    });\n\n    if (isBrowser) {\n        head = s.head = document.getElementsByTagName('head')[0];\n        //If BASE tag is in play, using appendChild is a problem for IE6.\n        //When that browser dies, this can be removed. Details in this jQuery bug:\n        //http://dev.jquery.com/ticket/2709\n        baseElement = document.getElementsByTagName('base')[0];\n        if (baseElement) {\n            head = s.head = baseElement.parentNode;\n        }\n    }\n\n    /**\n     * Any errors that require explicitly generates will be passed to this\n     * function. Intercept/override it if you want custom error handling.\n     * @param {Error} err the error object.\n     */\n    req.onError = defaultOnError;\n\n    /**\n     * Does the request to load a module for the browser case.\n     * Make this a separate function to allow other environments\n     * to override it.\n     *\n     * @param {Object} context the require context to find state.\n     * @param {String} moduleName the name of the module.\n     * @param {Object} url the URL to the module.\n     */\n    req.load = function (context, moduleName, url) {\n        var config = (context && context.config) || {},\n            node;\n        if (isBrowser) {\n            //In the browser so use a script tag\n            node = config.xhtml ?\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\n                document.createElement('script');\n            node.type = config.scriptType || 'text/javascript';\n            node.charset = 'utf-8';\n            node.async = true;\n\n            node.setAttribute('data-requirecontext', context.contextName);\n            node.setAttribute('data-requiremodule', moduleName);\n\n            //Set up load listener. Test attachEvent first because IE9 has\n            //a subtle issue in its addEventListener and script onload firings\n            //that do not match the behavior of all other browsers with\n            //addEventListener support, which fire the onload event for a\n            //script right after the script execution. See:\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\n            //script execution mode.\n            if (node.attachEvent &&\n                //Check if node.attachEvent is artificially added by custom script or\n                //natively supported by browser\n                //read https://github.com/jrburke/requirejs/issues/187\n                //if we can NOT find [native code] then it must NOT natively supported.\n                //in IE8, node.attachEvent does not have toString()\n                //Note the test for \"[native code\" with no closing brace, see:\n                //https://github.com/jrburke/requirejs/issues/273\n                !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\n                !isOpera) {\n                //Probably IE. IE (at least 6-8) do not fire\n                //script onload right after executing the script, so\n                //we cannot tie the anonymous define call to a name.\n                //However, IE reports the script as being in 'interactive'\n                //readyState at the time of the define call.\n                useInteractive = true;\n\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\n                //It would be great to add an error handler here to catch\n                //404s in IE9+. However, onreadystatechange will fire before\n                //the error handler, so that does not help. If addEventListener\n                //is used, then IE will fire error before load, but we cannot\n                //use that pathway given the connect.microsoft.com issue\n                //mentioned above about not doing the 'script execute,\n                //then fire the script load event listener before execute\n                //next script' that other browsers do.\n                //Best hope: IE10 fixes the issues,\n                //and then destroys all installs of IE 6-9.\n                //node.attachEvent('onerror', context.onScriptError);\n            } else {\n                node.addEventListener('load', context.onScriptLoad, false);\n                node.addEventListener('error', context.onScriptError, false);\n            }\n            node.src = url;\n\n            //For some cache cases in IE 6-8, the script executes before the end\n            //of the appendChild execution, so to tie an anonymous define\n            //call to the module name (which is stored on the node), hold on\n            //to a reference to this node, but clear after the DOM insertion.\n            currentlyAddingScript = node;\n            if (baseElement) {\n                head.insertBefore(node, baseElement);\n            } else {\n                head.appendChild(node);\n            }\n            currentlyAddingScript = null;\n\n            return node;\n        } else if (isWebWorker) {\n            try {\n                //In a web worker, use importScripts. This is not a very\n                //efficient use of importScripts, importScripts will block until\n                //its script is downloaded and evaluated. However, if web workers\n                //are in play, the expectation that a build has been done so that\n                //only one script needs to be loaded anyway. This may need to be\n                //reevaluated if other use cases become common.\n                importScripts(url);\n\n                //Account for anonymous modules\n                context.completeLoad(moduleName);\n            } catch (e) {\n                context.onError(makeError('importscripts',\n                    'importScripts failed for ' +\n                        moduleName + ' at ' + url,\n                    e,\n                    [moduleName]));\n            }\n        }\n    };\n\n    function getInteractiveScript() {\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\n            return interactiveScript;\n        }\n\n        eachReverse(scripts(), function (script) {\n            if (script.readyState === 'interactive') {\n                return (interactiveScript = script);\n            }\n        });\n        return interactiveScript;\n    }\n\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\n    if (isBrowser) {\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\n        eachReverse(scripts(), function (script) {\n            //Set the 'head' where we can append children by\n            //using the script's parent.\n            if (!head) {\n                head = script.parentNode;\n            }\n\n            //Look for a data-main attribute to set main script for the page\n            //to load. If it is there, the path to data main becomes the\n            //baseUrl, if it is not already set.\n            dataMain = script.getAttribute('data-main');\n            if (dataMain) {\n                //Preserve dataMain in case it is a path (i.e. contains '?')\n                mainScript = dataMain;\n\n                //Set final baseUrl if there is not already an explicit one.\n                if (!cfg.baseUrl) {\n                    //Pull off the directory of data-main for use as the\n                    //baseUrl.\n                    src = mainScript.split('/');\n                    mainScript = src.pop();\n                    subPath = src.length ? src.join('/')  + '/' : './';\n\n                    cfg.baseUrl = subPath;\n                }\n\n                //Strip off any trailing .js since mainScript is now\n                //like a module name.\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\n\n                //If mainScript is still a path, fall back to dataMain\n                if (req.jsExtRegExp.test(mainScript)) {\n                    mainScript = dataMain;\n                }\n\n                //Put the data-main script in the files to load.\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\n\n                return true;\n            }\n        });\n    }\n\n    /**\n     * The function that handles definitions of modules. Differs from\n     * require() in that a string for the module should be the first argument,\n     * and the function to execute after dependencies are loaded should\n     * return a value to define the module corresponding to the first argument's\n     * name.\n     */\n    define = function (name, deps, callback) {\n        var node, context;\n\n        //Allow for anonymous modules\n        if (typeof name !== 'string') {\n            //Adjust args appropriately\n            callback = deps;\n            deps = name;\n            name = null;\n        }\n\n        //This module may not have dependencies\n        if (!isArray(deps)) {\n            callback = deps;\n            deps = null;\n        }\n\n        //If no name, and callback is a function, then figure out if it a\n        //CommonJS thing with dependencies.\n        if (!deps && isFunction(callback)) {\n            deps = [];\n            //Remove comments from the callback string,\n            //look for require calls, and pull them into the dependencies,\n            //but only if there are function args.\n            if (callback.length) {\n                callback\n                    .toString()\n                    .replace(commentRegExp, '')\n                    .replace(cjsRequireRegExp, function (match, dep) {\n                        deps.push(dep);\n                    });\n\n                //May be a CommonJS thing even without require calls, but still\n                //could use exports, and module. Avoid doing exports and module\n                //work though if it just needs require.\n                //REQUIRES the function to expect the CommonJS variables in the\n                //order listed below.\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\n            }\n        }\n\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\n        //work.\n        if (useInteractive) {\n            node = currentlyAddingScript || getInteractiveScript();\n            if (node) {\n                if (!name) {\n                    name = node.getAttribute('data-requiremodule');\n                }\n                context = contexts[node.getAttribute('data-requirecontext')];\n            }\n        }\n\n        //Always save off evaluating the def call until the script onload handler.\n        //This allows multiple modules to be in a file without prematurely\n        //tracing dependencies, and allows for anonymous module support,\n        //where the module name is not known until the script onload event\n        //occurs. If no context, use the global queue, and get it processed\n        //in the onscript load callback.\n        (context ? context.defQueue : globalDefQueue).push([name, deps, callback]);\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n\n\n    /**\n     * Executes the text. Normally just uses eval, but can be modified\n     * to use a better, environment-specific call. Only used for transpiling\n     * loader plugins, not for plain JS modules.\n     * @param {String} text the text to execute/evaluate.\n     */\n    req.exec = function (text) {\n        /*jslint evil: true */\n        return eval(text);\n    };\n\n    //Set up with config info.\n    req(cfg);\n}(this));\ndefine(\"../lib/require\", function(){});\n",
    "\n/* Zepto v1.0-1-ga3cab6c - polyfill zepto detect event ajax form fx - zeptojs.com/license */\n\n\n;(function(undefined){\n    if (String.prototype.trim === undefined) // fix for iOS 3.2\n        String.prototype.trim = function(){ return this.replace(/^\\s+|\\s+$/g, '') }\n\n    // For iOS 3.x\n    // from https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/reduce\n    if (Array.prototype.reduce === undefined)\n        Array.prototype.reduce = function(fun){\n            if(this === void 0 || this === null) throw new TypeError()\n            var t = Object(this), len = t.length >>> 0, k = 0, accumulator\n            if(typeof fun != 'function') throw new TypeError()\n            if(len == 0 && arguments.length == 1) throw new TypeError()\n\n            if(arguments.length >= 2)\n                accumulator = arguments[1]\n            else\n                do{\n                    if(k in t){\n                        accumulator = t[k++]\n                        break\n                    }\n                    if(++k >= len) throw new TypeError()\n                } while (true)\n\n            while (k < len){\n                if(k in t) accumulator = fun.call(undefined, accumulator, t[k], k, t)\n                k++\n            }\n            return accumulator\n        }\n\n})()\n\nvar Zepto = (function() {\n    var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,\n        document = window.document,\n        elementDisplay = {}, classCache = {},\n        getComputedStyle = document.defaultView.getComputedStyle,\n        cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n        tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n        rootNodeRE = /^(?:body|html)$/i,\n\n    // special attributes that should be get/set via method calls\n        methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\n        adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\n        table = document.createElement('table'),\n        tableRow = document.createElement('tr'),\n        containers = {\n            'tr': document.createElement('tbody'),\n            'tbody': table, 'thead': table, 'tfoot': table,\n            'td': tableRow, 'th': tableRow,\n            '*': document.createElement('div')\n        },\n        readyRE = /complete|loaded|interactive/,\n        classSelectorRE = /^\\.([\\w-]+)$/,\n        idSelectorRE = /^#([\\w-]*)$/,\n        tagSelectorRE = /^[\\w-]+$/,\n        class2type = {},\n        toString = class2type.toString,\n        zepto = {},\n        camelize, uniq,\n        tempParent = document.createElement('div')\n\n    zepto.matches = function(element, selector) {\n        if (!element || element.nodeType !== 1) return false\n        var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||\n            element.oMatchesSelector || element.matchesSelector\n        if (matchesSelector) return matchesSelector.call(element, selector)\n        // fall back to performing a selector:\n        var match, parent = element.parentNode, temp = !parent\n        if (temp) (parent = tempParent).appendChild(element)\n        match = ~zepto.qsa(parent, selector).indexOf(element)\n        temp && tempParent.removeChild(element)\n        return match\n    }\n\n    function type(obj) {\n        return obj == null ? String(obj) :\n            class2type[toString.call(obj)] || \"object\"\n    }\n\n    function isFunction(value) { return type(value) == \"function\" }\n    function isWindow(obj)     { return obj != null && obj == obj.window }\n    function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\n    function isObject(obj)     { return type(obj) == \"object\" }\n    function isPlainObject(obj) {\n        return isObject(obj) && !isWindow(obj) && obj.__proto__ == Object.prototype\n    }\n    function isArray(value) { return value instanceof Array }\n    function likeArray(obj) { return typeof obj.length == 'number' }\n\n    function compact(array) { return filter.call(array, function(item){ return item != null }) }\n    function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\n    camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\n    function dasherize(str) {\n        return str.replace(/::/g, '/')\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n            .replace(/_/g, '-')\n            .toLowerCase()\n    }\n    uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\n\n    function classRE(name) {\n        return name in classCache ?\n            classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\n    }\n\n    function maybeAddPx(name, value) {\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n    }\n\n    function defaultDisplay(nodeName) {\n        var element, display\n        if (!elementDisplay[nodeName]) {\n            element = document.createElement(nodeName)\n            document.body.appendChild(element)\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\n            element.parentNode.removeChild(element)\n            display == \"none\" && (display = \"block\")\n            elementDisplay[nodeName] = display\n        }\n        return elementDisplay[nodeName]\n    }\n\n    function children(element) {\n        return 'children' in element ?\n            slice.call(element.children) :\n            $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\n    }\n\n    // `$.zepto.fragment` takes a html string and an optional tag name\n    // to generate DOM nodes nodes from the given html string.\n    // The generated DOM nodes are returned as an array.\n    // This function can be overriden in plugins for example to make\n    // it compatible with browsers that don't support the DOM fully.\n    zepto.fragment = function(html, name, properties) {\n        if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\n        if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\n        if (!(name in containers)) name = '*'\n\n        var nodes, dom, container = containers[name]\n        container.innerHTML = '' + html\n        dom = $.each(slice.call(container.childNodes), function(){\n            container.removeChild(this)\n        })\n        if (isPlainObject(properties)) {\n            nodes = $(dom)\n            $.each(properties, function(key, value) {\n                if (methodAttributes.indexOf(key) > -1) nodes[key](value)\n                else nodes.attr(key, value)\n            })\n        }\n        return dom\n    }\n\n    // `$.zepto.Z` swaps out the prototype of the given `dom` array\n    // of nodes with `$.fn` and thus supplying all the Zepto functions\n    // to the array. Note that `__proto__` is not supported on Internet\n    // Explorer. This method can be overriden in plugins.\n    zepto.Z = function(dom, selector) {\n        dom = dom || []\n        dom.__proto__ = $.fn\n        dom.selector = selector || ''\n        return dom\n    }\n\n    // `$.zepto.isZ` should return `true` if the given object is a Zepto\n    // collection. This method can be overriden in plugins.\n    zepto.isZ = function(object) {\n        return object instanceof zepto.Z\n    }\n\n    // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\n    // takes a CSS selector and an optional context (and handles various\n    // special cases).\n    // This method can be overriden in plugins.\n    zepto.init = function(selector, context) {\n        // If nothing given, return an empty Zepto collection\n        if (!selector) return zepto.Z()\n        // If a function is given, call it when the DOM is ready\n        else if (isFunction(selector)) return $(document).ready(selector)\n        // If a Zepto collection is given, juts return it\n        else if (zepto.isZ(selector)) return selector\n        else {\n            var dom\n            // normalize array if an array of nodes is given\n            if (isArray(selector)) dom = compact(selector)\n            // Wrap DOM nodes. If a plain object is given, duplicate it.\n            else if (isObject(selector))\n                dom = [isPlainObject(selector) ? $.extend({}, selector) : selector], selector = null\n            // If it's a html fragment, create nodes from it\n            else if (fragmentRE.test(selector))\n                dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\n            // If there's a context, create a collection on that context first, and select\n            // nodes from there\n            else if (context !== undefined) return $(context).find(selector)\n            // And last but no least, if it's a CSS selector, use it to select nodes.\n            else dom = zepto.qsa(document, selector)\n            // create a new Zepto collection from the nodes found\n            return zepto.Z(dom, selector)\n        }\n    }\n\n    // `$` will be the base `Zepto` object. When calling this\n    // function just call `$.zepto.init, which makes the implementation\n    // details of selecting nodes and creating Zepto collections\n    // patchable in plugins.\n    $ = function(selector, context){\n        return zepto.init(selector, context)\n    }\n\n    function extend(target, source, deep) {\n        for (key in source)\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n                if (isPlainObject(source[key]) && !isPlainObject(target[key]))\n                    target[key] = {}\n                if (isArray(source[key]) && !isArray(target[key]))\n                    target[key] = []\n                extend(target[key], source[key], deep)\n            }\n            else if (source[key] !== undefined) target[key] = source[key]\n    }\n\n    // Copy all but undefined properties from one or more\n    // objects to the `target` object.\n    $.extend = function(target){\n        var deep, args = slice.call(arguments, 1)\n        if (typeof target == 'boolean') {\n            deep = target\n            target = args.shift()\n        }\n        args.forEach(function(arg){ extend(target, arg, deep) })\n        return target\n    }\n\n    // `$.zepto.qsa` is Zepto's CSS selector implementation which\n    // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\n    // This method can be overriden in plugins.\n    zepto.qsa = function(element, selector){\n        var found\n        return (isDocument(element) && idSelectorRE.test(selector)) ?\n            ( (found = element.getElementById(RegExp.$1)) ? [found] : [] ) :\n            (element.nodeType !== 1 && element.nodeType !== 9) ? [] :\n                slice.call(\n                    classSelectorRE.test(selector) ? element.getElementsByClassName(RegExp.$1) :\n                        tagSelectorRE.test(selector) ? element.getElementsByTagName(selector) :\n                            element.querySelectorAll(selector)\n                )\n    }\n\n    function filtered(nodes, selector) {\n        return selector === undefined ? $(nodes) : $(nodes).filter(selector)\n    }\n\n    $.contains = function(parent, node) {\n        return parent !== node && parent.contains(node)\n    }\n\n    function funcArg(context, arg, idx, payload) {\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg\n    }\n\n    function setAttribute(node, name, value) {\n        value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\n    }\n\n    // access className property while respecting SVGAnimatedString\n    function className(node, value){\n        var klass = node.className,\n            svg   = klass && klass.baseVal !== undefined\n\n        if (value === undefined) return svg ? klass.baseVal : klass\n        svg ? (klass.baseVal = value) : (node.className = value)\n    }\n\n    // \"true\"  => true\n    // \"false\" => false\n    // \"null\"  => null\n    // \"42\"    => 42\n    // \"42.5\"  => 42.5\n    // JSON    => parse if valid\n    // String  => self\n    function deserializeValue(value) {\n        var num\n        try {\n            return value ?\n                value == \"true\" ||\n                    ( value == \"false\" ? false :\n                        value == \"null\" ? null :\n                            !isNaN(num = Number(value)) ? num :\n                                /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\n                                    value )\n                : value\n        } catch(e) {\n            return value\n        }\n    }\n\n    $.type = type\n    $.isFunction = isFunction\n    $.isWindow = isWindow\n    $.isArray = isArray\n    $.isPlainObject = isPlainObject\n\n    $.isEmptyObject = function(obj) {\n        var name\n        for (name in obj) return false\n        return true\n    }\n\n    $.inArray = function(elem, array, i){\n        return emptyArray.indexOf.call(array, elem, i)\n    }\n\n    $.camelCase = camelize\n    $.trim = function(str) { return str.trim() }\n\n    // plugin compatibility\n    $.uuid = 0\n    $.support = { }\n    $.expr = { }\n\n    $.map = function(elements, callback){\n        var value, values = [], i, key\n        if (likeArray(elements))\n            for (i = 0; i < elements.length; i++) {\n                value = callback(elements[i], i)\n                if (value != null) values.push(value)\n            }\n        else\n            for (key in elements) {\n                value = callback(elements[key], key)\n                if (value != null) values.push(value)\n            }\n        return flatten(values)\n    }\n\n    $.each = function(elements, callback){\n        var i, key\n        if (likeArray(elements)) {\n            for (i = 0; i < elements.length; i++)\n                if (callback.call(elements[i], i, elements[i]) === false) return elements\n        } else {\n            for (key in elements)\n                if (callback.call(elements[key], key, elements[key]) === false) return elements\n        }\n\n        return elements\n    }\n\n    $.grep = function(elements, callback){\n        return filter.call(elements, callback)\n    }\n\n    if (window.JSON) $.parseJSON = JSON.parse\n\n    // Populate the class2type map\n    $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n        class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\n    })\n\n    // Define methods that will be available on all\n    // Zepto collections\n    $.fn = {\n        // Because a collection acts like an array\n        // copy over these useful array functions.\n        forEach: emptyArray.forEach,\n        reduce: emptyArray.reduce,\n        push: emptyArray.push,\n        sort: emptyArray.sort,\n        indexOf: emptyArray.indexOf,\n        concat: emptyArray.concat,\n\n        // `map` and `slice` in the jQuery API work differently\n        // from their array counterparts\n        map: function(fn){\n            return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\n        },\n        slice: function(){\n            return $(slice.apply(this, arguments))\n        },\n\n        ready: function(callback){\n            if (readyRE.test(document.readyState)) callback($)\n            else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\n            return this\n        },\n        get: function(idx){\n            return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n        },\n        toArray: function(){ return this.get() },\n        size: function(){\n            return this.length\n        },\n        remove: function(){\n            return this.each(function(){\n                if (this.parentNode != null)\n                    this.parentNode.removeChild(this)\n            })\n        },\n        each: function(callback){\n            emptyArray.every.call(this, function(el, idx){\n                return callback.call(el, idx, el) !== false\n            })\n            return this\n        },\n        filter: function(selector){\n            if (isFunction(selector)) return this.not(this.not(selector))\n            return $(filter.call(this, function(element){\n                return zepto.matches(element, selector)\n            }))\n        },\n        add: function(selector,context){\n            return $(uniq(this.concat($(selector,context))))\n        },\n        is: function(selector){\n            return this.length > 0 && zepto.matches(this[0], selector)\n        },\n        not: function(selector){\n            var nodes=[]\n            if (isFunction(selector) && selector.call !== undefined)\n                this.each(function(idx){\n                    if (!selector.call(this,idx)) nodes.push(this)\n                })\n            else {\n                var excludes = typeof selector == 'string' ? this.filter(selector) :\n                    (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n                this.forEach(function(el){\n                    if (excludes.indexOf(el) < 0) nodes.push(el)\n                })\n            }\n            return $(nodes)\n        },\n        has: function(selector){\n            return this.filter(function(){\n                return isObject(selector) ?\n                    $.contains(this, selector) :\n                    $(this).find(selector).size()\n            })\n        },\n        eq: function(idx){\n            return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\n        },\n        first: function(){\n            var el = this[0]\n            return el && !isObject(el) ? el : $(el)\n        },\n        last: function(){\n            var el = this[this.length - 1]\n            return el && !isObject(el) ? el : $(el)\n        },\n        find: function(selector){\n            var result, $this = this\n            if (typeof selector == 'object')\n                result = $(selector).filter(function(){\n                    var node = this\n                    return emptyArray.some.call($this, function(parent){\n                        return $.contains(parent, node)\n                    })\n                })\n            else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\n            else result = this.map(function(){ return zepto.qsa(this, selector) })\n            return result\n        },\n        closest: function(selector, context){\n            var node = this[0], collection = false\n            if (typeof selector == 'object') collection = $(selector)\n            while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\n                node = node !== context && !isDocument(node) && node.parentNode\n            return $(node)\n        },\n        parents: function(selector){\n            var ancestors = [], nodes = this\n            while (nodes.length > 0)\n                nodes = $.map(nodes, function(node){\n                    if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n                        ancestors.push(node)\n                        return node\n                    }\n                })\n            return filtered(ancestors, selector)\n        },\n        parent: function(selector){\n            return filtered(uniq(this.pluck('parentNode')), selector)\n        },\n        children: function(selector){\n            return filtered(this.map(function(){ return children(this) }), selector)\n        },\n        contents: function() {\n            return this.map(function() { return slice.call(this.childNodes) })\n        },\n        siblings: function(selector){\n            return filtered(this.map(function(i, el){\n                return filter.call(children(el.parentNode), function(child){ return child!==el })\n            }), selector)\n        },\n        empty: function(){\n            return this.each(function(){ this.innerHTML = '' })\n        },\n        // `pluck` is borrowed from Prototype.js\n        pluck: function(property){\n            return $.map(this, function(el){ return el[property] })\n        },\n        show: function(){\n            return this.each(function(){\n                this.style.display == \"none\" && (this.style.display = null)\n                if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\n                    this.style.display = defaultDisplay(this.nodeName)\n            })\n        },\n        replaceWith: function(newContent){\n            return this.before(newContent).remove()\n        },\n        wrap: function(structure){\n            var func = isFunction(structure)\n            if (this[0] && !func)\n                var dom   = $(structure).get(0),\n                    clone = dom.parentNode || this.length > 1\n\n            return this.each(function(index){\n                $(this).wrapAll(\n                    func ? structure.call(this, index) :\n                        clone ? dom.cloneNode(true) : dom\n                )\n            })\n        },\n        wrapAll: function(structure){\n            if (this[0]) {\n                $(this[0]).before(structure = $(structure))\n                var children\n                // drill down to the inmost element\n                while ((children = structure.children()).length) structure = children.first()\n                $(structure).append(this)\n            }\n            return this\n        },\n        wrapInner: function(structure){\n            var func = isFunction(structure)\n            return this.each(function(index){\n                var self = $(this), contents = self.contents(),\n                    dom  = func ? structure.call(this, index) : structure\n                contents.length ? contents.wrapAll(dom) : self.append(dom)\n            })\n        },\n        unwrap: function(){\n            this.parent().each(function(){\n                $(this).replaceWith($(this).children())\n            })\n            return this\n        },\n        clone: function(){\n            return this.map(function(){ return this.cloneNode(true) })\n        },\n        hide: function(){\n            return this.css(\"display\", \"none\")\n        },\n        toggle: function(setting){\n            return this.each(function(){\n                var el = $(this)\n                    ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n            })\n        },\n        prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\n        next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\n        html: function(html){\n            return html === undefined ?\n                (this.length > 0 ? this[0].innerHTML : null) :\n                this.each(function(idx){\n                    var originHtml = this.innerHTML\n                    $(this).empty().append( funcArg(this, html, idx, originHtml) )\n                })\n        },\n        text: function(text){\n            return text === undefined ?\n                (this.length > 0 ? this[0].textContent : null) :\n                this.each(function(){ this.textContent = text })\n        },\n        attr: function(name, value){\n            var result\n            return (typeof name == 'string' && value === undefined) ?\n                (this.length == 0 || this[0].nodeType !== 1 ? undefined :\n                    (name == 'value' && this[0].nodeName == 'INPUT') ? this.val() :\n                        (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result\n                    ) :\n                this.each(function(idx){\n                    if (this.nodeType !== 1) return\n                    if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\n                    else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\n                })\n        },\n        removeAttr: function(name){\n            return this.each(function(){ this.nodeType === 1 && setAttribute(this, name) })\n        },\n        prop: function(name, value){\n            return (value === undefined) ?\n                (this[0] && this[0][name]) :\n                this.each(function(idx){\n                    this[name] = funcArg(this, value, idx, this[name])\n                })\n        },\n        data: function(name, value){\n            var data = this.attr('data-' + dasherize(name), value)\n            return data !== null ? deserializeValue(data) : undefined\n        },\n        val: function(value){\n            return (value === undefined) ?\n                (this[0] && (this[0].multiple ?\n                    $(this[0]).find('option').filter(function(o){ return this.selected }).pluck('value') :\n                    this[0].value)\n                    ) :\n                this.each(function(idx){\n                    this.value = funcArg(this, value, idx, this.value)\n                })\n        },\n        offset: function(coordinates){\n            if (coordinates) return this.each(function(index){\n                var $this = $(this),\n                    coords = funcArg(this, coordinates, index, $this.offset()),\n                    parentOffset = $this.offsetParent().offset(),\n                    props = {\n                        top:  coords.top  - parentOffset.top,\n                        left: coords.left - parentOffset.left\n                    }\n\n                if ($this.css('position') == 'static') props['position'] = 'relative'\n                $this.css(props)\n            })\n            if (this.length==0) return null\n            var obj = this[0].getBoundingClientRect()\n            return {\n                left: obj.left + window.pageXOffset,\n                top: obj.top + window.pageYOffset,\n                width: Math.round(obj.width),\n                height: Math.round(obj.height)\n            }\n        },\n        css: function(property, value){\n            if (arguments.length < 2 && typeof property == 'string')\n                return this[0] && (this[0].style[camelize(property)] || getComputedStyle(this[0], '').getPropertyValue(property))\n\n            var css = ''\n            if (type(property) == 'string') {\n                if (!value && value !== 0)\n                    this.each(function(){ this.style.removeProperty(dasherize(property)) })\n                else\n                    css = dasherize(property) + \":\" + maybeAddPx(property, value)\n            } else {\n                for (key in property)\n                    if (!property[key] && property[key] !== 0)\n                        this.each(function(){ this.style.removeProperty(dasherize(key)) })\n                    else\n                        css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n            }\n\n            return this.each(function(){ this.style.cssText += ';' + css })\n        },\n        index: function(element){\n            return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\n        },\n        hasClass: function(name){\n            return emptyArray.some.call(this, function(el){\n                return this.test(className(el))\n            }, classRE(name))\n        },\n        addClass: function(name){\n            return this.each(function(idx){\n                classList = []\n                var cls = className(this), newName = funcArg(this, name, idx, cls)\n                newName.split(/\\s+/g).forEach(function(klass){\n                    if (!$(this).hasClass(klass)) classList.push(klass)\n                }, this)\n                classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\n            })\n        },\n        removeClass: function(name){\n            return this.each(function(idx){\n                if (name === undefined) return className(this, '')\n                classList = className(this)\n                funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\n                    classList = classList.replace(classRE(klass), \" \")\n                })\n                className(this, classList.trim())\n            })\n        },\n        toggleClass: function(name, when){\n            return this.each(function(idx){\n                var $this = $(this), names = funcArg(this, name, idx, className(this))\n                names.split(/\\s+/g).forEach(function(klass){\n                    (when === undefined ? !$this.hasClass(klass) : when) ?\n                        $this.addClass(klass) : $this.removeClass(klass)\n                })\n            })\n        },\n        scrollTop: function(){\n            if (!this.length) return\n            return ('scrollTop' in this[0]) ? this[0].scrollTop : this[0].scrollY\n        },\n        position: function() {\n            if (!this.length) return\n\n            var elem = this[0],\n            // Get *real* offsetParent\n                offsetParent = this.offsetParent(),\n            // Get correct offsets\n                offset       = this.offset(),\n                parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\n\n            // Subtract element margins\n            // note: when an element has margin: auto the offsetLeft and marginLeft\n            // are the same in Safari causing offset.left to incorrectly be 0\n            offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\n            offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\n\n            // Add offsetParent borders\n            parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\n            parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\n\n            // Subtract the two offsets\n            return {\n                top:  offset.top  - parentOffset.top,\n                left: offset.left - parentOffset.left\n            }\n        },\n        offsetParent: function() {\n            return this.map(function(){\n                var parent = this.offsetParent || document.body\n                while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\n                    parent = parent.offsetParent\n                return parent\n            })\n        }\n    }\n\n    // for now\n    $.fn.detach = $.fn.remove\n\n        // Generate the `width` and `height` functions\n    ;['width', 'height'].forEach(function(dimension){\n        $.fn[dimension] = function(value){\n            var offset, el = this[0],\n                Dimension = dimension.replace(/./, function(m){ return m[0].toUpperCase() })\n            if (value === undefined) return isWindow(el) ? el['inner' + Dimension] :\n                isDocument(el) ? el.documentElement['offset' + Dimension] :\n                    (offset = this.offset()) && offset[dimension]\n            else return this.each(function(idx){\n                el = $(this)\n                el.css(dimension, funcArg(this, value, idx, el[dimension]()))\n            })\n        }\n    })\n\n    function traverseNode(node, fun) {\n        fun(node)\n        for (var key in node.childNodes) traverseNode(node.childNodes[key], fun)\n    }\n\n    // Generate the `after`, `prepend`, `before`, `append`,\n    // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\n    adjacencyOperators.forEach(function(operator, operatorIndex) {\n        var inside = operatorIndex % 2 //=> prepend, append\n\n        $.fn[operator] = function(){\n            // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\n            var argType, nodes = $.map(arguments, function(arg) {\n                    argType = type(arg)\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\n                        arg : zepto.fragment(arg)\n                }),\n                parent, copyByClone = this.length > 1\n            if (nodes.length < 1) return this\n\n            return this.each(function(_, target){\n                parent = inside ? target : target.parentNode\n\n                // convert all methods to a \"before\" operation\n                target = operatorIndex == 0 ? target.nextSibling :\n                    operatorIndex == 1 ? target.firstChild :\n                        operatorIndex == 2 ? target :\n                            null\n\n                nodes.forEach(function(node){\n                    if (copyByClone) node = node.cloneNode(true)\n                    else if (!parent) return $(node).remove()\n\n                    traverseNode(parent.insertBefore(node, target), function(el){\n                        if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\n                            (!el.type || el.type === 'text/javascript') && !el.src)\n                            window['eval'].call(window, el.innerHTML)\n                    })\n                })\n            })\n        }\n\n        // after    => insertAfter\n        // prepend  => prependTo\n        // before   => insertBefore\n        // append   => appendTo\n        $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\n            $(html)[operator](this)\n            return this\n        }\n    })\n\n    zepto.Z.prototype = $.fn\n\n    // Export internal API functions in the `$.zepto` namespace\n    zepto.uniq = uniq\n    zepto.deserializeValue = deserializeValue\n    $.zepto = zepto\n\n    return $\n})()\n\nwindow.Zepto = Zepto\n'$' in window || (window.$ = Zepto)\n\n;(function($){\n    function detect(ua){\n        var os = this.os = {}, browser = this.browser = {},\n            webkit = ua.match(/WebKit\\/([\\d.]+)/),\n            android = ua.match(/(Android)\\s+([\\d.]+)/),\n            ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/),\n            iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/),\n            webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/),\n            touchpad = webos && ua.match(/TouchPad/),\n            kindle = ua.match(/Kindle\\/([\\d.]+)/),\n            silk = ua.match(/Silk\\/([\\d._]+)/),\n            blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/),\n            bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/),\n            rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/),\n            playbook = ua.match(/PlayBook/),\n            chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/),\n            firefox = ua.match(/Firefox\\/([\\d.]+)/)\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        if (browser.webkit = !!webkit) browser.version = webkit[1]\n\n        if (android) os.android = true, os.version = android[2]\n        if (iphone) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.')\n        if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.')\n        if (webos) os.webos = true, os.version = webos[2]\n        if (touchpad) os.touchpad = true\n        if (blackberry) os.blackberry = true, os.version = blackberry[2]\n        if (bb10) os.bb10 = true, os.version = bb10[2]\n        if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2]\n        if (playbook) browser.playbook = true\n        if (kindle) os.kindle = true, os.version = kindle[1]\n        if (silk) browser.silk = true, browser.version = silk[1]\n        if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true\n        if (chrome) browser.chrome = true, browser.version = chrome[1]\n        if (firefox) browser.firefox = true, browser.version = firefox[1]\n\n        os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) || (firefox && ua.match(/Tablet/)))\n        os.phone  = !!(!os.tablet && (android || iphone || webos || blackberry || bb10 ||\n            (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) || (firefox && ua.match(/Mobile/))))\n    }\n\n    detect.call($, navigator.userAgent)\n    // make available to unit tests\n    $.__detect = detect\n\n})(Zepto)\n\n;(function($){\n    var $$ = $.zepto.qsa, handlers = {}, _zid = 1, specialEvents={},\n        hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\n\n    specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\n\n    function zid(element) {\n        return element._zid || (element._zid = _zid++)\n    }\n    function findHandlers(element, event, fn, selector) {\n        event = parse(event)\n        if (event.ns) var matcher = matcherFor(event.ns)\n        return (handlers[zid(element)] || []).filter(function(handler) {\n            return handler\n                && (!event.e  || handler.e == event.e)\n                && (!event.ns || matcher.test(handler.ns))\n                && (!fn       || zid(handler.fn) === zid(fn))\n                && (!selector || handler.sel == selector)\n        })\n    }\n    function parse(event) {\n        var parts = ('' + event).split('.')\n        return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\n    }\n    function matcherFor(ns) {\n        return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\n    }\n\n    function eachEvent(events, fn, iterator){\n        if ($.type(events) != \"string\") $.each(events, iterator)\n        else events.split(/\\s/).forEach(function(type){ iterator(type, fn) })\n    }\n\n    function eventCapture(handler, captureSetting) {\n        return handler.del &&\n            (handler.e == 'focus' || handler.e == 'blur') ||\n            !!captureSetting\n    }\n\n    function realEvent(type) {\n        return hover[type] || type\n    }\n\n    function add(element, events, fn, selector, getDelegate, capture){\n        var id = zid(element), set = (handlers[id] || (handlers[id] = []))\n        eachEvent(events, fn, function(event, fn){\n            var handler   = parse(event)\n            handler.fn    = fn\n            handler.sel   = selector\n            // emulate mouseenter, mouseleave\n            if (handler.e in hover) fn = function(e){\n                var related = e.relatedTarget\n                if (!related || (related !== this && !$.contains(this, related)))\n                    return handler.fn.apply(this, arguments)\n            }\n            handler.del   = getDelegate && getDelegate(fn, event)\n            var callback  = handler.del || fn\n            handler.proxy = function (e) {\n                var result = callback.apply(element, [e].concat(e.data))\n                if (result === false) e.preventDefault(), e.stopPropagation()\n                return result\n            }\n            handler.i = set.length\n            set.push(handler)\n            element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n        })\n    }\n    function remove(element, events, fn, selector, capture){\n        var id = zid(element)\n        eachEvent(events || '', fn, function(event, fn){\n            findHandlers(element, event, fn, selector).forEach(function(handler){\n                delete handlers[id][handler.i]\n                element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n            })\n        })\n    }\n\n    $.event = { add: add, remove: remove }\n\n    $.proxy = function(fn, context) {\n        if ($.isFunction(fn)) {\n            var proxyFn = function(){ return fn.apply(context, arguments) }\n            proxyFn._zid = zid(fn)\n            return proxyFn\n        } else if (typeof context == 'string') {\n            return $.proxy(fn[context], fn)\n        } else {\n            throw new TypeError(\"expected function\")\n        }\n    }\n\n    $.fn.bind = function(event, callback){\n        return this.each(function(){\n            add(this, event, callback)\n        })\n    }\n    $.fn.unbind = function(event, callback){\n        return this.each(function(){\n            remove(this, event, callback)\n        })\n    }\n    $.fn.one = function(event, callback){\n        return this.each(function(i, element){\n            add(this, event, callback, null, function(fn, type){\n                return function(){\n                    var result = fn.apply(element, arguments)\n                    remove(element, type, fn)\n                    return result\n                }\n            })\n        })\n    }\n\n    var returnTrue = function(){return true},\n        returnFalse = function(){return false},\n        ignoreProperties = /^([A-Z]|layer[XY]$)/,\n        eventMethods = {\n            preventDefault: 'isDefaultPrevented',\n            stopImmediatePropagation: 'isImmediatePropagationStopped',\n            stopPropagation: 'isPropagationStopped'\n        }\n    function createProxy(event) {\n        var key, proxy = { originalEvent: event }\n        for (key in event)\n            if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\n\n        $.each(eventMethods, function(name, predicate) {\n            proxy[name] = function(){\n                this[predicate] = returnTrue\n                return event[name].apply(event, arguments)\n            }\n            proxy[predicate] = returnFalse\n        })\n        return proxy\n    }\n\n    // emulates the 'defaultPrevented' property for browsers that have none\n    function fix(event) {\n        if (!('defaultPrevented' in event)) {\n            event.defaultPrevented = false\n            var prevent = event.preventDefault\n            event.preventDefault = function() {\n                this.defaultPrevented = true\n                prevent.call(this)\n            }\n        }\n    }\n\n    $.fn.delegate = function(selector, event, callback){\n        return this.each(function(i, element){\n            add(element, event, callback, selector, function(fn){\n                return function(e){\n                    var evt, match = $(e.target).closest(selector, element).get(0)\n                    if (match) {\n                        evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\n                        return fn.apply(match, [evt].concat([].slice.call(arguments, 1)))\n                    }\n                }\n            })\n        })\n    }\n    $.fn.undelegate = function(selector, event, callback){\n        return this.each(function(){\n            remove(this, event, callback, selector)\n        })\n    }\n\n    $.fn.live = function(event, callback){\n        $(document.body).delegate(this.selector, event, callback)\n        return this\n    }\n    $.fn.die = function(event, callback){\n        $(document.body).undelegate(this.selector, event, callback)\n        return this\n    }\n\n    $.fn.on = function(event, selector, callback){\n        return !selector || $.isFunction(selector) ?\n            this.bind(event, selector || callback) : this.delegate(selector, event, callback)\n    }\n    $.fn.off = function(event, selector, callback){\n        return !selector || $.isFunction(selector) ?\n            this.unbind(event, selector || callback) : this.undelegate(selector, event, callback)\n    }\n\n    $.fn.trigger = function(event, data){\n        if (typeof event == 'string' || $.isPlainObject(event)) event = $.Event(event)\n        fix(event)\n        event.data = data\n        return this.each(function(){\n            // items in the collection might not be DOM elements\n            // (todo: possibly support events on plain old objects)\n            if('dispatchEvent' in this) this.dispatchEvent(event)\n        })\n    }\n\n    // triggers event handlers on current element just as if an event occurred,\n    // doesn't trigger an actual event, doesn't bubble\n    $.fn.triggerHandler = function(event, data){\n        var e, result\n        this.each(function(i, element){\n            e = createProxy(typeof event == 'string' ? $.Event(event) : event)\n            e.data = data\n            e.target = element\n            $.each(findHandlers(element, event.type || event), function(i, handler){\n                result = handler.proxy(e)\n                if (e.isImmediatePropagationStopped()) return false\n            })\n        })\n        return result\n    }\n\n        // shortcut methods for `.bind(event, fn)` for each event type\n    ;('focusin focusout load resize scroll unload click dblclick '+\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\n        'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n            $.fn[event] = function(callback) {\n                return callback ?\n                    this.bind(event, callback) :\n                    this.trigger(event)\n            }\n        })\n\n    ;['focus', 'blur'].forEach(function(name) {\n        $.fn[name] = function(callback) {\n            if (callback) this.bind(name, callback)\n            else this.each(function(){\n                try { this[name]() }\n                catch(e) {}\n            })\n            return this\n        }\n    })\n\n    $.Event = function(type, props) {\n        if (typeof type != 'string') props = type, type = props.type\n        var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\n        if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\n        event.initEvent(type, bubbles, true, null, null, null, null, null, null, null, null, null, null, null, null)\n        event.isDefaultPrevented = function(){ return this.defaultPrevented }\n        return event\n    }\n\n})(Zepto)\n\n;(function($){\n    var jsonpID = 0,\n        document = window.document,\n        key,\n        name,\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\n        jsonType = 'application/json',\n        htmlType = 'text/html',\n        blankRE = /^\\s*$/\n\n    // trigger a custom event and return false if it was cancelled\n    function triggerAndReturn(context, eventName, data) {\n        var event = $.Event(eventName)\n        $(context).trigger(event, data)\n        return !event.defaultPrevented\n    }\n\n    // trigger an Ajax \"global\" event\n    function triggerGlobal(settings, context, eventName, data) {\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\n    }\n\n    // Number of active Ajax requests\n    $.active = 0\n\n    function ajaxStart(settings) {\n        if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n    }\n    function ajaxStop(settings) {\n        if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n    }\n\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n    function ajaxBeforeSend(xhr, settings) {\n        var context = settings.context\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n            return false\n\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n    }\n    function ajaxSuccess(data, xhr, settings) {\n        var context = settings.context, status = 'success'\n        settings.success.call(context, data, status, xhr)\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n        ajaxComplete(status, xhr, settings)\n    }\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n    function ajaxError(error, type, xhr, settings) {\n        var context = settings.context\n        settings.error.call(context, xhr, type, error)\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error])\n        ajaxComplete(type, xhr, settings)\n    }\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n    function ajaxComplete(status, xhr, settings) {\n        var context = settings.context\n        settings.complete.call(context, xhr, status)\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n        ajaxStop(settings)\n    }\n\n    // Empty function, used as default callback\n    function empty() {}\n\n    $.ajaxJSONP = function(options){\n        if (!('type' in options)) return $.ajax(options)\n\n        var callbackName = 'jsonp' + (++jsonpID),\n            script = document.createElement('script'),\n            cleanup = function() {\n                clearTimeout(abortTimeout)\n                $(script).remove()\n                delete window[callbackName]\n            },\n            abort = function(type){\n                cleanup()\n                // In case of manual abort or timeout, keep an empty function as callback\n                // so that the SCRIPT tag that eventually loads won't result in an error.\n                if (!type || type == 'timeout') window[callbackName] = empty\n                ajaxError(null, type || 'abort', xhr, options)\n            },\n            xhr = { abort: abort }, abortTimeout\n\n        if (ajaxBeforeSend(xhr, options) === false) {\n            abort('abort')\n            return false\n        }\n\n        window[callbackName] = function(data){\n            cleanup()\n            ajaxSuccess(data, xhr, options)\n        }\n\n        script.onerror = function() { abort('error') }\n\n        script.src = options.url.replace(/=\\?/, '=' + callbackName)\n        $('head').append(script)\n\n        if (options.timeout > 0) abortTimeout = setTimeout(function(){\n            abort('timeout')\n        }, options.timeout)\n\n        return xhr\n    }\n\n    $.ajaxSettings = {\n        // Default type of request\n        type: 'GET',\n        // Callback that is executed before request\n        beforeSend: empty,\n        // Callback that is executed if the request succeeds\n        success: empty,\n        // Callback that is executed the the server drops error\n        error: empty,\n        // Callback that is executed on request complete (both: error and success)\n        complete: empty,\n        // The context for the callbacks\n        context: null,\n        // Whether to trigger \"global\" Ajax events\n        global: true,\n        // Transport\n        xhr: function () {\n            return new window.XMLHttpRequest()\n        },\n        // MIME types mapping\n        accepts: {\n            script: 'text/javascript, application/javascript',\n            json:   jsonType,\n            xml:    'application/xml, text/xml',\n            html:   htmlType,\n            text:   'text/plain'\n        },\n        // Whether the request is to another domain\n        crossDomain: false,\n        // Default timeout\n        timeout: 0,\n        // Whether data should be serialized to string\n        processData: true,\n        // Whether the browser should be allowed to cache GET responses\n        cache: true,\n    }\n\n    function mimeToDataType(mime) {\n        if (mime) mime = mime.split(';', 2)[0]\n        return mime && ( mime == htmlType ? 'html' :\n            mime == jsonType ? 'json' :\n                scriptTypeRE.test(mime) ? 'script' :\n                    xmlTypeRE.test(mime) && 'xml' ) || 'text'\n    }\n\n    function appendQuery(url, query) {\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n    }\n\n    // serialize payload and append it to the URL for GET requests\n    function serializeData(options) {\n        if (options.processData && options.data && $.type(options.data) != \"string\")\n            options.data = $.param(options.data, options.traditional)\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\n            options.url = appendQuery(options.url, options.data)\n    }\n\n    $.ajax = function(options){\n        var settings = $.extend({}, options || {})\n        for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n        ajaxStart(settings)\n\n        if (!settings.crossDomain) settings.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(settings.url) &&\n            RegExp.$2 != window.location.host\n\n        if (!settings.url) settings.url = window.location.toString()\n        serializeData(settings)\n        if (settings.cache === false) settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n        var dataType = settings.dataType, hasPlaceholder = /=\\?/.test(settings.url)\n        if (dataType == 'jsonp' || hasPlaceholder) {\n            if (!hasPlaceholder) settings.url = appendQuery(settings.url, 'callback=?')\n            return $.ajaxJSONP(settings)\n        }\n\n        var mime = settings.accepts[dataType],\n            baseHeaders = { },\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n            xhr = settings.xhr(), abortTimeout\n\n        if (!settings.crossDomain) baseHeaders['X-Requested-With'] = 'XMLHttpRequest'\n        if (mime) {\n            baseHeaders['Accept'] = mime\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\n        }\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n            baseHeaders['Content-Type'] = (settings.contentType || 'application/x-www-form-urlencoded')\n        settings.headers = $.extend(baseHeaders, settings.headers || {})\n\n        xhr.onreadystatechange = function(){\n            if (xhr.readyState == 4) {\n                xhr.onreadystatechange = empty;\n                clearTimeout(abortTimeout)\n                var result, error = false\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n                    dataType = dataType || mimeToDataType(xhr.getResponseHeader('content-type'))\n                    result = xhr.responseText\n\n                    try {\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\n                        if (dataType == 'script')    (1,eval)(result)\n                        else if (dataType == 'xml')  result = xhr.responseXML\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n                    } catch (e) { error = e }\n\n                    if (error) ajaxError(error, 'parsererror', xhr, settings)\n                    else ajaxSuccess(result, xhr, settings)\n                } else {\n                    ajaxError(null, xhr.status ? 'error' : 'abort', xhr, settings)\n                }\n            }\n        }\n\n        var async = 'async' in settings ? settings.async : true\n        xhr.open(settings.type, settings.url, async)\n\n        for (name in settings.headers) xhr.setRequestHeader(name, settings.headers[name])\n\n        if (ajaxBeforeSend(xhr, settings) === false) {\n            xhr.abort()\n            return false\n        }\n\n        if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n            xhr.onreadystatechange = empty\n            xhr.abort()\n            ajaxError(null, 'timeout', xhr, settings)\n        }, settings.timeout)\n\n        // avoid sending empty string (#319)\n        xhr.send(settings.data ? settings.data : null)\n        return xhr\n    }\n\n    // handle optional data/success arguments\n    function parseArguments(url, data, success, dataType) {\n        var hasData = !$.isFunction(data)\n        return {\n            url:      url,\n            data:     hasData  ? data : undefined,\n            success:  !hasData ? data : $.isFunction(success) ? success : undefined,\n            dataType: hasData  ? dataType || success : success\n        }\n    }\n\n    $.get = function(url, data, success, dataType){\n        return $.ajax(parseArguments.apply(null, arguments))\n    }\n\n    $.post = function(url, data, success, dataType){\n        var options = parseArguments.apply(null, arguments)\n        options.type = 'POST'\n        return $.ajax(options)\n    }\n\n    $.getJSON = function(url, data, success){\n        var options = parseArguments.apply(null, arguments)\n        options.dataType = 'json'\n        return $.ajax(options)\n    }\n\n    $.fn.load = function(url, data, success){\n        if (!this.length) return this\n        var self = this, parts = url.split(/\\s/), selector,\n            options = parseArguments(url, data, success),\n            callback = options.success\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\n        options.success = function(response){\n            self.html(selector ?\n                $('<div>').html(response.replace(rscript, \"\")).find(selector)\n                : response)\n            callback && callback.apply(self, arguments)\n        }\n        $.ajax(options)\n        return this\n    }\n\n    var escape = encodeURIComponent\n\n    function serialize(params, obj, traditional, scope){\n        var type, array = $.isArray(obj)\n        $.each(obj, function(key, value) {\n            type = $.type(value)\n            if (scope) key = traditional ? scope : scope + '[' + (array ? '' : key) + ']'\n            // handle data in serializeArray() format\n            if (!scope && array) params.add(value.name, value.value)\n            // recurse into nested objects\n            else if (type == \"array\" || (!traditional && type == \"object\"))\n                serialize(params, value, traditional, key)\n            else params.add(key, value)\n        })\n    }\n\n    $.param = function(obj, traditional){\n        var params = []\n        params.add = function(k, v){ this.push(escape(k) + '=' + escape(v)) }\n        serialize(params, obj, traditional)\n        return params.join('&').replace(/%20/g, '+')\n    }\n})(Zepto)\n\n;(function ($) {\n    $.fn.serializeArray = function () {\n        var result = [], el\n        $( Array.prototype.slice.call(this.get(0).elements) ).each(function () {\n            el = $(this)\n            var type = el.attr('type')\n            if (this.nodeName.toLowerCase() != 'fieldset' &&\n                !this.disabled && type != 'submit' && type != 'reset' && type != 'button' &&\n                ((type != 'radio' && type != 'checkbox') || this.checked))\n                result.push({\n                    name: el.attr('name'),\n                    value: el.val()\n                })\n        })\n        return result\n    }\n\n    $.fn.serialize = function () {\n        var result = []\n        this.serializeArray().forEach(function (elm) {\n            result.push( encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value) )\n        })\n        return result.join('&')\n    }\n\n    $.fn.submit = function (callback) {\n        if (callback) this.bind('submit', callback)\n        else if (this.length) {\n            var event = $.Event('submit')\n            this.eq(0).trigger(event)\n            if (!event.defaultPrevented) this.get(0).submit()\n        }\n        return this\n    }\n\n})(Zepto)\n\n;(function($, undefined){\n    var prefix = '', eventPrefix, endEventName, endAnimationName,\n        vendors = { Webkit: 'webkit', Moz: '', O: 'o', ms: 'MS' },\n        document = window.document, testEl = document.createElement('div'),\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\n        transform,\n        transitionProperty, transitionDuration, transitionTiming,\n        animationName, animationDuration, animationTiming,\n        cssReset = {}\n\n    function dasherize(str) { return downcase(str.replace(/([a-z])([A-Z])/, '$1-$2')) }\n    function downcase(str) { return str.toLowerCase() }\n    function normalizeEvent(name) { return eventPrefix ? eventPrefix + name : downcase(name) }\n\n    $.each(vendors, function(vendor, event){\n        if (testEl.style[vendor + 'TransitionProperty'] !== undefined) {\n            prefix = '-' + downcase(vendor) + '-'\n            eventPrefix = event\n            return false\n        }\n    })\n\n    transform = prefix + 'transform'\n    cssReset[transitionProperty = prefix + 'transition-property'] =\n        cssReset[transitionDuration = prefix + 'transition-duration'] =\n            cssReset[transitionTiming   = prefix + 'transition-timing-function'] =\n                cssReset[animationName      = prefix + 'animation-name'] =\n                    cssReset[animationDuration  = prefix + 'animation-duration'] =\n                        cssReset[animationTiming    = prefix + 'animation-timing-function'] = ''\n\n    $.fx = {\n        off: (eventPrefix === undefined && testEl.style.transitionProperty === undefined),\n        speeds: { _default: 400, fast: 200, slow: 600 },\n        cssPrefix: prefix,\n        transitionEnd: normalizeEvent('TransitionEnd'),\n        animationEnd: normalizeEvent('AnimationEnd')\n    }\n\n    $.fn.animate = function(properties, duration, ease, callback){\n        if ($.isPlainObject(duration))\n            ease = duration.easing, callback = duration.complete, duration = duration.duration\n        if (duration) duration = (typeof duration == 'number' ? duration :\n            ($.fx.speeds[duration] || $.fx.speeds._default)) / 1000\n        return this.anim(properties, duration, ease, callback)\n    }\n\n    $.fn.anim = function(properties, duration, ease, callback){\n        var key, cssValues = {}, cssProperties, transforms = '',\n            that = this, wrappedCallback, endEvent = $.fx.transitionEnd\n\n        if (duration === undefined) duration = 0.4\n        if ($.fx.off) duration = 0\n\n        if (typeof properties == 'string') {\n            // keyframe animation\n            cssValues[animationName] = properties\n            cssValues[animationDuration] = duration + 's'\n            cssValues[animationTiming] = (ease || 'linear')\n            endEvent = $.fx.animationEnd\n        } else {\n            cssProperties = []\n            // CSS transitions\n            for (key in properties)\n                if (supportedTransforms.test(key)) transforms += key + '(' + properties[key] + ') '\n                else cssValues[key] = properties[key], cssProperties.push(dasherize(key))\n\n            if (transforms) cssValues[transform] = transforms, cssProperties.push(transform)\n            if (duration > 0 && typeof properties === 'object') {\n                cssValues[transitionProperty] = cssProperties.join(', ')\n                cssValues[transitionDuration] = duration + 's'\n                cssValues[transitionTiming] = (ease || 'linear')\n            }\n        }\n\n        wrappedCallback = function(event){\n            if (typeof event !== 'undefined') {\n                if (event.target !== event.currentTarget) return // makes sure the event didn't bubble from \"below\"\n                $(event.target).unbind(endEvent, wrappedCallback)\n            }\n            $(this).css(cssReset)\n            callback && callback.call(this)\n        }\n        if (duration > 0) this.bind(endEvent, wrappedCallback)\n\n        // trigger page reflow so new elements can animate\n        this.size() && this.get(0).clientLeft\n\n        this.css(cssValues)\n\n        if (duration <= 0) setTimeout(function() {\n            that.each(function(){ wrappedCallback.call(this) })\n        }, 0)\n\n        return this\n    }\n\n    testEl = null\n})(Zepto)\n\n//     Zepto.js\n//     (c) 2010-2012 Thomas Fuchs\n//     Zepto.js may be freely distributed under the MIT license.\n\n// The following code is heavily inspired by jQuery's $.fn.data()\n\n;(function($) {\n    var data = {}, dataAttr = $.fn.data, camelize = $.camelCase,\n        exp = $.expando = 'Zepto' + (+new Date())\n\n    // Get value from node:\n    // 1. first try key as given,\n    // 2. then try camelized key,\n    // 3. fall back to reading \"data-*\" attribute.\n    function getData(node, name) {\n        var id = node[exp], store = id && data[id]\n        if (name === undefined) return store || setData(node)\n        else {\n            if (store) {\n                if (name in store) return store[name]\n                var camelName = camelize(name)\n                if (camelName in store) return store[camelName]\n            }\n            return dataAttr.call($(node), name)\n        }\n    }\n\n    // Store value under camelized key on node\n    function setData(node, name, value) {\n        var id = node[exp] || (node[exp] = ++$.uuid),\n            store = data[id] || (data[id] = attributeData(node))\n        if (name !== undefined) store[camelize(name)] = value\n        return store\n    }\n\n    // Read all \"data-*\" attributes from a node\n    function attributeData(node) {\n        var store = {}\n        $.each(node.attributes, function(i, attr){\n            if (attr.name.indexOf('data-') == 0)\n                store[camelize(attr.name.replace('data-', ''))] =\n                    $.zepto.deserializeValue(attr.value)\n        })\n        return store\n    }\n\n    $.fn.data = function(name, value) {\n        return value === undefined ?\n            // set multiple values via object\n            $.isPlainObject(name) ?\n                this.each(function(i, node){\n                    $.each(name, function(key, value){ setData(node, key, value) })\n                }) :\n                // get value from first element\n                this.length == 0 ? undefined : getData(this[0], name) :\n            // set value on all elements\n            this.each(function(){ setData(this, name, value) })\n    }\n\n    $.fn.removeData = function(names) {\n        if (typeof names == 'string') names = names.split(/\\s+/)\n        return this.each(function(){\n            var id = this[exp], store = id && data[id]\n            if (store) $.each(names, function(){ delete store[camelize(this)] })\n        })\n    }\n})(Zepto);\ndefine(\"jquery\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.$;\n    };\n}(this)));\n",
    "\n// Underscore.js 1.4.4\n// ===================\n\n// > http://underscorejs.org\n// > (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n// > Underscore may be freely distributed under the MIT license.\n\n// Baseline setup\n// --------------\n(function() {\n\n    // Establish the root object, `window` in the browser, or `global` on the server.\n    var root = this;\n\n    // Save the previous value of the `_` variable.\n    var previousUnderscore = root._;\n\n    // Establish the object that gets returned to break out of a loop iteration.\n    var breaker = {};\n\n    // Save bytes in the minified (but not gzipped) version:\n    var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n    // Create quick reference variables for speed access to core prototypes.\n    var push             = ArrayProto.push,\n        slice            = ArrayProto.slice,\n        concat           = ArrayProto.concat,\n        toString         = ObjProto.toString,\n        hasOwnProperty   = ObjProto.hasOwnProperty;\n\n    // All **ECMAScript 5** native function implementations that we hope to use\n    // are declared here.\n    var\n        nativeForEach      = ArrayProto.forEach,\n        nativeMap          = ArrayProto.map,\n        nativeReduce       = ArrayProto.reduce,\n        nativeReduceRight  = ArrayProto.reduceRight,\n        nativeFilter       = ArrayProto.filter,\n        nativeEvery        = ArrayProto.every,\n        nativeSome         = ArrayProto.some,\n        nativeIndexOf      = ArrayProto.indexOf,\n        nativeLastIndexOf  = ArrayProto.lastIndexOf,\n        nativeIsArray      = Array.isArray,\n        nativeKeys         = Object.keys,\n        nativeBind         = FuncProto.bind;\n\n    // Create a safe reference to the Underscore object for use below.\n    var _ = function(obj) {\n        if (obj instanceof _) return obj;\n        if (!(this instanceof _)) return new _(obj);\n        this._wrapped = obj;\n    };\n\n    // Export the Underscore object for **Node.js**, with\n    // backwards-compatibility for the old `require()` API. If we're in\n    // the browser, add `_` as a global object via a string identifier,\n    // for Closure Compiler \"advanced\" mode.\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = _;\n        }\n        exports._ = _;\n    } else {\n        root._ = _;\n    }\n\n    // Current version.\n    _.VERSION = '1.4.4';\n\n    // Collection Functions\n    // --------------------\n\n    // The cornerstone, an `each` implementation, aka `forEach`.\n    // Handles objects with the built-in `forEach`, arrays, and raw objects.\n    // Delegates to **ECMAScript 5**'s native `forEach` if available.\n    var each = _.each = _.forEach = function(obj, iterator, context) {\n        if (obj == null) return;\n        if (nativeForEach && obj.forEach === nativeForEach) {\n            obj.forEach(iterator, context);\n        } else if (obj.length === +obj.length) {\n            for (var i = 0, l = obj.length; i < l; i++) {\n                if (iterator.call(context, obj[i], i, obj) === breaker) return;\n            }\n        } else {\n            for (var key in obj) {\n                if (_.has(obj, key)) {\n                    if (iterator.call(context, obj[key], key, obj) === breaker) return;\n                }\n            }\n        }\n    };\n\n    // Return the results of applying the iterator to each element.\n    // Delegates to **ECMAScript 5**'s native `map` if available.\n    _.map = _.collect = function(obj, iterator, context) {\n        var results = [];\n        if (obj == null) return results;\n        if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n        each(obj, function(value, index, list) {\n            results[results.length] = iterator.call(context, value, index, list);\n        });\n        return results;\n    };\n\n    var reduceError = 'Reduce of empty array with no initial value';\n\n    // **Reduce** builds up a single result from a list of values, aka `inject`,\n    // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n    _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n        var initial = arguments.length > 2;\n        if (obj == null) obj = [];\n        if (nativeReduce && obj.reduce === nativeReduce) {\n            if (context) iterator = _.bind(iterator, context);\n            return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n        }\n        each(obj, function(value, index, list) {\n            if (!initial) {\n                memo = value;\n                initial = true;\n            } else {\n                memo = iterator.call(context, memo, value, index, list);\n            }\n        });\n        if (!initial) throw new TypeError(reduceError);\n        return memo;\n    };\n\n    // The right-associative version of reduce, also known as `foldr`.\n    // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n    _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n        var initial = arguments.length > 2;\n        if (obj == null) obj = [];\n        if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n            if (context) iterator = _.bind(iterator, context);\n            return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n        }\n        var length = obj.length;\n        if (length !== +length) {\n            var keys = _.keys(obj);\n            length = keys.length;\n        }\n        each(obj, function(value, index, list) {\n            index = keys ? keys[--length] : --length;\n            if (!initial) {\n                memo = obj[index];\n                initial = true;\n            } else {\n                memo = iterator.call(context, memo, obj[index], index, list);\n            }\n        });\n        if (!initial) throw new TypeError(reduceError);\n        return memo;\n    };\n\n    // Return the first value which passes a truth test. Aliased as `detect`.\n    _.find = _.detect = function(obj, iterator, context) {\n        var result;\n        any(obj, function(value, index, list) {\n            if (iterator.call(context, value, index, list)) {\n                result = value;\n                return true;\n            }\n        });\n        return result;\n    };\n\n    // Return all the elements that pass a truth test.\n    // Delegates to **ECMAScript 5**'s native `filter` if available.\n    // Aliased as `select`.\n    _.filter = _.select = function(obj, iterator, context) {\n        var results = [];\n        if (obj == null) return results;\n        if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n        each(obj, function(value, index, list) {\n            if (iterator.call(context, value, index, list)) results[results.length] = value;\n        });\n        return results;\n    };\n\n    // Return all the elements for which a truth test fails.\n    _.reject = function(obj, iterator, context) {\n        return _.filter(obj, function(value, index, list) {\n            return !iterator.call(context, value, index, list);\n        }, context);\n    };\n\n    // Determine whether all of the elements match a truth test.\n    // Delegates to **ECMAScript 5**'s native `every` if available.\n    // Aliased as `all`.\n    _.every = _.all = function(obj, iterator, context) {\n        iterator || (iterator = _.identity);\n        var result = true;\n        if (obj == null) return result;\n        if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n        each(obj, function(value, index, list) {\n            if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n        });\n        return !!result;\n    };\n\n    // Determine if at least one element in the object matches a truth test.\n    // Delegates to **ECMAScript 5**'s native `some` if available.\n    // Aliased as `any`.\n    var any = _.some = _.any = function(obj, iterator, context) {\n        iterator || (iterator = _.identity);\n        var result = false;\n        if (obj == null) return result;\n        if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n        each(obj, function(value, index, list) {\n            if (result || (result = iterator.call(context, value, index, list))) return breaker;\n        });\n        return !!result;\n    };\n\n    // Determine if the array or object contains a given value (using `===`).\n    // Aliased as `include`.\n    _.contains = _.include = function(obj, target) {\n        if (obj == null) return false;\n        if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n        return any(obj, function(value) {\n            return value === target;\n        });\n    };\n\n    // Invoke a method (with arguments) on every item in a collection.\n    _.invoke = function(obj, method) {\n        var args = slice.call(arguments, 2);\n        var isFunc = _.isFunction(method);\n        return _.map(obj, function(value) {\n            return (isFunc ? method : value[method]).apply(value, args);\n        });\n    };\n\n    // Convenience version of a common use case of `map`: fetching a property.\n    _.pluck = function(obj, key) {\n        return _.map(obj, function(value){ return value[key]; });\n    };\n\n    // Convenience version of a common use case of `filter`: selecting only objects\n    // containing specific `key:value` pairs.\n    _.where = function(obj, attrs, first) {\n        if (_.isEmpty(attrs)) return first ? null : [];\n        return _[first ? 'find' : 'filter'](obj, function(value) {\n            for (var key in attrs) {\n                if (attrs[key] !== value[key]) return false;\n            }\n            return true;\n        });\n    };\n\n    // Convenience version of a common use case of `find`: getting the first object\n    // containing specific `key:value` pairs.\n    _.findWhere = function(obj, attrs) {\n        return _.where(obj, attrs, true);\n    };\n\n    // Return the maximum element or (element-based computation).\n    // Can't optimize arrays of integers longer than 65,535 elements.\n    // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n    _.max = function(obj, iterator, context) {\n        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n            return Math.max.apply(Math, obj);\n        }\n        if (!iterator && _.isEmpty(obj)) return -Infinity;\n        var result = {computed : -Infinity, value: -Infinity};\n        each(obj, function(value, index, list) {\n            var computed = iterator ? iterator.call(context, value, index, list) : value;\n            computed >= result.computed && (result = {value : value, computed : computed});\n        });\n        return result.value;\n    };\n\n    // Return the minimum element (or element-based computation).\n    _.min = function(obj, iterator, context) {\n        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n            return Math.min.apply(Math, obj);\n        }\n        if (!iterator && _.isEmpty(obj)) return Infinity;\n        var result = {computed : Infinity, value: Infinity};\n        each(obj, function(value, index, list) {\n            var computed = iterator ? iterator.call(context, value, index, list) : value;\n            computed < result.computed && (result = {value : value, computed : computed});\n        });\n        return result.value;\n    };\n\n    // Shuffle an array.\n    _.shuffle = function(obj) {\n        var rand;\n        var index = 0;\n        var shuffled = [];\n        each(obj, function(value) {\n            rand = _.random(index++);\n            shuffled[index - 1] = shuffled[rand];\n            shuffled[rand] = value;\n        });\n        return shuffled;\n    };\n\n    // An internal function to generate lookup iterators.\n    var lookupIterator = function(value) {\n        return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n    };\n\n    // Sort the object's values by a criterion produced by an iterator.\n    _.sortBy = function(obj, value, context) {\n        var iterator = lookupIterator(value);\n        return _.pluck(_.map(obj, function(value, index, list) {\n            return {\n                value : value,\n                index : index,\n                criteria : iterator.call(context, value, index, list)\n            };\n        }).sort(function(left, right) {\n                var a = left.criteria;\n                var b = right.criteria;\n                if (a !== b) {\n                    if (a > b || a === void 0) return 1;\n                    if (a < b || b === void 0) return -1;\n                }\n                return left.index < right.index ? -1 : 1;\n            }), 'value');\n    };\n\n    // An internal function used for aggregate \"group by\" operations.\n    var group = function(obj, value, context, behavior) {\n        var result = {};\n        var iterator = lookupIterator(value || _.identity);\n        each(obj, function(value, index) {\n            var key = iterator.call(context, value, index, obj);\n            behavior(result, key, value);\n        });\n        return result;\n    };\n\n    // Groups the object's values by a criterion. Pass either a string attribute\n    // to group by, or a function that returns the criterion.\n    _.groupBy = function(obj, value, context) {\n        return group(obj, value, context, function(result, key, value) {\n            (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n        });\n    };\n\n    // Counts instances of an object that group by a certain criterion. Pass\n    // either a string attribute to count by, or a function that returns the\n    // criterion.\n    _.countBy = function(obj, value, context) {\n        return group(obj, value, context, function(result, key) {\n            if (!_.has(result, key)) result[key] = 0;\n            result[key]++;\n        });\n    };\n\n    // Use a comparator function to figure out the smallest index at which\n    // an object should be inserted so as to maintain order. Uses binary search.\n    _.sortedIndex = function(array, obj, iterator, context) {\n        iterator = iterator == null ? _.identity : lookupIterator(iterator);\n        var value = iterator.call(context, obj);\n        var low = 0, high = array.length;\n        while (low < high) {\n            var mid = (low + high) >>> 1;\n            iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n        }\n        return low;\n    };\n\n    // Safely convert anything iterable into a real, live array.\n    _.toArray = function(obj) {\n        if (!obj) return [];\n        if (_.isArray(obj)) return slice.call(obj);\n        if (obj.length === +obj.length) return _.map(obj, _.identity);\n        return _.values(obj);\n    };\n\n    // Return the number of elements in an object.\n    _.size = function(obj) {\n        if (obj == null) return 0;\n        return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n    };\n\n    // Array Functions\n    // ---------------\n\n    // Get the first element of an array. Passing **n** will return the first N\n    // values in the array. Aliased as `head` and `take`. The **guard** check\n    // allows it to work with `_.map`.\n    _.first = _.head = _.take = function(array, n, guard) {\n        if (array == null) return void 0;\n        return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n    };\n\n    // Returns everything but the last entry of the array. Especially useful on\n    // the arguments object. Passing **n** will return all the values in\n    // the array, excluding the last N. The **guard** check allows it to work with\n    // `_.map`.\n    _.initial = function(array, n, guard) {\n        return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n    };\n\n    // Get the last element of an array. Passing **n** will return the last N\n    // values in the array. The **guard** check allows it to work with `_.map`.\n    _.last = function(array, n, guard) {\n        if (array == null) return void 0;\n        if ((n != null) && !guard) {\n            return slice.call(array, Math.max(array.length - n, 0));\n        } else {\n            return array[array.length - 1];\n        }\n    };\n\n    // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n    // Especially useful on the arguments object. Passing an **n** will return\n    // the rest N values in the array. The **guard**\n    // check allows it to work with `_.map`.\n    _.rest = _.tail = _.drop = function(array, n, guard) {\n        return slice.call(array, (n == null) || guard ? 1 : n);\n    };\n\n    // Trim out all falsy values from an array.\n    _.compact = function(array) {\n        return _.filter(array, _.identity);\n    };\n\n    // Internal implementation of a recursive `flatten` function.\n    var flatten = function(input, shallow, output) {\n        each(input, function(value) {\n            if (_.isArray(value)) {\n                shallow ? push.apply(output, value) : flatten(value, shallow, output);\n            } else {\n                output.push(value);\n            }\n        });\n        return output;\n    };\n\n    // Return a completely flattened version of an array.\n    _.flatten = function(array, shallow) {\n        return flatten(array, shallow, []);\n    };\n\n    // Return a version of the array that does not contain the specified value(s).\n    _.without = function(array) {\n        return _.difference(array, slice.call(arguments, 1));\n    };\n\n    // Produce a duplicate-free version of the array. If the array has already\n    // been sorted, you have the option of using a faster algorithm.\n    // Aliased as `unique`.\n    _.uniq = _.unique = function(array, isSorted, iterator, context) {\n        if (_.isFunction(isSorted)) {\n            context = iterator;\n            iterator = isSorted;\n            isSorted = false;\n        }\n        var initial = iterator ? _.map(array, iterator, context) : array;\n        var results = [];\n        var seen = [];\n        each(initial, function(value, index) {\n            if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n                seen.push(value);\n                results.push(array[index]);\n            }\n        });\n        return results;\n    };\n\n    // Produce an array that contains the union: each distinct element from all of\n    // the passed-in arrays.\n    _.union = function() {\n        return _.uniq(concat.apply(ArrayProto, arguments));\n    };\n\n    // Produce an array that contains every item shared between all the\n    // passed-in arrays.\n    _.intersection = function(array) {\n        var rest = slice.call(arguments, 1);\n        return _.filter(_.uniq(array), function(item) {\n            return _.every(rest, function(other) {\n                return _.indexOf(other, item) >= 0;\n            });\n        });\n    };\n\n    // Take the difference between one array and a number of other arrays.\n    // Only the elements present in just the first array will remain.\n    _.difference = function(array) {\n        var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n        return _.filter(array, function(value){ return !_.contains(rest, value); });\n    };\n\n    // Zip together multiple lists into a single array -- elements that share\n    // an index go together.\n    _.zip = function() {\n        var args = slice.call(arguments);\n        var length = _.max(_.pluck(args, 'length'));\n        var results = new Array(length);\n        for (var i = 0; i < length; i++) {\n            results[i] = _.pluck(args, \"\" + i);\n        }\n        return results;\n    };\n\n    // Converts lists into objects. Pass either a single array of `[key, value]`\n    // pairs, or two parallel arrays of the same length -- one of keys, and one of\n    // the corresponding values.\n    _.object = function(list, values) {\n        if (list == null) return {};\n        var result = {};\n        for (var i = 0, l = list.length; i < l; i++) {\n            if (values) {\n                result[list[i]] = values[i];\n            } else {\n                result[list[i][0]] = list[i][1];\n            }\n        }\n        return result;\n    };\n\n    // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n    // we need this function. Return the position of the first occurrence of an\n    // item in an array, or -1 if the item is not included in the array.\n    // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n    // If the array is large and already in sort order, pass `true`\n    // for **isSorted** to use binary search.\n    _.indexOf = function(array, item, isSorted) {\n        if (array == null) return -1;\n        var i = 0, l = array.length;\n        if (isSorted) {\n            if (typeof isSorted == 'number') {\n                i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\n            } else {\n                i = _.sortedIndex(array, item);\n                return array[i] === item ? i : -1;\n            }\n        }\n        if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n        for (; i < l; i++) if (array[i] === item) return i;\n        return -1;\n    };\n\n    // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n    _.lastIndexOf = function(array, item, from) {\n        if (array == null) return -1;\n        var hasIndex = from != null;\n        if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n            return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n        }\n        var i = (hasIndex ? from : array.length);\n        while (i--) if (array[i] === item) return i;\n        return -1;\n    };\n\n    // Generate an integer Array containing an arithmetic progression. A port of\n    // the native Python `range()` function. See\n    // [the Python documentation](http://docs.python.org/library/functions.html#range).\n    _.range = function(start, stop, step) {\n        if (arguments.length <= 1) {\n            stop = start || 0;\n            start = 0;\n        }\n        step = arguments[2] || 1;\n\n        var len = Math.max(Math.ceil((stop - start) / step), 0);\n        var idx = 0;\n        var range = new Array(len);\n\n        while(idx < len) {\n            range[idx++] = start;\n            start += step;\n        }\n\n        return range;\n    };\n\n    // Function (ahem) Functions\n    // ------------------\n\n    // Create a function bound to a given object (assigning `this`, and arguments,\n    // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n    // available.\n    _.bind = function(func, context) {\n        if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n        var args = slice.call(arguments, 2);\n        return function() {\n            return func.apply(context, args.concat(slice.call(arguments)));\n        };\n    };\n\n    // Partially apply a function by creating a version that has had some of its\n    // arguments pre-filled, without changing its dynamic `this` context.\n    _.partial = function(func) {\n        var args = slice.call(arguments, 1);\n        return function() {\n            return func.apply(this, args.concat(slice.call(arguments)));\n        };\n    };\n\n    // Bind all of an object's methods to that object. Useful for ensuring that\n    // all callbacks defined on an object belong to it.\n    _.bindAll = function(obj) {\n        var funcs = slice.call(arguments, 1);\n        if (funcs.length === 0) funcs = _.functions(obj);\n        each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n        return obj;\n    };\n\n    // Memoize an expensive function by storing its results.\n    _.memoize = function(func, hasher) {\n        var memo = {};\n        hasher || (hasher = _.identity);\n        return function() {\n            var key = hasher.apply(this, arguments);\n            return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n        };\n    };\n\n    // Delays a function for the given number of milliseconds, and then calls\n    // it with the arguments supplied.\n    _.delay = function(func, wait) {\n        var args = slice.call(arguments, 2);\n        return setTimeout(function(){ return func.apply(null, args); }, wait);\n    };\n\n    // Defers a function, scheduling it to run after the current call stack has\n    // cleared.\n    _.defer = function(func) {\n        return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n    };\n\n    // Returns a function, that, when invoked, will only be triggered at most once\n    // during a given window of time.\n    _.throttle = function(func, wait) {\n        var context, args, timeout, result;\n        var previous = 0;\n        var later = function() {\n            previous = new Date;\n            timeout = null;\n            result = func.apply(context, args);\n        };\n        return function() {\n            var now = new Date;\n            var remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0) {\n                clearTimeout(timeout);\n                timeout = null;\n                previous = now;\n                result = func.apply(context, args);\n            } else if (!timeout) {\n                timeout = setTimeout(later, remaining);\n            }\n            return result;\n        };\n    };\n\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds. If `immediate` is passed, trigger the function on the\n    // leading edge, instead of the trailing.\n    _.debounce = function(func, wait, immediate) {\n        var timeout, result;\n        return function() {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) result = func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) result = func.apply(context, args);\n            return result;\n        };\n    };\n\n    // Returns a function that will be executed at most one time, no matter how\n    // often you call it. Useful for lazy initialization.\n    _.once = function(func) {\n        var ran = false, memo;\n        return function() {\n            if (ran) return memo;\n            ran = true;\n            memo = func.apply(this, arguments);\n            func = null;\n            return memo;\n        };\n    };\n\n    // Returns the first function passed as an argument to the second,\n    // allowing you to adjust arguments, run code before and after, and\n    // conditionally execute the original function.\n    _.wrap = function(func, wrapper) {\n        return function() {\n            var args = [func];\n            push.apply(args, arguments);\n            return wrapper.apply(this, args);\n        };\n    };\n\n    // Returns a function that is the composition of a list of functions, each\n    // consuming the return value of the function that follows.\n    _.compose = function() {\n        var funcs = arguments;\n        return function() {\n            var args = arguments;\n            for (var i = funcs.length - 1; i >= 0; i--) {\n                args = [funcs[i].apply(this, args)];\n            }\n            return args[0];\n        };\n    };\n\n    // Returns a function that will only be executed after being called N times.\n    _.after = function(times, func) {\n        if (times <= 0) return func();\n        return function() {\n            if (--times < 1) {\n                return func.apply(this, arguments);\n            }\n        };\n    };\n\n    // Object Functions\n    // ----------------\n\n    // Retrieve the names of an object's properties.\n    // Delegates to **ECMAScript 5**'s native `Object.keys`\n    _.keys = nativeKeys || function(obj) {\n        if (obj !== Object(obj)) throw new TypeError('Invalid object');\n        var keys = [];\n        for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n        return keys;\n    };\n\n    // Retrieve the values of an object's properties.\n    _.values = function(obj) {\n        var values = [];\n        for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\n        return values;\n    };\n\n    // Convert an object into a list of `[key, value]` pairs.\n    _.pairs = function(obj) {\n        var pairs = [];\n        for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\n        return pairs;\n    };\n\n    // Invert the keys and values of an object. The values must be serializable.\n    _.invert = function(obj) {\n        var result = {};\n        for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\n        return result;\n    };\n\n    // Return a sorted list of the function names available on the object.\n    // Aliased as `methods`\n    _.functions = _.methods = function(obj) {\n        var names = [];\n        for (var key in obj) {\n            if (_.isFunction(obj[key])) names.push(key);\n        }\n        return names.sort();\n    };\n\n    // Extend a given object with all the properties in passed-in object(s).\n    _.extend = function(obj) {\n        each(slice.call(arguments, 1), function(source) {\n            if (source) {\n                for (var prop in source) {\n                    obj[prop] = source[prop];\n                }\n            }\n        });\n        return obj;\n    };\n\n    // Return a copy of the object only containing the whitelisted properties.\n    _.pick = function(obj) {\n        var copy = {};\n        var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n        each(keys, function(key) {\n            if (key in obj) copy[key] = obj[key];\n        });\n        return copy;\n    };\n\n    // Return a copy of the object without the blacklisted properties.\n    _.omit = function(obj) {\n        var copy = {};\n        var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n        for (var key in obj) {\n            if (!_.contains(keys, key)) copy[key] = obj[key];\n        }\n        return copy;\n    };\n\n    // Fill in a given object with default properties.\n    _.defaults = function(obj) {\n        each(slice.call(arguments, 1), function(source) {\n            if (source) {\n                for (var prop in source) {\n                    if (obj[prop] == null) obj[prop] = source[prop];\n                }\n            }\n        });\n        return obj;\n    };\n\n    // Create a (shallow-cloned) duplicate of an object.\n    _.clone = function(obj) {\n        if (!_.isObject(obj)) return obj;\n        return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n    };\n\n    // Invokes interceptor with the obj, and then returns obj.\n    // The primary purpose of this method is to \"tap into\" a method chain, in\n    // order to perform operations on intermediate results within the chain.\n    _.tap = function(obj, interceptor) {\n        interceptor(obj);\n        return obj;\n    };\n\n    // Internal recursive comparison function for `isEqual`.\n    var eq = function(a, b, aStack, bStack) {\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\n        // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n        if (a === b) return a !== 0 || 1 / a == 1 / b;\n        // A strict comparison is necessary because `null == undefined`.\n        if (a == null || b == null) return a === b;\n        // Unwrap any wrapped objects.\n        if (a instanceof _) a = a._wrapped;\n        if (b instanceof _) b = b._wrapped;\n        // Compare `[[Class]]` names.\n        var className = toString.call(a);\n        if (className != toString.call(b)) return false;\n        switch (className) {\n            // Strings, numbers, dates, and booleans are compared by value.\n            case '[object String]':\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n                // equivalent to `new String(\"5\")`.\n                return a == String(b);\n            case '[object Number]':\n                // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n                // other numeric values.\n                return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n            case '[object Date]':\n            case '[object Boolean]':\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n                // millisecond representations. Note that invalid dates with millisecond representations\n                // of `NaN` are not equivalent.\n                return +a == +b;\n            // RegExps are compared by their source patterns and flags.\n            case '[object RegExp]':\n                return a.source == b.source &&\n                    a.global == b.global &&\n                    a.multiline == b.multiline &&\n                    a.ignoreCase == b.ignoreCase;\n        }\n        if (typeof a != 'object' || typeof b != 'object') return false;\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n        var length = aStack.length;\n        while (length--) {\n            // Linear search. Performance is inversely proportional to the number of\n            // unique nested structures.\n            if (aStack[length] == a) return bStack[length] == b;\n        }\n        // Add the first object to the stack of traversed objects.\n        aStack.push(a);\n        bStack.push(b);\n        var size = 0, result = true;\n        // Recursively compare objects and arrays.\n        if (className == '[object Array]') {\n            // Compare array lengths to determine if a deep comparison is necessary.\n            size = a.length;\n            result = size == b.length;\n            if (result) {\n                // Deep compare the contents, ignoring non-numeric properties.\n                while (size--) {\n                    if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n                }\n            }\n        } else {\n            // Objects with different constructors are not equivalent, but `Object`s\n            // from different frames are.\n            var aCtor = a.constructor, bCtor = b.constructor;\n            if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n                return false;\n            }\n            // Deep compare objects.\n            for (var key in a) {\n                if (_.has(a, key)) {\n                    // Count the expected number of properties.\n                    size++;\n                    // Deep compare each member.\n                    if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n                }\n            }\n            // Ensure that both objects contain the same number of properties.\n            if (result) {\n                for (key in b) {\n                    if (_.has(b, key) && !(size--)) break;\n                }\n                result = !size;\n            }\n        }\n        // Remove the first object from the stack of traversed objects.\n        aStack.pop();\n        bStack.pop();\n        return result;\n    };\n\n    // Perform a deep comparison to check if two objects are equal.\n    _.isEqual = function(a, b) {\n        return eq(a, b, [], []);\n    };\n\n    // Is a given array, string, or object empty?\n    // An \"empty\" object has no enumerable own-properties.\n    _.isEmpty = function(obj) {\n        if (obj == null) return true;\n        if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n        for (var key in obj) if (_.has(obj, key)) return false;\n        return true;\n    };\n\n    // Is a given value a DOM element?\n    _.isElement = function(obj) {\n        return !!(obj && obj.nodeType === 1);\n    };\n\n    // Is a given value an array?\n    // Delegates to ECMA5's native Array.isArray\n    _.isArray = nativeIsArray || function(obj) {\n        return toString.call(obj) == '[object Array]';\n    };\n\n    // Is a given variable an object?\n    _.isObject = function(obj) {\n        return obj === Object(obj);\n    };\n\n    // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n    each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n        _['is' + name] = function(obj) {\n            return toString.call(obj) == '[object ' + name + ']';\n        };\n    });\n\n    // Define a fallback version of the method in browsers (ahem, IE), where\n    // there isn't any inspectable \"Arguments\" type.\n    if (!_.isArguments(arguments)) {\n        _.isArguments = function(obj) {\n            return !!(obj && _.has(obj, 'callee'));\n        };\n    }\n\n    // Optimize `isFunction` if appropriate.\n    if (typeof (/./) !== 'function') {\n        _.isFunction = function(obj) {\n            return typeof obj === 'function';\n        };\n    }\n\n    // Is a given object a finite number?\n    _.isFinite = function(obj) {\n        return isFinite(obj) && !isNaN(parseFloat(obj));\n    };\n\n    // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n    _.isNaN = function(obj) {\n        return _.isNumber(obj) && obj != +obj;\n    };\n\n    // Is a given value a boolean?\n    _.isBoolean = function(obj) {\n        return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n    };\n\n    // Is a given value equal to null?\n    _.isNull = function(obj) {\n        return obj === null;\n    };\n\n    // Is a given variable undefined?\n    _.isUndefined = function(obj) {\n        return obj === void 0;\n    };\n\n    // Shortcut function for checking if an object has a given property directly\n    // on itself (in other words, not on a prototype).\n    _.has = function(obj, key) {\n        return hasOwnProperty.call(obj, key);\n    };\n\n    // Utility Functions\n    // -----------------\n\n    // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n    // previous owner. Returns a reference to the Underscore object.\n    _.noConflict = function() {\n        root._ = previousUnderscore;\n        return this;\n    };\n\n    // Keep the identity function around for default iterators.\n    _.identity = function(value) {\n        return value;\n    };\n\n    // Run a function **n** times.\n    _.times = function(n, iterator, context) {\n        var accum = Array(n);\n        for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n        return accum;\n    };\n\n    // Return a random integer between min and max (inclusive).\n    _.random = function(min, max) {\n        if (max == null) {\n            max = min;\n            min = 0;\n        }\n        return min + Math.floor(Math.random() * (max - min + 1));\n    };\n\n    // List of HTML entities for escaping.\n    var entityMap = {\n        escape: {\n            '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            \"'\": '&#x27;',\n            '/': '&#x2F;'\n        }\n    };\n    entityMap.unescape = _.invert(entityMap.escape);\n\n    // Regexes containing the keys and values listed immediately above.\n    var entityRegexes = {\n        escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n        unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n    };\n\n    // Functions for escaping and unescaping strings to/from HTML interpolation.\n    _.each(['escape', 'unescape'], function(method) {\n        _[method] = function(string) {\n            if (string == null) return '';\n            return ('' + string).replace(entityRegexes[method], function(match) {\n                return entityMap[method][match];\n            });\n        };\n    });\n\n    // If the value of the named property is a function then invoke it;\n    // otherwise, return it.\n    _.result = function(object, property) {\n        if (object == null) return null;\n        var value = object[property];\n        return _.isFunction(value) ? value.call(object) : value;\n    };\n\n    // Add your own custom functions to the Underscore object.\n    _.mixin = function(obj) {\n        each(_.functions(obj), function(name){\n            var func = _[name] = obj[name];\n            _.prototype[name] = function() {\n                var args = [this._wrapped];\n                push.apply(args, arguments);\n                return result.call(this, func.apply(_, args));\n            };\n        });\n    };\n\n    // Generate a unique integer id (unique within the entire client session).\n    // Useful for temporary DOM ids.\n    var idCounter = 0;\n    _.uniqueId = function(prefix) {\n        var id = ++idCounter + '';\n        return prefix ? prefix + id : id;\n    };\n\n    // By default, Underscore uses ERB-style template delimiters, change the\n    // following template settings to use alternative delimiters.\n    _.templateSettings = {\n        evaluate    : /<%([\\s\\S]+?)%>/g,\n        interpolate : /<%=([\\s\\S]+?)%>/g,\n        escape      : /<%-([\\s\\S]+?)%>/g\n    };\n\n    // When customizing `templateSettings`, if you don't want to define an\n    // interpolation, evaluation or escaping regex, we need one that is\n    // guaranteed not to match.\n    var noMatch = /(.)^/;\n\n    // Certain characters need to be escaped so that they can be put into a\n    // string literal.\n    var escapes = {\n        \"'\":      \"'\",\n        '\\\\':     '\\\\',\n        '\\r':     'r',\n        '\\n':     'n',\n        '\\t':     't',\n        '\\u2028': 'u2028',\n        '\\u2029': 'u2029'\n    };\n\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n    // JavaScript micro-templating, similar to John Resig's implementation.\n    // Underscore templating handles arbitrary delimiters, preserves whitespace,\n    // and correctly escapes quotes within interpolated code.\n    _.template = function(text, data, settings) {\n        var render;\n        settings = _.defaults({}, settings, _.templateSettings);\n\n        // Combine delimiters into one regular expression via alternation.\n        var matcher = new RegExp([\n            (settings.escape || noMatch).source,\n            (settings.interpolate || noMatch).source,\n            (settings.evaluate || noMatch).source\n        ].join('|') + '|$', 'g');\n\n        // Compile the template source, escaping string literals appropriately.\n        var index = 0;\n        var source = \"__p+='\";\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n            source += text.slice(index, offset)\n                .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n            if (escape) {\n                source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n            }\n            if (interpolate) {\n                source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n            }\n            if (evaluate) {\n                source += \"';\\n\" + evaluate + \"\\n__p+='\";\n            }\n            index = offset + match.length;\n            return match;\n        });\n        source += \"';\\n\";\n\n        // If a variable is not specified, place data values in local scope.\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\n            \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n            source + \"return __p;\\n\";\n\n        try {\n            render = new Function(settings.variable || 'obj', '_', source);\n        } catch (e) {\n            e.source = source;\n            throw e;\n        }\n\n        if (data) return render(data, _);\n        var template = function(data) {\n            return render.call(this, data, _);\n        };\n\n        // Provide the compiled function source as a convenience for precompilation.\n        template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n        return template;\n    };\n\n    // Add a \"chain\" function, which will delegate to the wrapper.\n    _.chain = function(obj) {\n        return _(obj).chain();\n    };\n\n    // OOP\n    // ---------------\n    // If Underscore is called as a function, it returns a wrapped object that\n    // can be used OO-style. This wrapper holds altered versions of all the\n    // underscore functions. Wrapped objects may be chained.\n\n    // Helper function to continue chaining intermediate results.\n    var result = function(obj) {\n        return this._chain ? _(obj).chain() : obj;\n    };\n\n    // Add all of the Underscore functions to the wrapper object.\n    _.mixin(_);\n\n    // Add all mutator Array functions to the wrapper.\n    each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n        var method = ArrayProto[name];\n        _.prototype[name] = function() {\n            var obj = this._wrapped;\n            method.apply(obj, arguments);\n            if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n            return result.call(this, obj);\n        };\n    });\n\n    // Add all accessor Array functions to the wrapper.\n    each(['concat', 'join', 'slice'], function(name) {\n        var method = ArrayProto[name];\n        _.prototype[name] = function() {\n            return result.call(this, method.apply(this._wrapped, arguments));\n        };\n    });\n\n    _.extend(_.prototype, {\n\n        // Start chaining a wrapped Underscore object.\n        chain: function() {\n            this._chain = true;\n            return this;\n        },\n\n        // Extracts the result from a wrapped and chained object.\n        value: function() {\n            return this._wrapped;\n        }\n\n    });\n\n}).call(this);\ndefine(\"underscore\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global._;\n    };\n}(this)));\n",
    "\n//     Backbone.js 1.0.0\n\n//     (c) 2010-2013 Jeremy Ashkenas, DocumentCloud Inc.\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(){\n\n    // Initial Setup\n    // -------------\n\n    // Save a reference to the global object (`window` in the browser, `exports`\n    // on the server).\n    var root = this;\n\n    // Save the previous value of the `Backbone` variable, so that it can be\n    // restored later on, if `noConflict` is used.\n    var previousBackbone = root.Backbone;\n\n    // Create local references to array methods we'll want to use later.\n    var array = [];\n    var push = array.push;\n    var slice = array.slice;\n    var splice = array.splice;\n\n    // The top-level namespace. All public Backbone classes and modules will\n    // be attached to this. Exported for both the browser and the server.\n    var Backbone;\n    if (typeof exports !== 'undefined') {\n        Backbone = exports;\n    } else {\n        Backbone = root.Backbone = {};\n    }\n\n    // Current version of the library. Keep in sync with `package.json`.\n    Backbone.VERSION = '1.0.0';\n\n    // Require Underscore, if we're on the server, and it's not already present.\n    var _ = root._;\n    if (!_ && (typeof require !== 'undefined')) _ = require('underscore');\n\n    // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n    // the `$` variable.\n    Backbone.$ = root.jQuery || root.Zepto || root.ender || root.$;\n\n    // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n    // to its previous owner. Returns a reference to this Backbone object.\n    Backbone.noConflict = function() {\n        root.Backbone = previousBackbone;\n        return this;\n    };\n\n    // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n    // will fake `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n    // set a `X-Http-Method-Override` header.\n    Backbone.emulateHTTP = false;\n\n    // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n    // `application/json` requests ... will encode the body as\n    // `application/x-www-form-urlencoded` instead and will send the model in a\n    // form param named `model`.\n    Backbone.emulateJSON = false;\n\n    // Backbone.Events\n    // ---------------\n\n    // A module that can be mixed in to *any object* in order to provide it with\n    // custom events. You may bind with `on` or remove with `off` callback\n    // functions to an event; `trigger`-ing an event fires all callbacks in\n    // succession.\n    //\n    //     var object = {};\n    //     _.extend(object, Backbone.Events);\n    //     object.on('expand', function(){ alert('expanded'); });\n    //     object.trigger('expand');\n    //\n    var Events = Backbone.Events = {\n\n        // Bind an event to a `callback` function. Passing `\"all\"` will bind\n        // the callback to all events fired.\n        on: function(name, callback, context) {\n            if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n            this._events || (this._events = {});\n            var events = this._events[name] || (this._events[name] = []);\n            events.push({callback: callback, context: context, ctx: context || this});\n            return this;\n        },\n\n        // Bind an event to only be triggered a single time. After the first time\n        // the callback is invoked, it will be removed.\n        once: function(name, callback, context) {\n            if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n            var self = this;\n            var once = _.once(function() {\n                self.off(name, once);\n                callback.apply(this, arguments);\n            });\n            once._callback = callback;\n            return this.on(name, once, context);\n        },\n\n        // Remove one or many callbacks. If `context` is null, removes all\n        // callbacks with that function. If `callback` is null, removes all\n        // callbacks for the event. If `name` is null, removes all bound\n        // callbacks for all events.\n        off: function(name, callback, context) {\n            var retain, ev, events, names, i, l, j, k;\n            if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n            if (!name && !callback && !context) {\n                this._events = {};\n                return this;\n            }\n\n            names = name ? [name] : _.keys(this._events);\n            for (i = 0, l = names.length; i < l; i++) {\n                name = names[i];\n                if (events = this._events[name]) {\n                    this._events[name] = retain = [];\n                    if (callback || context) {\n                        for (j = 0, k = events.length; j < k; j++) {\n                            ev = events[j];\n                            if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                                (context && context !== ev.context)) {\n                                retain.push(ev);\n                            }\n                        }\n                    }\n                    if (!retain.length) delete this._events[name];\n                }\n            }\n\n            return this;\n        },\n\n        // Trigger one or many events, firing all bound callbacks. Callbacks are\n        // passed the same arguments as `trigger` is, apart from the event name\n        // (unless you're listening on `\"all\"`, which will cause your callback to\n        // receive the true name of the event as the first argument).\n        trigger: function(name) {\n            if (!this._events) return this;\n            var args = slice.call(arguments, 1);\n            if (!eventsApi(this, 'trigger', name, args)) return this;\n            var events = this._events[name];\n            var allEvents = this._events.all;\n            if (events) triggerEvents(events, args);\n            if (allEvents) triggerEvents(allEvents, arguments);\n            return this;\n        },\n\n        // Tell this object to stop listening to either specific events ... or\n        // to every object it's currently listening to.\n        stopListening: function(obj, name, callback) {\n            var listeners = this._listeners;\n            if (!listeners) return this;\n            var deleteListener = !name && !callback;\n            if (typeof name === 'object') callback = this;\n            if (obj) (listeners = {})[obj._listenerId] = obj;\n            for (var id in listeners) {\n                listeners[id].off(name, callback, this);\n                if (deleteListener) delete this._listeners[id];\n            }\n            return this;\n        }\n\n    };\n\n    // Regular expression used to split event strings.\n    var eventSplitter = /\\s+/;\n\n    // Implement fancy features of the Events API such as multiple event\n    // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n    // in terms of the existing API.\n    var eventsApi = function(obj, action, name, rest) {\n        if (!name) return true;\n\n        // Handle event maps.\n        if (typeof name === 'object') {\n            for (var key in name) {\n                obj[action].apply(obj, [key, name[key]].concat(rest));\n            }\n            return false;\n        }\n\n        // Handle space separated event names.\n        if (eventSplitter.test(name)) {\n            var names = name.split(eventSplitter);\n            for (var i = 0, l = names.length; i < l; i++) {\n                obj[action].apply(obj, [names[i]].concat(rest));\n            }\n            return false;\n        }\n\n        return true;\n    };\n\n    // A difficult-to-believe, but optimized internal dispatch function for\n    // triggering events. Tries to keep the usual cases speedy (most internal\n    // Backbone events have 3 arguments).\n    var triggerEvents = function(events, args) {\n        var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n        switch (args.length) {\n            case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n            case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n            case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n            case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n            default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n        }\n    };\n\n    var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n    // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n    // listen to an event in another object ... keeping track of what it's\n    // listening to.\n    _.each(listenMethods, function(implementation, method) {\n        Events[method] = function(obj, name, callback) {\n            var listeners = this._listeners || (this._listeners = {});\n            var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));\n            listeners[id] = obj;\n            if (typeof name === 'object') callback = this;\n            obj[implementation](name, callback, this);\n            return this;\n        };\n    });\n\n    // Aliases for backwards compatibility.\n    Events.bind   = Events.on;\n    Events.unbind = Events.off;\n\n    // Allow the `Backbone` object to serve as a global event bus, for folks who\n    // want global \"pubsub\" in a convenient place.\n    _.extend(Backbone, Events);\n\n    // Backbone.Model\n    // --------------\n\n    // Backbone **Models** are the basic data object in the framework --\n    // frequently representing a row in a table in a database on your server.\n    // A discrete chunk of data and a bunch of useful, related methods for\n    // performing computations and transformations on that data.\n\n    // Create a new model with the specified attributes. A client id (`cid`)\n    // is automatically generated and assigned for you.\n    var Model = Backbone.Model = function(attributes, options) {\n        var defaults;\n        var attrs = attributes || {};\n        options || (options = {});\n        this.cid = _.uniqueId('c');\n        this.attributes = {};\n        _.extend(this, _.pick(options, modelOptions));\n        if (options.parse) attrs = this.parse(attrs, options) || {};\n        if (defaults = _.result(this, 'defaults')) {\n            attrs = _.defaults({}, attrs, defaults);\n        }\n        this.set(attrs, options);\n        this.changed = {};\n        this.initialize.apply(this, arguments);\n    };\n\n    // A list of options to be attached directly to the model, if provided.\n    var modelOptions = ['url', 'urlRoot', 'collection'];\n\n    // Attach all inheritable methods to the Model prototype.\n    _.extend(Model.prototype, Events, {\n\n        // A hash of attributes whose current and previous value differ.\n        changed: null,\n\n        // The value returned during the last failed validation.\n        validationError: null,\n\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n        // CouchDB users may want to set this to `\"_id\"`.\n        idAttribute: 'id',\n\n        // Initialize is an empty function by default. Override it with your own\n        // initialization logic.\n        initialize: function(){},\n\n        // Return a copy of the model's `attributes` object.\n        toJSON: function(options) {\n            return _.clone(this.attributes);\n        },\n\n        // Proxy `Backbone.sync` by default -- but override this if you need\n        // custom syncing semantics for *this* particular model.\n        sync: function() {\n            return Backbone.sync.apply(this, arguments);\n        },\n\n        // Get the value of an attribute.\n        get: function(attr) {\n            return this.attributes[attr];\n        },\n\n        // Get the HTML-escaped value of an attribute.\n        escape: function(attr) {\n            return _.escape(this.get(attr));\n        },\n\n        // Returns `true` if the attribute contains a value that is not null\n        // or undefined.\n        has: function(attr) {\n            return this.get(attr) != null;\n        },\n\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\n        // the core primitive operation of a model, updating the data and notifying\n        // anyone who needs to know about the change in state. The heart of the beast.\n        set: function(key, val, options) {\n            var attr, attrs, unset, changes, silent, changing, prev, current;\n            if (key == null) return this;\n\n            // Handle both `\"key\", value` and `{key: value}` -style arguments.\n            if (typeof key === 'object') {\n                attrs = key;\n                options = val;\n            } else {\n                (attrs = {})[key] = val;\n            }\n\n            options || (options = {});\n\n            // Run validation.\n            if (!this._validate(attrs, options)) return false;\n\n            // Extract attributes and options.\n            unset           = options.unset;\n            silent          = options.silent;\n            changes         = [];\n            changing        = this._changing;\n            this._changing  = true;\n\n            if (!changing) {\n                this._previousAttributes = _.clone(this.attributes);\n                this.changed = {};\n            }\n            current = this.attributes, prev = this._previousAttributes;\n\n            // Check for changes of `id`.\n            if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n            // For each `set` attribute, update or delete the current value.\n            for (attr in attrs) {\n                val = attrs[attr];\n                if (!_.isEqual(current[attr], val)) changes.push(attr);\n                if (!_.isEqual(prev[attr], val)) {\n                    this.changed[attr] = val;\n                } else {\n                    delete this.changed[attr];\n                }\n                unset ? delete current[attr] : current[attr] = val;\n            }\n\n            // Trigger all relevant attribute changes.\n            if (!silent) {\n                if (changes.length) this._pending = true;\n                for (var i = 0, l = changes.length; i < l; i++) {\n                    this.trigger('change:' + changes[i], this, current[changes[i]], options);\n                }\n            }\n\n            // You might be wondering why there's a `while` loop here. Changes can\n            // be recursively nested within `\"change\"` events.\n            if (changing) return this;\n            if (!silent) {\n                while (this._pending) {\n                    this._pending = false;\n                    this.trigger('change', this, options);\n                }\n            }\n            this._pending = false;\n            this._changing = false;\n            return this;\n        },\n\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n        // if the attribute doesn't exist.\n        unset: function(attr, options) {\n            return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n        },\n\n        // Clear all attributes on the model, firing `\"change\"`.\n        clear: function(options) {\n            var attrs = {};\n            for (var key in this.attributes) attrs[key] = void 0;\n            return this.set(attrs, _.extend({}, options, {unset: true}));\n        },\n\n        // Determine if the model has changed since the last `\"change\"` event.\n        // If you specify an attribute name, determine if that attribute has changed.\n        hasChanged: function(attr) {\n            if (attr == null) return !_.isEmpty(this.changed);\n            return _.has(this.changed, attr);\n        },\n\n        // Return an object containing all the attributes that have changed, or\n        // false if there are no changed attributes. Useful for determining what\n        // parts of a view need to be updated and/or what attributes need to be\n        // persisted to the server. Unset attributes will be set to undefined.\n        // You can also pass an attributes object to diff against the model,\n        // determining if there *would be* a change.\n        changedAttributes: function(diff) {\n            if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n            var val, changed = false;\n            var old = this._changing ? this._previousAttributes : this.attributes;\n            for (var attr in diff) {\n                if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n                (changed || (changed = {}))[attr] = val;\n            }\n            return changed;\n        },\n\n        // Get the previous value of an attribute, recorded at the time the last\n        // `\"change\"` event was fired.\n        previous: function(attr) {\n            if (attr == null || !this._previousAttributes) return null;\n            return this._previousAttributes[attr];\n        },\n\n        // Get all of the attributes of the model at the time of the previous\n        // `\"change\"` event.\n        previousAttributes: function() {\n            return _.clone(this._previousAttributes);\n        },\n\n        // Fetch the model from the server. If the server's representation of the\n        // model differs from its current attributes, they will be overridden,\n        // triggering a `\"change\"` event.\n        fetch: function(options) {\n            options = options ? _.clone(options) : {};\n            if (options.parse === void 0) options.parse = true;\n            var model = this;\n            var success = options.success;\n            options.success = function(resp) {\n                if (!model.set(model.parse(resp, options), options)) return false;\n                if (success) success(model, resp, options);\n                model.trigger('sync', model, resp, options);\n            };\n            wrapError(this, options);\n            return this.sync('read', this, options);\n        },\n\n        // Set a hash of model attributes, and sync the model to the server.\n        // If the server returns an attributes hash that differs, the model's\n        // state will be `set` again.\n        save: function(key, val, options) {\n            var attrs, method, xhr, attributes = this.attributes;\n\n            // Handle both `\"key\", value` and `{key: value}` -style arguments.\n            if (key == null || typeof key === 'object') {\n                attrs = key;\n                options = val;\n            } else {\n                (attrs = {})[key] = val;\n            }\n\n            // If we're not waiting and attributes exist, save acts as `set(attr).save(null, opts)`.\n            if (attrs && (!options || !options.wait) && !this.set(attrs, options)) return false;\n\n            options = _.extend({validate: true}, options);\n\n            // Do not persist invalid models.\n            if (!this._validate(attrs, options)) return false;\n\n            // Set temporary attributes if `{wait: true}`.\n            if (attrs && options.wait) {\n                this.attributes = _.extend({}, attributes, attrs);\n            }\n\n            // After a successful server-side save, the client is (optionally)\n            // updated with the server-side state.\n            if (options.parse === void 0) options.parse = true;\n            var model = this;\n            var success = options.success;\n            options.success = function(resp) {\n                // Ensure attributes are restored during synchronous saves.\n                model.attributes = attributes;\n                var serverAttrs = model.parse(resp, options);\n                if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n                if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n                    return false;\n                }\n                if (success) success(model, resp, options);\n                model.trigger('sync', model, resp, options);\n            };\n            wrapError(this, options);\n\n            method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n            if (method === 'patch') options.attrs = attrs;\n            xhr = this.sync(method, this, options);\n\n            // Restore attributes.\n            if (attrs && options.wait) this.attributes = attributes;\n\n            return xhr;\n        },\n\n        // Destroy this model on the server if it was already persisted.\n        // Optimistically removes the model from its collection, if it has one.\n        // If `wait: true` is passed, waits for the server to respond before removal.\n        destroy: function(options) {\n            options = options ? _.clone(options) : {};\n            var model = this;\n            var success = options.success;\n\n            var destroy = function() {\n                model.trigger('destroy', model, model.collection, options);\n            };\n\n            options.success = function(resp) {\n                if (options.wait || model.isNew()) destroy();\n                if (success) success(model, resp, options);\n                if (!model.isNew()) model.trigger('sync', model, resp, options);\n            };\n\n            if (this.isNew()) {\n                options.success();\n                return false;\n            }\n            wrapError(this, options);\n\n            var xhr = this.sync('delete', this, options);\n            if (!options.wait) destroy();\n            return xhr;\n        },\n\n        // Default URL for the model's representation on the server -- if you're\n        // using Backbone's restful methods, override this to change the endpoint\n        // that will be called.\n        url: function() {\n            var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();\n            if (this.isNew()) return base;\n            return base + (base.charAt(base.length - 1) === '/' ? '' : '/') + encodeURIComponent(this.id);\n        },\n\n        // **parse** converts a response into the hash of attributes to be `set` on\n        // the model. The default implementation is just to pass the response along.\n        parse: function(resp, options) {\n            return resp;\n        },\n\n        // Create a new model with identical attributes to this one.\n        clone: function() {\n            return new this.constructor(this.attributes);\n        },\n\n        // A model is new if it has never been saved to the server, and lacks an id.\n        isNew: function() {\n            return this.id == null;\n        },\n\n        // Check if the model is currently in a valid state.\n        isValid: function(options) {\n            return this._validate({}, _.extend(options || {}, { validate: true }));\n        },\n\n        // Run validation against the next complete set of model attributes,\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n        _validate: function(attrs, options) {\n            if (!options.validate || !this.validate) return true;\n            attrs = _.extend({}, this.attributes, attrs);\n            var error = this.validationError = this.validate(attrs, options) || null;\n            if (!error) return true;\n            this.trigger('invalid', this, error, _.extend(options || {}, {validationError: error}));\n            return false;\n        }\n\n    });\n\n    // Underscore methods that we want to implement on the Model.\n    var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];\n\n    // Mix in each Underscore method as a proxy to `Model#attributes`.\n    _.each(modelMethods, function(method) {\n        Model.prototype[method] = function() {\n            var args = slice.call(arguments);\n            args.unshift(this.attributes);\n            return _[method].apply(_, args);\n        };\n    });\n\n    // Backbone.Collection\n    // -------------------\n\n    // If models tend to represent a single row of data, a Backbone Collection is\n    // more analagous to a table full of data ... or a small slice or page of that\n    // table, or a collection of rows that belong together for a particular reason\n    // -- all of the messages in this particular folder, all of the documents\n    // belonging to this particular author, and so on. Collections maintain\n    // indexes of their models, both in order, and for lookup by `id`.\n\n    // Create a new **Collection**, perhaps to contain a specific type of `model`.\n    // If a `comparator` is specified, the Collection will maintain\n    // its models in sort order, as they're added and removed.\n    var Collection = Backbone.Collection = function(models, options) {\n        options || (options = {});\n        if (options.url) this.url = options.url;\n        if (options.model) this.model = options.model;\n        if (options.comparator !== void 0) this.comparator = options.comparator;\n        this._reset();\n        this.initialize.apply(this, arguments);\n        if (models) this.reset(models, _.extend({silent: true}, options));\n    };\n\n    // Default options for `Collection#set`.\n    var setOptions = {add: true, remove: true, merge: true};\n    var addOptions = {add: true, merge: false, remove: false};\n\n    // Define the Collection's inheritable methods.\n    _.extend(Collection.prototype, Events, {\n\n        // The default model for a collection is just a **Backbone.Model**.\n        // This should be overridden in most cases.\n        model: Model,\n\n        // Initialize is an empty function by default. Override it with your own\n        // initialization logic.\n        initialize: function(){},\n\n        // The JSON representation of a Collection is an array of the\n        // models' attributes.\n        toJSON: function(options) {\n            return this.map(function(model){ return model.toJSON(options); });\n        },\n\n        // Proxy `Backbone.sync` by default.\n        sync: function() {\n            return Backbone.sync.apply(this, arguments);\n        },\n\n        // Add a model, or list of models to the set.\n        add: function(models, options) {\n            return this.set(models, _.defaults(options || {}, addOptions));\n        },\n\n        // Remove a model, or a list of models from the set.\n        remove: function(models, options) {\n            models = _.isArray(models) ? models.slice() : [models];\n            options || (options = {});\n            var i, l, index, model;\n            for (i = 0, l = models.length; i < l; i++) {\n                model = this.get(models[i]);\n                if (!model) continue;\n                delete this._byId[model.id];\n                delete this._byId[model.cid];\n                index = this.indexOf(model);\n                this.models.splice(index, 1);\n                this.length--;\n                if (!options.silent) {\n                    options.index = index;\n                    model.trigger('remove', model, this, options);\n                }\n                this._removeReference(model);\n            }\n            return this;\n        },\n\n        // Update a collection by `set`-ing a new list of models, adding new ones,\n        // removing models that are no longer present, and merging models that\n        // already exist in the collection, as necessary. Similar to **Model#set**,\n        // the core operation for updating the data contained by the collection.\n        set: function(models, options) {\n            options = _.defaults(options || {}, setOptions);\n            if (options.parse) models = this.parse(models, options);\n            if (!_.isArray(models)) models = models ? [models] : [];\n            var i, l, model, attrs, existing, sort;\n            var at = options.at;\n            var sortable = this.comparator && (at == null) && options.sort !== false;\n            var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n            var toAdd = [], toRemove = [], modelMap = {};\n\n            // Turn bare objects into model references, and prevent invalid models\n            // from being added.\n            for (i = 0, l = models.length; i < l; i++) {\n                if (!(model = this._prepareModel(models[i], options))) continue;\n\n                // If a duplicate is found, prevent it from being added and\n                // optionally merge it into the existing model.\n                if (existing = this.get(model)) {\n                    if (options.remove) modelMap[existing.cid] = true;\n                    if (options.merge) {\n                        existing.set(model.attributes, options);\n                        if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n                    }\n\n                    // This is a new model, push it to the `toAdd` list.\n                } else if (options.add) {\n                    toAdd.push(model);\n\n                    // Listen to added models' events, and index models for lookup by\n                    // `id` and by `cid`.\n                    model.on('all', this._onModelEvent, this);\n                    this._byId[model.cid] = model;\n                    if (model.id != null) this._byId[model.id] = model;\n                }\n            }\n\n            // Remove nonexistent models if appropriate.\n            if (options.remove) {\n                for (i = 0, l = this.length; i < l; ++i) {\n                    if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n                }\n                if (toRemove.length) this.remove(toRemove, options);\n            }\n\n            // See if sorting is needed, update `length` and splice in new models.\n            if (toAdd.length) {\n                if (sortable) sort = true;\n                this.length += toAdd.length;\n                if (at != null) {\n                    splice.apply(this.models, [at, 0].concat(toAdd));\n                } else {\n                    push.apply(this.models, toAdd);\n                }\n            }\n\n            // Silently sort the collection if appropriate.\n            if (sort) this.sort({silent: true});\n\n            if (options.silent) return this;\n\n            // Trigger `add` events.\n            for (i = 0, l = toAdd.length; i < l; i++) {\n                (model = toAdd[i]).trigger('add', model, this, options);\n            }\n\n            // Trigger `sort` if the collection was sorted.\n            if (sort) this.trigger('sort', this, options);\n            return this;\n        },\n\n        // When you have more items than you want to add or remove individually,\n        // you can reset the entire set with a new list of models, without firing\n        // any granular `add` or `remove` events. Fires `reset` when finished.\n        // Useful for bulk operations and optimizations.\n        reset: function(models, options) {\n            options || (options = {});\n            for (var i = 0, l = this.models.length; i < l; i++) {\n                this._removeReference(this.models[i]);\n            }\n            options.previousModels = this.models;\n            this._reset();\n            this.add(models, _.extend({silent: true}, options));\n            if (!options.silent) this.trigger('reset', this, options);\n            return this;\n        },\n\n        // Add a model to the end of the collection.\n        push: function(model, options) {\n            model = this._prepareModel(model, options);\n            this.add(model, _.extend({at: this.length}, options));\n            return model;\n        },\n\n        // Remove a model from the end of the collection.\n        pop: function(options) {\n            var model = this.at(this.length - 1);\n            this.remove(model, options);\n            return model;\n        },\n\n        // Add a model to the beginning of the collection.\n        unshift: function(model, options) {\n            model = this._prepareModel(model, options);\n            this.add(model, _.extend({at: 0}, options));\n            return model;\n        },\n\n        // Remove a model from the beginning of the collection.\n        shift: function(options) {\n            var model = this.at(0);\n            this.remove(model, options);\n            return model;\n        },\n\n        // Slice out a sub-array of models from the collection.\n        slice: function(begin, end) {\n            return this.models.slice(begin, end);\n        },\n\n        // Get a model from the set by id.\n        get: function(obj) {\n            if (obj == null) return void 0;\n            return this._byId[obj.id != null ? obj.id : obj.cid || obj];\n        },\n\n        // Get the model at the given index.\n        at: function(index) {\n            return this.models[index];\n        },\n\n        // Return models with matching attributes. Useful for simple cases of\n        // `filter`.\n        where: function(attrs, first) {\n            if (_.isEmpty(attrs)) return first ? void 0 : [];\n            return this[first ? 'find' : 'filter'](function(model) {\n                for (var key in attrs) {\n                    if (attrs[key] !== model.get(key)) return false;\n                }\n                return true;\n            });\n        },\n\n        // Return the first model with matching attributes. Useful for simple cases\n        // of `find`.\n        findWhere: function(attrs) {\n            return this.where(attrs, true);\n        },\n\n        // Force the collection to re-sort itself. You don't need to call this under\n        // normal circumstances, as the set will maintain sort order as each item\n        // is added.\n        sort: function(options) {\n            if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n            options || (options = {});\n\n            // Run sort based on type of `comparator`.\n            if (_.isString(this.comparator) || this.comparator.length === 1) {\n                this.models = this.sortBy(this.comparator, this);\n            } else {\n                this.models.sort(_.bind(this.comparator, this));\n            }\n\n            if (!options.silent) this.trigger('sort', this, options);\n            return this;\n        },\n\n        // Figure out the smallest index at which a model should be inserted so as\n        // to maintain order.\n        sortedIndex: function(model, value, context) {\n            value || (value = this.comparator);\n            var iterator = _.isFunction(value) ? value : function(model) {\n                return model.get(value);\n            };\n            return _.sortedIndex(this.models, model, iterator, context);\n        },\n\n        // Pluck an attribute from each model in the collection.\n        pluck: function(attr) {\n            return _.invoke(this.models, 'get', attr);\n        },\n\n        // Fetch the default set of models for this collection, resetting the\n        // collection when they arrive. If `reset: true` is passed, the response\n        // data will be passed through the `reset` method instead of `set`.\n        fetch: function(options) {\n            options = options ? _.clone(options) : {};\n            if (options.parse === void 0) options.parse = true;\n            var success = options.success;\n            var collection = this;\n            options.success = function(resp) {\n                var method = options.reset ? 'reset' : 'set';\n                collection[method](resp, options);\n                if (success) success(collection, resp, options);\n                collection.trigger('sync', collection, resp, options);\n            };\n            wrapError(this, options);\n            return this.sync('read', this, options);\n        },\n\n        // Create a new instance of a model in this collection. Add the model to the\n        // collection immediately, unless `wait: true` is passed, in which case we\n        // wait for the server to agree.\n        create: function(model, options) {\n            options = options ? _.clone(options) : {};\n            if (!(model = this._prepareModel(model, options))) return false;\n            if (!options.wait) this.add(model, options);\n            var collection = this;\n            var success = options.success;\n            options.success = function(resp) {\n                if (options.wait) collection.add(model, options);\n                if (success) success(model, resp, options);\n            };\n            model.save(null, options);\n            return model;\n        },\n\n        // **parse** converts a response into a list of models to be added to the\n        // collection. The default implementation is just to pass it through.\n        parse: function(resp, options) {\n            return resp;\n        },\n\n        // Create a new collection with an identical list of models as this one.\n        clone: function() {\n            return new this.constructor(this.models);\n        },\n\n        // Private method to reset all internal state. Called when the collection\n        // is first initialized or reset.\n        _reset: function() {\n            this.length = 0;\n            this.models = [];\n            this._byId  = {};\n        },\n\n        // Prepare a hash of attributes (or other model) to be added to this\n        // collection.\n        _prepareModel: function(attrs, options) {\n            if (attrs instanceof Model) {\n                if (!attrs.collection) attrs.collection = this;\n                return attrs;\n            }\n            options || (options = {});\n            options.collection = this;\n            var model = new this.model(attrs, options);\n            if (!model._validate(attrs, options)) {\n                this.trigger('invalid', this, attrs, options);\n                return false;\n            }\n            return model;\n        },\n\n        // Internal method to sever a model's ties to a collection.\n        _removeReference: function(model) {\n            if (this === model.collection) delete model.collection;\n            model.off('all', this._onModelEvent, this);\n        },\n\n        // Internal method called every time a model in the set fires an event.\n        // Sets need to update their indexes when models change ids. All other\n        // events simply proxy through. \"add\" and \"remove\" events that originate\n        // in other collections are ignored.\n        _onModelEvent: function(event, model, collection, options) {\n            if ((event === 'add' || event === 'remove') && collection !== this) return;\n            if (event === 'destroy') this.remove(model, options);\n            if (model && event === 'change:' + model.idAttribute) {\n                delete this._byId[model.previous(model.idAttribute)];\n                if (model.id != null) this._byId[model.id] = model;\n            }\n            this.trigger.apply(this, arguments);\n        }\n\n    });\n\n    // Underscore methods that we want to implement on the Collection.\n    // 90% of the core usefulness of Backbone Collections is actually implemented\n    // right here:\n    var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n        'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n        'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n        'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n        'tail', 'drop', 'last', 'without', 'indexOf', 'shuffle', 'lastIndexOf',\n        'isEmpty', 'chain'];\n\n    // Mix in each Underscore method as a proxy to `Collection#models`.\n    _.each(methods, function(method) {\n        Collection.prototype[method] = function() {\n            var args = slice.call(arguments);\n            args.unshift(this.models);\n            return _[method].apply(_, args);\n        };\n    });\n\n    // Underscore methods that take a property name as an argument.\n    var attributeMethods = ['groupBy', 'countBy', 'sortBy'];\n\n    // Use attributes instead of properties.\n    _.each(attributeMethods, function(method) {\n        Collection.prototype[method] = function(value, context) {\n            var iterator = _.isFunction(value) ? value : function(model) {\n                return model.get(value);\n            };\n            return _[method](this.models, iterator, context);\n        };\n    });\n\n    // Backbone.View\n    // -------------\n\n    // Backbone Views are almost more convention than they are actual code. A View\n    // is simply a JavaScript object that represents a logical chunk of UI in the\n    // DOM. This might be a single item, an entire list, a sidebar or panel, or\n    // even the surrounding frame which wraps your whole app. Defining a chunk of\n    // UI as a **View** allows you to define your DOM events declaratively, without\n    // having to worry about render order ... and makes it easy for the view to\n    // react to specific changes in the state of your models.\n\n    // Creating a Backbone.View creates its initial element outside of the DOM,\n    // if an existing element is not provided...\n    var View = Backbone.View = function(options) {\n        this.cid = _.uniqueId('view');\n        this._configure(options || {});\n        this._ensureElement();\n        this.initialize.apply(this, arguments);\n        this.delegateEvents();\n    };\n\n    // Cached regex to split keys for `delegate`.\n    var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n    // List of view options to be merged as properties.\n    var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n    // Set up all inheritable **Backbone.View** properties and methods.\n    _.extend(View.prototype, Events, {\n\n        // The default `tagName` of a View's element is `\"div\"`.\n        tagName: 'div',\n\n        // jQuery delegate for element lookup, scoped to DOM elements within the\n        // current view. This should be prefered to global lookups where possible.\n        $: function(selector) {\n            return this.$el.find(selector);\n        },\n\n        // Initialize is an empty function by default. Override it with your own\n        // initialization logic.\n        initialize: function(){},\n\n        // **render** is the core function that your view should override, in order\n        // to populate its element (`this.el`), with the appropriate HTML. The\n        // convention is for **render** to always return `this`.\n        render: function() {\n            return this;\n        },\n\n        // Remove this view by taking the element out of the DOM, and removing any\n        // applicable Backbone.Events listeners.\n        remove: function() {\n            this.$el.remove();\n            this.stopListening();\n            return this;\n        },\n\n        // Change the view's element (`this.el` property), including event\n        // re-delegation.\n        setElement: function(element, delegate) {\n            if (this.$el) this.undelegateEvents();\n            this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);\n            this.el = this.$el[0];\n            if (delegate !== false) this.delegateEvents();\n            return this;\n        },\n\n        // Set callbacks, where `this.events` is a hash of\n        //\n        // *{\"event selector\": \"callback\"}*\n        //\n        //     {\n        //       'mousedown .title':  'edit',\n        //       'click .button':     'save'\n        //       'click .open':       function(e) { ... }\n        //     }\n        //\n        // pairs. Callbacks will be bound to the view, with `this` set properly.\n        // Uses event delegation for efficiency.\n        // Omitting the selector binds the event to `this.el`.\n        // This only works for delegate-able events: not `focus`, `blur`, and\n        // not `change`, `submit`, and `reset` in Internet Explorer.\n        delegateEvents: function(events) {\n            if (!(events || (events = _.result(this, 'events')))) return this;\n            this.undelegateEvents();\n            for (var key in events) {\n                var method = events[key];\n                if (!_.isFunction(method)) method = this[events[key]];\n                if (!method) continue;\n\n                var match = key.match(delegateEventSplitter);\n                var eventName = match[1], selector = match[2];\n                method = _.bind(method, this);\n                eventName += '.delegateEvents' + this.cid;\n                if (selector === '') {\n                    this.$el.on(eventName, method);\n                } else {\n                    this.$el.on(eventName, selector, method);\n                }\n            }\n            return this;\n        },\n\n        // Clears all callbacks previously bound to the view with `delegateEvents`.\n        // You usually don't need to use this, but may wish to if you have multiple\n        // Backbone views attached to the same DOM element.\n        undelegateEvents: function() {\n            this.$el.off('.delegateEvents' + this.cid);\n            return this;\n        },\n\n        // Performs the initial configuration of a View with a set of options.\n        // Keys with special meaning *(e.g. model, collection, id, className)* are\n        // attached directly to the view.  See `viewOptions` for an exhaustive\n        // list.\n        _configure: function(options) {\n            if (this.options) options = _.extend({}, _.result(this, 'options'), options);\n            _.extend(this, _.pick(options, viewOptions));\n            this.options = options;\n        },\n\n        // Ensure that the View has a DOM element to render into.\n        // If `this.el` is a string, pass it through `$()`, take the first\n        // matching element, and re-assign it to `el`. Otherwise, create\n        // an element from the `id`, `className` and `tagName` properties.\n        _ensureElement: function() {\n            if (!this.el) {\n                var attrs = _.extend({}, _.result(this, 'attributes'));\n                if (this.id) attrs.id = _.result(this, 'id');\n                if (this.className) attrs['class'] = _.result(this, 'className');\n                var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);\n                this.setElement($el, false);\n            } else {\n                this.setElement(_.result(this, 'el'), false);\n            }\n        }\n\n    });\n\n    // Backbone.sync\n    // -------------\n\n    // Override this function to change the manner in which Backbone persists\n    // models to the server. You will be passed the type of request, and the\n    // model in question. By default, makes a RESTful Ajax request\n    // to the model's `url()`. Some possible customizations could be:\n    //\n    // * Use `setTimeout` to batch rapid-fire updates into a single request.\n    // * Send up the models as XML instead of JSON.\n    // * Persist models via WebSockets instead of Ajax.\n    //\n    // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n    // as `POST`, with a `_method` parameter containing the true HTTP method,\n    // as well as all requests with the body as `application/x-www-form-urlencoded`\n    // instead of `application/json` with the model in a param named `model`.\n    // Useful when interfacing with server-side languages like **PHP** that make\n    // it difficult to read the body of `PUT` requests.\n    Backbone.sync = function(method, model, options) {\n        var type = methodMap[method];\n\n        // Default options, unless specified.\n        _.defaults(options || (options = {}), {\n            emulateHTTP: Backbone.emulateHTTP,\n            emulateJSON: Backbone.emulateJSON\n        });\n\n        // Default JSON-request options.\n        var params = {type: type, dataType: 'json'};\n\n        // Ensure that we have a URL.\n        if (!options.url) {\n            params.url = _.result(model, 'url') || urlError();\n        }\n\n        // Ensure that we have the appropriate request data.\n        if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n            params.contentType = 'application/json';\n            params.data = JSON.stringify(options.attrs || model.toJSON(options));\n        }\n\n        // For older servers, emulate JSON by encoding the request into an HTML-form.\n        if (options.emulateJSON) {\n            params.contentType = 'application/x-www-form-urlencoded';\n            params.data = params.data ? {model: params.data} : {};\n        }\n\n        // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n        // And an `X-HTTP-Method-Override` header.\n        if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n            params.type = 'POST';\n            if (options.emulateJSON) params.data._method = type;\n            var beforeSend = options.beforeSend;\n            options.beforeSend = function(xhr) {\n                xhr.setRequestHeader('X-HTTP-Method-Override', type);\n                if (beforeSend) return beforeSend.apply(this, arguments);\n            };\n        }\n\n        // Don't process data on a non-GET request.\n        if (params.type !== 'GET' && !options.emulateJSON) {\n            params.processData = false;\n        }\n\n        // If we're sending a `PATCH` request, and we're in an old Internet Explorer\n        // that still has ActiveX enabled by default, override jQuery to use that\n        // for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.\n        if (params.type === 'PATCH' && window.ActiveXObject &&\n            !(window.external && window.external.msActiveXFilteringEnabled)) {\n            params.xhr = function() {\n                return new ActiveXObject(\"Microsoft.XMLHTTP\");\n            };\n        }\n\n        // Make the request, allowing the user to override any Ajax options.\n        var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n        model.trigger('request', model, xhr, options);\n        return xhr;\n    };\n\n    // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n    var methodMap = {\n        'create': 'POST',\n        'update': 'PUT',\n        'patch':  'PATCH',\n        'delete': 'DELETE',\n        'read':   'GET'\n    };\n\n    // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n    // Override this if you'd like to use a different library.\n    Backbone.ajax = function() {\n        return Backbone.$.ajax.apply(Backbone.$, arguments);\n    };\n\n    // Backbone.Router\n    // ---------------\n\n    // Routers map faux-URLs to actions, and fire events when routes are\n    // matched. Creating a new one sets its `routes` hash, if not set statically.\n    var Router = Backbone.Router = function(options) {\n        options || (options = {});\n        if (options.routes) this.routes = options.routes;\n        this._bindRoutes();\n        this.initialize.apply(this, arguments);\n    };\n\n    // Cached regular expressions for matching named param parts and splatted\n    // parts of route strings.\n    var optionalParam = /\\((.*?)\\)/g;\n    var namedParam    = /(\\(\\?)?:\\w+/g;\n    var splatParam    = /\\*\\w+/g;\n    var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n    // Set up all inheritable **Backbone.Router** properties and methods.\n    _.extend(Router.prototype, Events, {\n\n        // Initialize is an empty function by default. Override it with your own\n        // initialization logic.\n        initialize: function(){},\n\n        // Manually bind a single named route to a callback. For example:\n        //\n        //     this.route('search/:query/p:num', 'search', function(query, num) {\n        //       ...\n        //     });\n        //\n        route: function(route, name, callback) {\n            if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n            if (_.isFunction(name)) {\n                callback = name;\n                name = '';\n            }\n            if (!callback) callback = this[name];\n            var router = this;\n            Backbone.history.route(route, function(fragment) {\n                var args = router._extractParameters(route, fragment);\n                callback && callback.apply(router, args);\n                router.trigger.apply(router, ['route:' + name].concat(args));\n                router.trigger('route', name, args);\n                Backbone.history.trigger('route', router, name, args);\n            });\n            return this;\n        },\n\n        // Simple proxy to `Backbone.history` to save a fragment into the history.\n        navigate: function(fragment, options) {\n            Backbone.history.navigate(fragment, options);\n            return this;\n        },\n\n        // Bind all defined routes to `Backbone.history`. We have to reverse the\n        // order of the routes here to support behavior where the most general\n        // routes can be defined at the bottom of the route map.\n        _bindRoutes: function() {\n            if (!this.routes) return;\n            this.routes = _.result(this, 'routes');\n            var route, routes = _.keys(this.routes);\n            while ((route = routes.pop()) != null) {\n                this.route(route, this.routes[route]);\n            }\n        },\n\n        // Convert a route string into a regular expression, suitable for matching\n        // against the current location hash.\n        _routeToRegExp: function(route) {\n            route = route.replace(escapeRegExp, '\\\\$&')\n                .replace(optionalParam, '(?:$1)?')\n                .replace(namedParam, function(match, optional){\n                    return optional ? match : '([^\\/]+)';\n                })\n                .replace(splatParam, '(.*?)');\n            return new RegExp('^' + route + '$');\n        },\n\n        // Given a route, and a URL fragment that it matches, return the array of\n        // extracted decoded parameters. Empty or unmatched parameters will be\n        // treated as `null` to normalize cross-browser behavior.\n        _extractParameters: function(route, fragment) {\n            var params = route.exec(fragment).slice(1);\n            return _.map(params, function(param) {\n                return param ? decodeURIComponent(param) : null;\n            });\n        }\n\n    });\n\n    // Backbone.History\n    // ----------------\n\n    // Handles cross-browser history management, based on either\n    // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n    // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n    // and URL fragments. If the browser supports neither (old IE, natch),\n    // falls back to polling.\n    var History = Backbone.History = function() {\n        this.handlers = [];\n        _.bindAll(this, 'checkUrl');\n\n        // Ensure that `History` can be used outside of the browser.\n        if (typeof window !== 'undefined') {\n            this.location = window.location;\n            this.history = window.history;\n        }\n    };\n\n    // Cached regex for stripping a leading hash/slash and trailing space.\n    var routeStripper = /^[#\\/]|\\s+$/g;\n\n    // Cached regex for stripping leading and trailing slashes.\n    var rootStripper = /^\\/+|\\/+$/g;\n\n    // Cached regex for detecting MSIE.\n    var isExplorer = /msie [\\w.]+/;\n\n    // Cached regex for removing a trailing slash.\n    var trailingSlash = /\\/$/;\n\n    // Has the history handling already been started?\n    History.started = false;\n\n    // Set up all inheritable **Backbone.History** properties and methods.\n    _.extend(History.prototype, Events, {\n\n        // The default interval to poll for hash changes, if necessary, is\n        // twenty times a second.\n        interval: 50,\n\n        // Gets the true hash value. Cannot use location.hash directly due to bug\n        // in Firefox where location.hash will always be decoded.\n        getHash: function(window) {\n            var match = (window || this).location.href.match(/#(.*)$/);\n            return match ? match[1] : '';\n        },\n\n        // Get the cross-browser normalized URL fragment, either from the URL,\n        // the hash, or the override.\n        getFragment: function(fragment, forcePushState) {\n            if (fragment == null) {\n                if (this._hasPushState || !this._wantsHashChange || forcePushState) {\n                    fragment = this.location.pathname;\n                    var root = this.root.replace(trailingSlash, '');\n                    if (!fragment.indexOf(root)) fragment = fragment.substr(root.length);\n                } else {\n                    fragment = this.getHash();\n                }\n            }\n            return fragment.replace(routeStripper, '');\n        },\n\n        // Start the hash change handling, returning `true` if the current URL matches\n        // an existing route, and `false` otherwise.\n        start: function(options) {\n            if (History.started) throw new Error(\"Backbone.history has already been started\");\n            History.started = true;\n\n            // Figure out the initial configuration. Do we need an iframe?\n            // Is pushState desired ... is it available?\n            this.options          = _.extend({}, {root: '/'}, this.options, options);\n            this.root             = this.options.root;\n            this._wantsHashChange = this.options.hashChange !== false;\n            this._wantsPushState  = !!this.options.pushState;\n            this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);\n            var fragment          = this.getFragment();\n            var docMode           = document.documentMode;\n            var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\n\n            // Normalize root to always include a leading and trailing slash.\n            this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n            if (oldIE && this._wantsHashChange) {\n                this.iframe = Backbone.$('<iframe src=\"javascript:0\" tabindex=\"-1\" />').hide().appendTo('body')[0].contentWindow;\n                this.navigate(fragment);\n            }\n\n            // Depending on whether we're using pushState or hashes, and whether\n            // 'onhashchange' is supported, determine how we check the URL state.\n            if (this._hasPushState) {\n                Backbone.$(window).on('popstate', this.checkUrl);\n            } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {\n                Backbone.$(window).on('hashchange', this.checkUrl);\n            } else if (this._wantsHashChange) {\n                this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n            }\n\n            // Determine if we need to change the base url, for a pushState link\n            // opened by a non-pushState browser.\n            this.fragment = fragment;\n            var loc = this.location;\n            var atRoot = loc.pathname.replace(/[^\\/]$/, '$&/') === this.root;\n\n            // If we've started off with a route from a `pushState`-enabled browser,\n            // but we're currently in a browser that doesn't support it...\n            if (this._wantsHashChange && this._wantsPushState && !this._hasPushState && !atRoot) {\n                this.fragment = this.getFragment(null, true);\n                this.location.replace(this.root + this.location.search + '#' + this.fragment);\n                // Return immediately as browser will do redirect to new url\n                return true;\n\n                // Or if we've started out with a hash-based route, but we're currently\n                // in a browser where it could be `pushState`-based instead...\n            } else if (this._wantsPushState && this._hasPushState && atRoot && loc.hash) {\n                this.fragment = this.getHash().replace(routeStripper, '');\n                this.history.replaceState({}, document.title, this.root + this.fragment + loc.search);\n            }\n\n            if (!this.options.silent) return this.loadUrl();\n        },\n\n        // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n        // but possibly useful for unit testing Routers.\n        stop: function() {\n            Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);\n            clearInterval(this._checkUrlInterval);\n            History.started = false;\n        },\n\n        // Add a route to be tested when the fragment changes. Routes added later\n        // may override previous routes.\n        route: function(route, callback) {\n            this.handlers.unshift({route: route, callback: callback});\n        },\n\n        // Checks the current URL to see if it has changed, and if it has,\n        // calls `loadUrl`, normalizing across the hidden iframe.\n        checkUrl: function(e) {\n            var current = this.getFragment();\n            if (current === this.fragment && this.iframe) {\n                current = this.getFragment(this.getHash(this.iframe));\n            }\n            if (current === this.fragment) return false;\n            if (this.iframe) this.navigate(current);\n            this.loadUrl() || this.loadUrl(this.getHash());\n        },\n\n        // Attempt to load the current URL fragment. If a route succeeds with a\n        // match, returns `true`. If no defined routes matches the fragment,\n        // returns `false`.\n        loadUrl: function(fragmentOverride) {\n            var fragment = this.fragment = this.getFragment(fragmentOverride);\n            var matched = _.any(this.handlers, function(handler) {\n                if (handler.route.test(fragment)) {\n                    handler.callback(fragment);\n                    return true;\n                }\n            });\n            return matched;\n        },\n\n        // Save a fragment into the hash history, or replace the URL state if the\n        // 'replace' option is passed. You are responsible for properly URL-encoding\n        // the fragment in advance.\n        //\n        // The options object can contain `trigger: true` if you wish to have the\n        // route callback be fired (not usually desirable), or `replace: true`, if\n        // you wish to modify the current URL without adding an entry to the history.\n        navigate: function(fragment, options) {\n            if (!History.started) return false;\n            if (!options || options === true) options = {trigger: options};\n            fragment = this.getFragment(fragment || '');\n            if (this.fragment === fragment) return;\n            this.fragment = fragment;\n            var url = this.root + fragment;\n\n            // If pushState is available, we use it to set the fragment as a real URL.\n            if (this._hasPushState) {\n                this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n                // If hash changes haven't been explicitly disabled, update the hash\n                // fragment to store history.\n            } else if (this._wantsHashChange) {\n                this._updateHash(this.location, fragment, options.replace);\n                if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {\n                    // Opening and closing the iframe tricks IE7 and earlier to push a\n                    // history entry on hash-tag change.  When replace is true, we don't\n                    // want this.\n                    if(!options.replace) this.iframe.document.open().close();\n                    this._updateHash(this.iframe.location, fragment, options.replace);\n                }\n\n                // If you've told us that you explicitly don't want fallback hashchange-\n                // based history, then `navigate` becomes a page refresh.\n            } else {\n                return this.location.assign(url);\n            }\n            if (options.trigger) this.loadUrl(fragment);\n        },\n\n        // Update the hash location, either replacing the current entry, or adding\n        // a new one to the browser history.\n        _updateHash: function(location, fragment, replace) {\n            if (replace) {\n                var href = location.href.replace(/(javascript:|#).*$/, '');\n                location.replace(href + '#' + fragment);\n            } else {\n                // Some browsers require that `hash` contains a leading #.\n                location.hash = '#' + fragment;\n            }\n        }\n\n    });\n\n    // Create the default Backbone.history.\n    Backbone.history = new History;\n\n    // Helpers\n    // -------\n\n    // Helper function to correctly set up the prototype chain, for subclasses.\n    // Similar to `goog.inherits`, but uses a hash of prototype properties and\n    // class properties to be extended.\n    var extend = function(protoProps, staticProps) {\n        var parent = this;\n        var child;\n\n        // The constructor function for the new subclass is either defined by you\n        // (the \"constructor\" property in your `extend` definition), or defaulted\n        // by us to simply call the parent's constructor.\n        if (protoProps && _.has(protoProps, 'constructor')) {\n            child = protoProps.constructor;\n        } else {\n            child = function(){ return parent.apply(this, arguments); };\n        }\n\n        // Add static properties to the constructor function, if supplied.\n        _.extend(child, parent, staticProps);\n\n        // Set the prototype chain to inherit from `parent`, without calling\n        // `parent`'s constructor function.\n        var Surrogate = function(){ this.constructor = child; };\n        Surrogate.prototype = parent.prototype;\n        child.prototype = new Surrogate;\n\n        // Add prototype properties (instance properties) to the subclass,\n        // if supplied.\n        if (protoProps) _.extend(child.prototype, protoProps);\n\n        // Set a convenience property in case the parent's prototype is needed\n        // later.\n        child.__super__ = parent.prototype;\n\n        return child;\n    };\n\n    // Set up inheritance for the model, collection, router, view and history.\n    Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n    // Throw an error when a URL is needed, and none is supplied.\n    var urlError = function() {\n        throw new Error('A \"url\" property or function must be specified');\n    };\n\n    // Wrap an optional error callback with a fallback error event.\n    var wrapError = function (model, options) {\n        var error = options.error;\n        options.error = function(resp) {\n            if (error) error(model, resp, options);\n            model.trigger('error', model, resp, options);\n        };\n    };\n\n}).call(this);\ndefine(\"backbone\", [\"underscore\",\"jquery\"], (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.Backbone;\n    };\n}(this)));\n",
    "\n/**\n * @license RequireJS text 2.0.6 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n define, window, process, Packages,\n java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = [],\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.6',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.indexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                    name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1, name.length);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                    text.useXhr;\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                        parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                    \"define(function () { return '\" +\n                        content +\n                        \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n            //Use a '.js' file name so that it indicates it is a\n            //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n        typeof process !== \"undefined\" &&\n        process.versions &&\n        !!process.versions.node)) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback) {\n            var file = fs.readFileSync(url, 'utf8');\n            //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n            if (file.indexOf('\\uFEFF') === 0) {\n                file = file.substring(1);\n            }\n            callback(file);\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n        text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        errback(err);\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n        typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                stringBuffer.append(line);\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n        typeof Components !== 'undefined' && Components.classes &&\n        Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes,\n            Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n\n        text.get = function (url, callback) {\n            var inStream, convertStream,\n                readData = {},\n                fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                    .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                    .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                    Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});",
    "\ndefine('text!template/donationModule.html',[],function () { return '<section class=\"<%= data.donationModule.orientation %> <%= data.donationModule.color %> <%= data.donationModule.dimensions %> <%= data.donationModule.tooltipStyle %> <% if (data.donationModule.active === true) { print(\\'active\\'); } %>\" id=\"elefunds-module\">\\n    <div class=\"section-top\">\\n        <h1 class=\"region-logo\">\\n            <a href=\"http://www.elefunds.de\">\\n                <svg id=\"elefundsLogo\" viewBox=\"0 0 407 84\" version=\"1.1\"\\n                    xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\"\\n                    x=\"0px\" y=\"0px\" width=\"407px\" height=\"84px\">\\n                    <g id=\"logoLayer\">\\n                        <path class=\"elephantIcon\" d=\"M 0 82.9063 L 9.9961 83.2443 L 13.6443 77.7535 L 16.214 77.6728 L 24.9819 63.3615 L 35.1597 72.1091 L 38.3468 82.3896 L 46.1944 82.376 L 46.8734 76.5228 L 48.9711 76.245 L 50.3321 49.2482 L 66.3214 38.7624 L 73.5006 26.8895 L 76.1416 0 L 71.0248 0.947 L 62.1748 25.4859 L 50.5266 19.7129 L 26.4054 22.959 L 23.1412 33.4551 L 9.5418 40.7934 L 3.3376 51.6338 L 2.8823 61.4771 L 0 82.9063 Z\" fill=\"#2f2728\"/>\\n                        <g>\\n                            <path class=\"logoText\" d=\"M 98.4757 38.8498 C 110.8919 38.8498 117.696 47.8961 117.696 59.3111 C 117.696 60.5796 117.441 63.2847 117.441 63.2847 L 87.5045 63.2847 C 88.3546 70.895 93.9676 74.8677 100.5167 74.8677 C 107.4908 74.8677 112.6779 70.049 112.6779 70.049 L 117.186 77.4893 C 117.186 77.4893 110.5519 84 99.7507 84 C 85.3775 84 76.4484 73.6846 76.4484 61.4246 C 76.4484 48.1506 85.4625 38.8498 98.4757 38.8498 ZM 106.6398 55.8444 C 106.4698 50.6867 102.8978 47.1356 98.4757 47.1356 C 92.9476 47.1356 89.0346 50.4332 87.8445 55.8444 L 106.6398 55.8444 Z\" fill=\"#2f2728\"/>\\n                            <path class=\"logoText\" d=\"M 124.4962 33.9461 C 124.4962 32.6775 123.8152 32.086 122.6252 32.086 L 119.2231 32.086 L 119.2231 22.9542 L 129.5143 22.9542 C 133.5113 22.9542 135.2973 24.7297 135.2973 28.7039 L 135.2973 72.078 C 135.2973 73.2611 135.9774 73.9381 137.1684 73.9381 L 140.4854 73.9381 L 140.4854 82.985 L 130.2793 82.985 C 126.1972 82.985 124.4962 81.2939 124.4962 77.2357 L 124.4962 33.9461 Z\" fill=\"#2f2728\"/>\\n                            <path class=\"logoText\" d=\"M 165.0609 38.8498 C 177.4771 38.8498 184.2812 47.8961 184.2812 59.3111 C 184.2812 60.5796 184.0262 63.2847 184.0262 63.2847 L 154.0897 63.2847 C 154.9397 70.895 160.5528 74.8677 167.1019 74.8677 C 174.076 74.8677 179.2631 70.049 179.2631 70.049 L 183.7711 77.4893 C 183.7711 77.4893 177.1371 84 166.3359 84 C 151.9627 84 143.0335 73.6846 143.0335 61.4246 C 143.0335 48.1506 152.0477 38.8498 165.0609 38.8498 ZM 173.225 55.8444 C 173.055 50.6867 169.4829 47.1356 165.0609 47.1356 C 159.5328 47.1356 155.6198 50.4332 154.4297 55.8444 L 173.225 55.8444 Z\" fill=\"#2f2728\"/>\\n                            <path class=\"logoText\" d=\"M 192.6124 48.4041 L 187.2543 48.4041 L 187.2543 39.8643 L 192.6124 39.8643 L 192.6124 38.5963 C 192.6124 24.4762 204.2635 22.6161 210.3026 22.6161 C 212.5137 22.6161 213.9597 22.8697 213.9597 22.8697 L 213.9597 32.001 C 213.9597 32.001 213.0237 31.832 211.7477 31.832 C 208.6866 31.832 203.4135 32.593 203.4135 38.8498 L 203.4135 39.8643 L 212.6837 39.8643 L 212.6837 48.4041 L 203.4135 48.4041 L 203.4135 82.985 L 192.6124 82.985 L 192.6124 48.4041 Z\" fill=\"#2f2728\"/>\\n                            <path class=\"logoText\" d=\"M 221.7799 50.8557 C 221.7799 49.5882 221.0989 48.9957 219.9089 48.9957 L 216.5068 48.9957 L 216.5068 39.8643 L 226.798 39.8643 C 230.795 39.8643 232.4961 41.6399 232.4961 45.529 L 232.4961 65.3983 C 232.4961 70.6405 233.8561 74.1916 239.2142 74.1916 C 247.0393 74.1916 251.3763 67.3438 251.3763 59.6491 L 251.3763 39.8643 L 262.1775 39.8643 L 262.1775 72.078 C 262.1775 73.2611 262.8575 73.9381 264.0485 73.9381 L 267.4506 73.9381 L 267.4506 82.985 L 257.4995 82.985 C 253.7574 82.985 251.8014 81.2094 251.8014 78.1663 L 251.8014 76.9813 C 251.8014 75.9672 251.8864 75.0367 251.8864 75.0367 L 251.7164 75.0367 C 249.6753 79.5183 244.2322 84 236.7481 84 C 227.478 84 221.7799 79.3493 221.7799 67.5964 L 221.7799 50.8557 Z\" fill=\"#2f2728\"/>\\n                            <path class=\"logoText\" d=\"M 273.4838 50.8557 C 273.4838 49.5882 272.8038 48.9957 271.6128 48.9957 L 268.2107 48.9957 L 268.2107 39.8643 L 278.1609 39.8643 C 281.9889 39.8643 283.86 41.6399 283.86 44.684 L 283.86 45.9516 C 283.86 46.8821 283.6899 47.8126 283.6899 47.8126 L 283.86 47.8126 C 285.731 44.176 290.4081 38.8498 299.1682 38.8498 C 308.7783 38.8498 314.3064 43.838 314.3064 55.2529 L 314.3064 72.078 C 314.3064 73.2611 314.9874 73.9381 316.1774 73.9381 L 319.5795 73.9381 L 319.5795 82.985 L 309.2893 82.985 C 305.2063 82.985 303.5052 81.2939 303.5052 77.2357 L 303.5052 57.451 C 303.5052 52.2088 302.1452 48.6576 296.7021 48.6576 C 290.9181 48.6576 286.581 52.2933 285.05 57.451 C 284.455 59.2266 284.2 61.1711 284.2 63.2002 L 284.2 82.985 L 273.4838 82.985 L 273.4838 50.8557 Z\" fill=\"#2f2728\"/>\\n                            <path class=\"logoText\" d=\"M 341.4319 38.8498 C 350.873 38.8498 353.9341 44.0925 353.9341 44.0925 L 354.1041 44.0925 C 354.1041 44.0925 354.0191 42.9929 354.0191 41.5554 L 354.0191 33.9461 C 354.0191 32.6775 353.3391 32.086 352.1481 32.086 L 348.746 32.086 L 348.746 22.9542 L 359.0372 22.9542 C 363.0342 22.9542 364.8203 24.7297 364.8203 28.7039 L 364.8203 72.078 C 364.8203 73.2611 365.5013 73.9381 366.6913 73.9381 L 370.0084 73.9381 L 370.0084 82.985 L 360.0582 82.985 C 356.1451 82.985 354.7001 81.1249 354.7001 78.5878 C 354.7001 77.6583 354.7001 76.9813 354.7001 76.9813 L 354.5301 76.9813 C 354.5301 76.9813 350.9581 84 341.0069 84 C 329.2707 84 321.7007 74.7841 321.7007 61.4246 C 321.7007 47.7271 329.9507 38.8498 341.4319 38.8498 ZM 354.2741 61.3401 C 354.2741 54.6604 350.7881 48.0651 343.559 48.0651 C 337.6049 48.0651 332.6728 52.8848 332.6728 61.4246 C 332.6728 69.6264 337.0099 74.9531 343.388 74.9531 C 349.002 74.9531 354.2741 70.895 354.2741 61.3401 Z\" fill=\"#2f2728\"/>\\n                            <path class=\"logoText\" d=\"M 377.4036 69.2884 C 377.4036 69.2884 382.9316 75.6292 390.3307 75.6292 C 393.6478 75.6292 396.1989 74.2761 396.1989 71.402 C 396.1989 65.3138 373.3215 65.3983 373.3215 51.4473 C 373.3215 42.8234 381.1456 38.8498 390.1607 38.8498 C 396.0288 38.8498 405.384 40.7944 405.384 47.8126 L 405.384 52.2933 L 395.8588 52.2933 L 395.8588 50.1797 C 395.8588 48.1506 392.7968 47.1356 390.4157 47.1356 C 386.5887 47.1356 383.9526 48.4886 383.9526 51.0257 C 383.9526 57.789 407 56.436 407 70.8095 C 407 78.9268 399.7709 84 390.3307 84 C 378.4246 84 372.3005 76.3052 372.3005 76.3052 L 377.4036 69.2884 Z\" fill=\"#2f2728\"/>\\n                        </g>\\n                    </g>\\n                </svg>\\n            </a>\\n            <div class=\"elefunds-tooltip\">\\n                <h2>\\n                    <%= data.translations.tooltipTitle %>\\n                </h2>\\n                <p>\\n                    <%= data.translations.tooltipDescription %>\\n                </p>\\n            </div>\\n        </h1>\\n        <div class=\"region-activate-module\">\\n            <div class=\"region-check\">\\n                <div class=\"checkbox-wrapper\">\\n                    <div class=\"checkmark checkmark-white checkmark-large\"></div>\\n                    <input type=\"checkbox\" name=\"donate-active\" id=\"donate-active\" />\\n                </div>\\n            </div>\\n            <div class=\"region-checklabel\">\\n                <label for=\"donate-active\"><%= data.donationModule.activateText %></label>\\n            </div>\\n        </div>\\n        <div class=\"region-donation-value\">\\n            <div class=\"region-buttons\">\\n                <div class=\"button-decrease\">\\n                -\\n                </div>\\n                <div class=\"button-increase\">\\n                +\\n                </div>\\n            </div>\\n            <div class=\"region-input\">\\n                <div class=\"donation-currency\">\\n                    <%= data.donation.currency %>\\n                </div>\\n                <input class=\"donation-input-full\" type=\"text\" value=\"<%= data.donation.donationAmountAbsolute %>\" maxlength=\"4\" />\\n                <div class=\"currency-delimiter\"><%= data.donation.currencyDelimiter %></div>\\n                <input class=\"donation-input-small\" type=\"text\" value=\"<%= data.donation.donationAmountAfterComma %>\" maxlength=\"2\">\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\"section-middle\">\\n        <ul>\\n            <% if (data.receivers.length === 0) { %>\\n                <li class=\"loading-indicator\">\\n                    <div class=\"jumpingBall\">\\n                        <div class=\"wBall\" id=\"wBall_1\">\\n                            <div class=\"wInnerBall\">\\n                            </div>\\n                        </div>\\n                        <div class=\"wBall\" id=\"wBall_2\">\\n                            <div class=\"wInnerBall\">\\n                            </div>\\n                        </div>\\n                        <div class=\"wBall\" id=\"wBall_3\">\\n                            <div class=\"wInnerBall\">\\n                            </div>\\n                        </div>\\n                        <div class=\"wBall\" id=\"wBall_4\">\\n                            <div class=\"wInnerBall\">\\n                            </div>\\n                        </div>\\n                        <div class=\"wBall\" id=\"wBall_5\">\\n                            <div class=\"wInnerBall\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </li>\\n            <% } %>\\n            <% _.each(data.receivers, function (receiver) { %>\\n                <li data-receiver=\"<%= receiver.id %>\" class=\"<% if (receiver.active === true) { print(\\'active\\') } %>\">\\n                    <div class=\"checkbox-wrapper\">\\n                        <div class=\"checkmark checkmark-black checkmark-medium\"></div>\\n                        <input type=\"checkbox\" name=\"<%= receiver.nameURLFriendly %>\" id=\"<%= receiver.nameURLFriendly %>\" />\\n                    </div>\\n                    <label style=\"background-image: url(<%= receiver.imageURL %>);\" for=\"<%= receiver.nameURLFriendly %>\"><%= receiver.name %></label>\\n                    <div class=\"receiver-tooltip\">\\n                        <h2><%= receiver.name %></h2>\\n                        <p><%= receiver.description %></p>\\n                    </div>\\n                </li>\\n            <% }); %>\\n        </ul>\\n    </div>\\n\\n    <div class=\"section-bottom\">\\n        <div class=\"donation-receipt\">\\n            <div class=\"checkbox-wrapper\">\\n                <input type=\"checkbox\" name=\"receipt-active\" />\\n            </div>\\n            <%= data.donation.donationReceiptText %>\\n        </div>\\n        <div class=\"region-sum\">\\n            <span class=\"round-sum-text\">\\n                <%= data.donationModule.sumText %>\\n            </span>\\n            <span class=\"sum\">\\n                <span class=\"sum-value\"><%= data.donation.sumIncludingDonation %></span>\\n                <span class=\"sum-currency\"><%= data.donation.currency %></span>\\n            </span>\\n        </div>\\n    </div>\\n</section>\\n';});\n",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Model of the module itself\n * Holds data like translations for general texts and status of the module itself (activated / deactivated)\n *\n * @extends Backbone.Model\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('model/donationModule',[\n    'jquery',\n    'underscore',\n    'backbone'\n], function ($, _, Backbone) {\n    'use strict';\n    return Backbone.Model.extend({\n        initialize: function () {\n            var me = this;\n\n            this.bind('change:active', function (model, value) {\n                sessionStorage.setItem('lfnds-module-active', value);\n            });\n\n            me.checkLocalStorage();\n        },\n\n        defaults: {\n            'activateText': 'Ja, ich möchte mit meinem Einkauf aufrunden und spenden!',\n            'sumText': 'Runde Summe',\n\n            'orientation'   : 'horizontal',\n            'color'         : 'elefunds',\n            'dimensions'    : 'large',\n            'tooltipStyle'  : 'default'\n        },\n\n        checkLocalStorage: function () {\n            var me = this;\n\n            if (sessionStorage.getItem('lfnds-module-active')) {\n                me.activeDefault = sessionStorage.getItem('lfnds-module-active') === 'true';\n                me.set({'active': me.activeDefault});\n            }\n        }\n    });\n});",
    "\ndefine('manager/getElefundsData',[\n    'jquery',\n    'underscore',\n    'backbone'\n], function ($, _, Backbone) {\n    'use strict';\n\n    if (lfnds !== undefined) {\n        return lfnds;\n    } else {\n        return {};\n    }\n});",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Model of a receiver\n *\n * @extends Backbone.Model\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('model/receiver',[\n    'jquery',\n    'underscore',\n    'backbone'\n], function ($, _, Backbone) {\n    'use strict';\n    return Backbone.Model.extend({\n        /**\n         * The default-values for the attributes of the model\n         * @type {object}\n         */\n        defaults: {\n            'id': 0,\n            'name': 'Test-Receiver',\n            'nameURLFriendly': 'test-receiver',\n            'imageURL': 'http://www.google.com/images.jpg',\n            'active': false,\n            'description': 'example',\n            'clientID': 1001\n        },\n\n        initialize: function () {\n            var me = this;\n\n            if (sessionStorage.getItem('lfnds-receiver-active' + me.get('id'))) {\n                if (sessionStorage.getItem(('lfnds-receiver-active' + me.get('id'))) === 'true') {\n                    me.set({'active' : true});\n                } else {\n                    me.set({'active' : false});\n                }\n            }\n\n            this.bind('change:active', function (model, value) {\n                sessionStorage.setItem('lfnds-receiver-active' + me.get('id'), value);\n            });\n        }\n    });\n});",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Collection of the receiver\n *\n * @extends Backbone.Collection\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('collection/receiver',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'model/receiver'\n], function ($, _, Backbone, receiverModel) {\n    'use strict';\n    return Backbone.Collection.extend({\n        model: receiverModel,\n        url: 'http://elefunds-api-staging.herokuapp.com/receivers/for/test',\n\n        initialize: function (models, options) {\n            this.url = 'http://elefunds-api-staging.herokuapp.com/receivers/for/' + options.clientID;\n            console.log(this.url);\n        }\n    });\n});",
    "\n/**\n * @license RequireJS i18n 2.0.3 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/i18n for details\n */\n/*jslint regexp: true */\n/*global require: false, navigator: false, define: false */\n\n/**\n * This plugin handles i18n! prefixed modules. It does the following:\n *\n * 1) A regular module can have a dependency on an i18n bundle, but the regular\n * module does not want to specify what locale to load. So it just specifies\n * the top-level bundle, like \"i18n!nls/colors\".\n *\n * This plugin will load the i18n bundle at nls/colors, see that it is a root/master\n * bundle since it does not have a locale in its name. It will then try to find\n * the best match locale available in that master bundle, then request all the\n * locale pieces for that best match locale. For instance, if the locale is \"en-us\",\n * then the plugin will ask for the \"en-us\", \"en\" and \"root\" bundles to be loaded\n * (but only if they are specified on the master bundle).\n *\n * Once all the bundles for the locale pieces load, then it mixes in all those\n * locale pieces into each other, then finally sets the context.defined value\n * for the nls/colors bundle to be that mixed in locale.\n *\n * 2) A regular module specifies a specific locale to load. For instance,\n * i18n!nls/fr-fr/colors. In this case, the plugin needs to load the master bundle\n * first, at nls/colors, then figure out what the best match locale is for fr-fr,\n * since maybe only fr or just root is defined for that locale. Once that best\n * fit is found, all of its locale pieces need to have their bundles loaded.\n *\n * Once all the bundles for the locale pieces load, then it mixes in all those\n * locale pieces into each other, then finally sets the context.defined value\n * for the nls/fr-fr/colors bundle to be that mixed in locale.\n */\n(function () {\n    'use strict';\n\n    //regexp for reconstructing the master bundle name from parts of the regexp match\n    //nlsRegExp.exec(\"foo/bar/baz/nls/en-ca/foo\") gives:\n    //[\"foo/bar/baz/nls/en-ca/foo\", \"foo/bar/baz/nls/\", \"/\", \"/\", \"en-ca\", \"foo\"]\n    //nlsRegExp.exec(\"foo/bar/baz/nls/foo\") gives:\n    //[\"foo/bar/baz/nls/foo\", \"foo/bar/baz/nls/\", \"/\", \"/\", \"foo\", \"\"]\n    //so, if match[5] is blank, it means this is the top bundle definition.\n    var nlsRegExp = /(^.*(^|\\/)nls(\\/|$))([^\\/]*)\\/?([^\\/]*)/;\n\n    //Helper function to avoid repeating code. Lots of arguments in the\n    //desire to stay functional and support RequireJS contexts without having\n    //to know about the RequireJS contexts.\n    function addPart(locale, master, needed, toLoad, prefix, suffix) {\n        if (master[locale]) {\n            needed.push(locale);\n            if (master[locale] === true || master[locale] === 1) {\n                toLoad.push(prefix + locale + '/' + suffix);\n            }\n        }\n    }\n\n    function addIfExists(req, locale, toLoad, prefix, suffix) {\n        var fullName = prefix + locale + '/' + suffix;\n        if (require._fileExists(req.toUrl(fullName + '.js'))) {\n            toLoad.push(fullName);\n        }\n    }\n\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     * This is not robust in IE for transferring methods that match\n     * Object.prototype names, but the uses of mixin here seem unlikely to\n     * trigger a problem related to that.\n     */\n    function mixin(target, source, force) {\n        var prop;\n        for (prop in source) {\n            if (source.hasOwnProperty(prop) && (!target.hasOwnProperty(prop) || force)) {\n                target[prop] = source[prop];\n            } else if (typeof source[prop] === 'object') {\n                if (!target[prop]) {\n                    target[prop] = {};\n                }\n                mixin(target[prop], source[prop], force);\n            }\n        }\n    }\n\n    define('i18n',['module'], function (module) {\n        var masterConfig = module.config ? module.config() : {};\n\n        return {\n            version: '2.0.3',\n            /**\n             * Called when a dependency needs to be loaded.\n             */\n            load: function (name, req, onLoad, config) {\n                config = config || {};\n\n                if (config.locale) {\n                    masterConfig.locale = config.locale;\n                }\n\n                var masterName,\n                    match = nlsRegExp.exec(name),\n                    prefix = match[1],\n                    locale = match[4],\n                    suffix = match[5],\n                    parts = locale.split(\"-\"),\n                    toLoad = [],\n                    value = {},\n                    i, part, current = \"\";\n\n                //If match[5] is blank, it means this is the top bundle definition,\n                //so it does not have to be handled. Locale-specific requests\n                //will have a match[4] value but no match[5]\n                if (match[5]) {\n                    //locale-specific bundle\n                    prefix = match[1];\n                    masterName = prefix + suffix;\n                } else {\n                    //Top-level bundle.\n                    masterName = name;\n                    suffix = match[4];\n                    locale = masterConfig.locale;\n                    if (!locale) {\n                        locale = masterConfig.locale =\n                            typeof navigator === \"undefined\" ? \"root\" :\n                                (navigator.language ||\n                                    navigator.userLanguage || \"root\").toLowerCase();\n                    }\n                    parts = locale.split(\"-\");\n                }\n\n                if (config.isBuild) {\n                    //Check for existence of all locale possible files and\n                    //require them if exist.\n                    toLoad.push(masterName);\n                    addIfExists(req, \"root\", toLoad, prefix, suffix);\n                    for (i = 0; i < parts.length; i++) {\n                        part = parts[i];\n                        current += (current ? \"-\" : \"\") + part;\n                        addIfExists(req, current, toLoad, prefix, suffix);\n                    }\n\n                    req(toLoad, function () {\n                        onLoad();\n                    });\n                } else {\n                    //First, fetch the master bundle, it knows what locales are available.\n                    req([masterName], function (master) {\n                        //Figure out the best fit\n                        var needed = [],\n                            part;\n\n                        //Always allow for root, then do the rest of the locale parts.\n                        addPart(\"root\", master, needed, toLoad, prefix, suffix);\n                        for (i = 0; i < parts.length; i++) {\n                            part = parts[i];\n                            current += (current ? \"-\" : \"\") + part;\n                            addPart(current, master, needed, toLoad, prefix, suffix);\n                        }\n\n                        //Load all the parts missing.\n                        req(toLoad, function () {\n                            var i, partBundle, part;\n                            for (i = needed.length - 1; i > -1 && needed[i]; i--) {\n                                part = needed[i];\n                                partBundle = master[part];\n                                if (partBundle === true || partBundle === 1) {\n                                    partBundle = req(prefix + part + '/' + suffix);\n                                }\n                                mixin(value, partBundle);\n                            }\n\n                            //All done, notify the loader.\n                            onLoad(value);\n                        });\n                    });\n                }\n            }\n        };\n    });\n}());\n",
    "\ndefine('nls/donationModule',{\n    'root'  : {\n        'tooltipTitle'          :   'elefunds',\n        'tooltipDescription'    :   'This is the description.'\n    },\n    'de'    : true\n});",
    "",
    "\n/*global define, document*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Main-view of the donation-module\n *\n * @extends Backbone.View\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('view/donationModule',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'text!template/donationModule.html',\n    'model/donationModule',\n    'manager/getElefundsData',\n    'collection/receiver',\n    'i18n!nls/donationModule'\n], function ($, _, Backbone, donationModuleTemplate, DonationModuleModel, elefundsData, ReceiverCollection, DonationModuleTranslations) {\n    'use strict';\n    return Backbone.View.extend({\n        el: $('#elefunds'),\n\n        /**\n         * Initializes the models\n         * Calls Model-Events\n         * @this {Backbone.View}\n         */\n        initialize: function () {\n            this.donationModuleModel = new DonationModuleModel();\n            this.receiverCollection = this.options.receiverCollection;\n\n            this.addModelEvents();\n        },\n\n        /**\n         * DOM-events\n         */\n        events: {\n            'click .region-activate-module'                     : 'onModuleActivateButtonClick',\n            'keydown .region-input input.donation-input-small'  : 'onArrowUseInSmallInput',\n            'keydown .region-input input.donation-input-full'   : 'onArrowUseInLargeInput',\n            'keypress .region-input input.donation-input-full'  : 'onValidateKeyInput',\n            'keypress .region-input input.donation-input-small' : 'onValidateKeyInput',\n            'click .button-increase'                            : 'onButtonIncreaseClick',\n            'click .button-decrease'                            : 'onButtonDecreaseClick',\n            'click .section-middle li'                          : 'onReceiverButtonClick',\n            'click .donation-receipt'                           : 'onDonationReceiptClick',\n            'change .region-input input.donation-input-small'   : 'onSmallInputChanges',\n            'change .region-input input.donation-input-full'    : 'onLargeInputChanges'\n        },\n\n        /**\n         * Compiles the template\n         * Renders the template\n         * Appends the compiled template to the DOM\n         * @this {Backbone.View}\n         * @return {Backbone.View}\n         */\n        render: function () {\n            var me = this,\n                modelJSON = me.model.toJSON();\n            _.templateSettings.variable = 'data';\n\n            /**\n             * Check if receivers are available in JSON, otherwise fetch them from the elefunds API\n             */\n            if (elefundsData.receivers !== undefined) {\n                _.each(elefundsData.receivers.de, function (receiver) {\n                    /** @namespace receiver.vertical.horizontal */\n                    /** @namespace receiver.vertical.horizontal.large */\n                    /** @namespace receiver.vertical */\n                    me.receiverCollection.add({\n                        name: receiver.name,\n                        nameURLFriendly: receiver.name.toLowerCase().replace(/ +/g,'_').replace(/[^a-z0-9-_]/g,'').trim(),\n                        description: receiver.description,\n                        imageURL: receiver.vertical.horizontal.large,\n                        active: false\n                    });\n                });\n            } else {\n                me.template = _.template(donationModuleTemplate, {donation: modelJSON, donationModule: me.donationModuleModel.toJSON(), receivers: me.receiverCollection.toJSON(), translations: DonationModuleTranslations});\n                me.template = $(me.template);\n\n                me.$el.html(me.template, []);\n\n                me.receiverCollection.fetch({dataType: 'jsonp', success: function (model, response) {\n                    me.receiverCollection.reset();\n                    _.each(response.receivers.de, function (item) {\n                        /** @namespace item.images.horizontal.medium */\n                        me.receiverCollection.add({\n                            'id': item.id,\n                            'imageURL': item.images.horizontal.medium,\n                            'description': item.description,\n                            'name': item.name\n                        });\n                    });\n\n                    me.template = _.template(donationModuleTemplate, {donation: modelJSON, donationModule: me.donationModuleModel.toJSON(), receivers: me.receiverCollection.toJSON(), translations: DonationModuleTranslations});\n                    me.template = $(me.template);\n                    me.$el.html(me.template, []);\n                }});\n            }\n\n\n            return this;\n        },\n\n        /**\n         * Adds events\n         * Listening to changes in model and DOM\n         * @this {Backbone.View}\n         */\n        addModelEvents: function () {\n            var me = this;\n\n            /**\n             * React on model-changes\n             * Important: We use event-driven-development\n             * It is extremely important to differ between model-events and dom-events,\n             * to guarantee consistency while extending our application\n             *\n             * In general: When reacting on DOM-events which change the model,\n             * it is a good advice to stop writing code after changing the model and implement the\n             * rest of the logic in a model-change event\n             * (Because mostly, when a particular change in the model happens, the rest of the logic should happen)\n             */\n            this.model.on('change:sumIncludingDonation', function (model, value) {\n                me.onChangeSumIncludingDonation(model, value);\n            });\n            this.receiverCollection.on('change:active', function (model, isActive) {\n                me.onChangeActiveReceiver(model, isActive);\n            });\n            this.donationModuleModel.on('change:active', function (model, isActive) {\n                me.onChangeActiveModuleStatus(model, isActive);\n            });\n            this.model.on('change:donationReceipt', function (model, isActive) {\n                me.onChangeDonationReceiptStatus(model, isActive);\n            });\n        },\n\n        /**\n         * Set donationModule-model active attribute to true / false when activate button is clicked\n         * @this {Backbone.View}\n         * @param event\n         */\n        onModuleActivateButtonClick: function (event) {\n            /**\n             * Prevents bubbling of label-clicks (would be registered as two clicks)\n             */\n            event.stopPropagation();\n            event.preventDefault();\n\n            if (this.donationModuleModel.get('active') === true) {\n                this.donationModuleModel.set({'active': false});\n            } else {\n                this.donationModuleModel.set({'active': true});\n\n//                if (this.receiverCollection.)\n                this.receiverCollection.each(function (item) {\n                    item.set({active: true});\n                });\n            }\n        },\n\n        /**\n         * Jump in Large Input when cursor is at the very left and arrow-left is pressed\n         * @this {Backbone.View}\n         * @param event\n         */\n        onArrowUseInSmallInput: function (event) {\n            var $smallInput = $(event.target),\n                lastCursorPosition = this.getCursorPositionInInput($smallInput),\n                charCode = (event.which) || event.keyCode;\n\n            if (parseInt(charCode, 10) === 37 && lastCursorPosition === 0\n                || parseInt(charCode, 10) === 8 && lastCursorPosition === 0) {\n                $('.region-input input.donation-input-full').focus();\n            }\n        },\n\n        /**\n         * Jump in small Input when cursor is at the very right and arrow-right is pressed\n         * @this {Backbone.View}\n         * @param event\n         */\n        onArrowUseInLargeInput: function (event) {\n            var $fullInput = $(event.target),\n                lastCursorPosition = this.getCursorPositionInInput($fullInput),\n                charCode = (event.which) || event.keyCode;\n\n            if (parseInt(charCode, 10) === 39 && lastCursorPosition === $fullInput.val().length) {\n                $('.region-input input.donation-input-small').focus();\n            }\n        },\n\n        /**\n         * Prohibit everything but numbers in donation-input\n         * @this {Backbone.View}\n         * @param event\n         * @return {boolean}\n         */\n        onValidateKeyInput: function (event) {\n            var charCode = (event.which) || event.keyCode;\n            if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n\n                /* If \",\" or \".\" are pressed, switch to small input (for cent-values) */\n                if (parseInt(charCode, 10) === 44 || parseInt(charCode, 10) === 46) {\n                    $('.region-input input.donation-input-small').focus().select();\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Raise the donationAmountAbsolute for one when button is clicked\n         * @this {Backbone.View}\n         */\n        onButtonIncreaseClick: function () {\n            var newDonationAmountAbsolute = parseInt(this.model.get('donationAmountAbsolute'), 10) + 1;\n            this.model.set({donationAmountAbsolute: newDonationAmountAbsolute}, {validate: true});\n\n            if (this.donationModuleModel.get('active') === false) {\n                this.donationModuleModel.set({'active': true});\n\n                this.receiverCollection.each(function (item) {\n                    item.set({active: true});\n                });\n            }\n        },\n\n        /**\n         * Decrease the donationAmountAbsolute for one when button is clicked\n         * @this {Backbone.View}\n         */\n        onButtonDecreaseClick: function () {\n            var newDonationAmountAbsolute = parseInt(this.model.get('donationAmountAbsolute'), 10) - 1;\n            this.model.set({donationAmountAbsolute: newDonationAmountAbsolute}, {validate: true});\n\n            if (this.donationModuleModel.get('active') === false) {\n                this.donationModuleModel.set({'active': true});\n\n                this.receiverCollection.each(function (item) {\n                    item.set({active: true});\n                });\n            }\n        },\n\n        /**\n         * Change model value for donationAmountAfterComma when input changed\n         * @this {Backbone.View}\n         */\n        onSmallInputChanges: function () {\n            if (this.$el.find('.region-input input.donation-input-small').val() === '') {\n                this.$el.find('.region-input input.donation-input-small').val('00');\n            }\n            this.model.set({donationAmountAfterComma : this.$el.find('.region-input input.donation-input-small').val()});\n        },\n\n        /**\n         * Change model value for donationAmountAbsolute when input changed\n         */\n        onLargeInputChanges: function () {\n            if (this.$el.find('.region-input input.donation-input-full').val() === '') {\n                this.$el.find('.region-input input.donation-input-full').val('0');\n            }\n            this.model.set({donationAmountAbsolute : this.$el.find('.region-input input.donation-input-full').val()});\n        },\n\n        /**\n         * Set receiver-model to active when a receiver is clicked\n         * @this {Backbone.View}\n         * @param event\n         */\n        onReceiverButtonClick: function (event) {\n            /**\n             * Prevents bubbling of label-clicks (would be registered as two clicks)\n             */\n            event.stopPropagation();\n            event.preventDefault();\n\n            var liElement;\n\n            if (!$(event.target).is('li')) {\n                liElement = $(event.target).parents('li');\n            } else {\n                liElement = $(event.target);\n            }\n\n            if (this.receiverCollection.findWhere({id: liElement.data('receiver')}).get('active') === true) {\n                this.receiverCollection.findWhere({id: liElement.data('receiver')}).set({'active': false});\n            } else {\n                this.receiverCollection.findWhere({id: liElement.data('receiver')}).set({'active': true});\n            }\n        },\n\n        /**\n         * Set donation-receipt to true when the area for it is clicked\n         * @this {Backbone.View}\n         */\n        onDonationReceiptClick: function () {\n            if (this.model.get('donationReceipt') === true) {\n                this.model.set({'donationReceipt': false});\n            } else {\n                this.model.set({'donationReceipt': true});\n            }\n        },\n\n        /**\n         * Helper-function to receive current cursor-position in an input-field\n         * @this {Backbone.View}\n         * @param inputTest\n         * @returns {*}\n         */\n        getCursorPositionInInput: function (inputTest) {\n            var input = inputTest.get(0),\n                sel,\n                selLen;\n\n            if (input.selectionStart !== undefined) {\n                return input.selectionStart;\n            }\n            if (document.selection) {\n                input.focus();\n                sel = document.selection.createRange();\n                selLen = document.selection.createRange().text.length;\n                sel.moveStart('character', -input.value.length);\n                return sel.text.length - selLen;\n            }\n            return false;\n        },\n\n        /**\n         * Change the sum-value always when the sum changes in the model\n         * @this {Backbone.View}\n         * @param model\n         * @param value\n         */\n        onChangeSumIncludingDonation: function (model, value) {\n            this.$el.find('.sum-value').html(value);\n            this.$el.find('.donation-input-full').val(this.model.get('donationAmountAbsolute'));\n            this.$el.find('.donation-input-small').val(this.model.get('donationAmountAfterComma'));\n        },\n\n        /**\n         * @this {Backbone.View}\n         * @param model\n         * @param isActive\n         */\n        onChangeActiveReceiver: function (model, isActive) {\n            if (isActive) {\n                this.$el.find('.section-middle li[data-receiver=\"' + model.get('id') + '\"]').addClass('active');\n                /* As soon as at least one receiver is selected, the module automatically activates  */\n                this.donationModuleModel.set({'active': true});\n            } else {\n                var areAllReceiversDeactivated = true;\n\n                this.receiverCollection.each(function (item) {\n                    if (item.get('active') === true) {\n                        areAllReceiversDeactivated = false;\n                    }\n                });\n                if (areAllReceiversDeactivated) {\n                    this.donationModuleModel.set({'active': false});\n                }\n                this.$el.find('.section-middle li[data-receiver=\"' + model.get('id') + '\"]').removeClass('active');\n            }\n        },\n\n        /**\n         * @this {Backbone.View}\n         * @param model\n         * @param isActive\n         */\n        onChangeActiveModuleStatus: function (model, isActive) {\n            if (isActive) {\n                this.$el.find('#elefunds-module').addClass('active');\n            } else {\n                this.$el.find('#elefunds-module').removeClass('active');\n            }\n        },\n\n        /**\n         * @this {Backbone.View}\n         * @param model\n         * @param isActive\n         */\n        onChangeDonationReceiptStatus: function (model, isActive) {\n            if (isActive) {\n                this.$el.find('.donation-receipt').addClass('active');\n            } else {\n                this.$el.find('.donation-receipt').removeClass('active');\n            }\n        }\n    });\n});",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Model of a donation\n *\n * @extends Backbone.Model\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('model/donation',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'manager/getElefundsData'\n], function ($, _, Backbone, elefundsDataModel) {\n    'use strict';\n    return Backbone.Model.extend({\n        /**\n         * Initialize the model, add event-listeners for change events\n         * @this {Backbone.Model}\n         */\n        initialize: function () {\n            /**\n             * @type {*}\n             */\n            var me = this;\n\n            if (!this.checkLocalStorage()) {\n                /**\n                 * Set initial values from given JSON-String\n                 */\n                this.set({'sumExcludingDonation': (elefundsDataModel.total) / 100});\n                this.set({'currency': elefundsDataModel.currency});\n                this.set({'currencyDelimiter': elefundsDataModel.currencyDelimiter});\n\n                this.calculateSuggestedDonation();\n            }\n\n\n            /**\n             * Events when donation has changed\n             */\n            this.bind('change:donationAmount', function () {\n                me.normalizeDonationAmount();\n            });\n            this.bind('change:donationAmountAbsolute', function () {\n                me.normalizeDonationAmount();\n            });\n            this.bind('change:donationAmountAfterComma', function () {\n                me.normalizeDonationAmount();\n            });\n            this.bind('change:currencyDelimiter', function (value) {\n                me.changeCurrencyDelimiter(value);\n            });\n\n            /**\n             * Sometimes the sum excluding the donation can change\n             * Make sure that the sumIncludingDonation changes after that.\n             * fe. when changing the supply-type via ajax (OneStepCheckout)\n             */\n            this.bind('change:sumExcludingDonation', function () {\n                me.changeSumIncludingDonation();\n                /**\n                 * Suggested Donation-Amount has to change\n                 */\n                me.calculateSuggestedDonation();\n            });\n        },\n\n        /**\n         * The default-values for the attributes of the model\n         * @type {object}\n         */\n        defaults: {\n            'suggestedAmount'           :   '5.00',\n            /**\n             * We separate between 'before comma' and 'after comma'\n             * to make calculations and validation easier\n             */\n            'donationAmountAbsolute'    :   '5',\n            'donationAmountAfterComma'  :   '00',\n\n            'sumExcludingDonation'      :   98,\n            'sumIncludingDonation'      :   105,\n\n            'maxDonation'               :   '9999',\n\n            'currency'                  :   '€',\n            'currencyDelimiter'         :   ',',\n\n            'donationReceipt'           :   false,\n            'donationReceiptText'       :   'Ja, ich würde gerne eine Spendenquitting erhalten.',\n\n            /**\n             * Never change Cent-Values directly,\n             * Cent-values are automatically changed\n             */\n            'suggestedAmountCent'       :   '500',\n            'donationAmountCent'        :   '500',\n            'sumExcludingDonationCent'  :   '9800',\n            'sumIncludingDonationCent'  :   '10500'\n        },\n\n        /**\n         * Validates attributes on set-method-call\n         * set-method-call needs parameter {validate: true}\n         * @param attributes attributes to be validated\n         * @return {string} Returns false if validation succeeds\n         */\n        validate: function (attributes) {\n            if (_.has(attributes, 'donationAmountAbsolute') && attributes.donationAmountAbsolute < 0) {\n                return 'Donation-amount is too small.';\n            }\n            if (_.has(attributes, 'donationAmountAbsolute') && attributes.donationAmountAbsolute > attributes.maxDonation) {\n                return 'Donation-amount is too high.';\n            }\n            return '';\n        },\n\n        /**\n         * Normalizes donation-amount to this format: 10.00 (2 decimals)\n         * @this {Backbone.Model}\n         * @return {object} Returns instance\n         */\n        normalizeDonationAmount: function () {\n            var donationAmountAbsolute = this.get('donationAmountAbsolute'),\n                donationAmountAfterComma = this.get('donationAmountAfterComma'),\n                sum = donationAmountAbsolute + this.get('currencyDelimiter') + donationAmountAfterComma;\n\n            this.set({'donationAmount': sum});\n\n            this.set({'donationAmountCent': this.convertToCent(sum)});\n\n            sessionStorage.setItem('lfnds-donation-donationAmountAbsolute', donationAmountAbsolute);\n            sessionStorage.setItem('lfnds-donation-donationAmountAfterComma', donationAmountAfterComma);\n\n            this.changeSumIncludingDonation();\n\n            return this;\n        },\n\n        /**\n         * Changes the sum after donation-amount changed\n         * @this {Backbone.Model}\n         * @return {object} Returns instance\n         */\n        changeSumIncludingDonation: function () {\n                /**\n                 * @type {number}\n                 */\n            var sumExcludingDonation = this.get('sumExcludingDonation'),\n                /**\n                 * @type {number}\n                 */\n                donationAmount = this.get('donationAmount'),\n                /**\n                 * @type {number}\n                 */\n                sumIncludingDonation;\n\n            this.set({'sumExcludingDonationCent': this.convertToCent(sumExcludingDonation)});\n\n            sumExcludingDonation = parseFloat(sumExcludingDonation);\n            donationAmount = parseFloat(donationAmount);\n\n            sumIncludingDonation = sumExcludingDonation + donationAmount;\n            this.set({'sumIncludingDonation' : sumIncludingDonation.toFixed(2)});\n            this.set({'sumIncludingDonationCent' : this.convertToCent(sumIncludingDonation.toFixed(2))});\n\n            sessionStorage.setItem('lfnds-donation-sumExcludingDonation', sumExcludingDonation);\n            sessionStorage.setItem('lfnds-donation-sumIncludingDonation', sumIncludingDonation.toFixed(2));\n            sessionStorage.setItem('lfnds-donation-sumIncludingDonationCent', this.convertToCent(sumIncludingDonation.toFixed(2)));\n\n            return this;\n        },\n\n        /**\n         * Changes the currency-delimiter in donation-value\n         * @this {Backbone.Model}\n         * @return {object} Returns instance\n         */\n        changeCurrencyDelimiter: function (value) {\n            var donationAmount = this.get('donationAmount'),\n                oldDelimiter = value.previous('currencyDelimiter'),\n                newDelimiter = this.get('currencyDelimiter'),\n                newDonationAmount = donationAmount.toString().replace(oldDelimiter, newDelimiter);\n            this.set({donationAmount: newDonationAmount});\n\n            return this;\n        },\n\n        /**\n         * Calculate the initial suggested amount and set correct values\n         * @this {Backbone.Model}\n         * @returns {number}\n         */\n        calculateSuggestedDonation: function () {\n            var suggestedDonation,\n                sumExcludingDonation = this.get('sumExcludingDonation') * 100,\n                sumIncludingDonation,\n                suggestedDonationSplitted,\n                /**\n                 * Tiers, when donation-percentage change\n                 * @type {Array}\n                 */\n                tiers = [16, 100, 1000, 999999],\n                /**\n                 * The different percentages for roundup-values,\n                 * in relationship to the tiers\n                 * @type {Array}\n                 */\n                percent = [0.10, 0.06, 0.04, 0.03],\n                /**\n                 * percentage alone don't always give us a round value\n                 * helper-values for creating a round sum\n                 */\n                roundup = [2, 5, 10, 20],\n                /**\n                 * default tier\n                 * @type {number}\n                 */\n                chosenTierIndex = tiers.length - 1;\n\n            /**\n             * Determine the correct tier for the shopping-sum\n             */\n            _.each(tiers, function (tier, index) {\n                if (sumExcludingDonation > tier) {\n                    chosenTierIndex = index + 1;\n                }\n            });\n\n            /**\n             * Calculate suggested donation just with chosen percentage,\n             * without checking for specific roundup\n             */\n            suggestedDonation = sumExcludingDonation * percent[chosenTierIndex];\n\n            /**\n             * getting the new sum, including the donation, after rounding up\n             */\n            sumIncludingDonation = Math.round((sumExcludingDonation + suggestedDonation) / roundup[chosenTierIndex]) * roundup[chosenTierIndex];\n\n            /**\n             * suggested donation by negate the sum with donation of the sum without\n             */\n            suggestedDonation = sumIncludingDonation - sumExcludingDonation;\n\n            /**\n             * Correct the algorithm to guarantee that donation suggestions are not to high\n             */\n            if (suggestedDonation > roundup[chosenTierIndex] && chosenTierIndex < (tiers.length - 2)) {\n                suggestedDonation -= roundup[chosenTierIndex];\n            }\n            suggestedDonation = (suggestedDonation / 100).toFixed(2);\n            /**\n             * Set initial values for suggested donation and the donation-amount (initial)\n             */\n            this.set({'suggestedAmount': suggestedDonation});\n            this.set({'suggestedAmountCent': this.convertToCent(suggestedDonation)});\n\n            suggestedDonationSplitted = suggestedDonation.toString().split('.');\n            this.set({'donationAmountAbsolute': suggestedDonationSplitted[0]});\n            this.set({'donationAmountAfterComma': suggestedDonationSplitted[1]});\n\n            /**\n             * Normalize donation amount\n             * has to be called by hand as backbone-models don't register their own change-events (weird)\n             */\n            this.normalizeDonationAmount();\n\n            return suggestedDonation;\n        },\n\n        /**\n         *\n         * @param amount\n         */\n        convertToCent: function (amount) {\n            var amountInCent;\n\n            console.log(amount);\n\n            amountInCent = amount * 100;\n\n            return amountInCent;\n        },\n\n        checkLocalStorage: function () {\n            if (sessionStorage.getItem('lfnds-donation-donationAmountAbsolute')) {\n                this.set({'sumExcludingDonation': sessionStorage.getItem('lfnds-donation-sumExcludingDonation')});\n                this.set({'sumIncludingDonation': sessionStorage.getItem('lfnds-donation-sumIncludingDonation')});\n                this.set({'sumIncludingDonationCent': sessionStorage.getItem('lfnds-donation-sumIncludingDonationCent')});\n\n                this.set({'donationAmountAbsolute': sessionStorage.getItem('lfnds-donation-donationAmountAbsolute')});\n                this.set({'donationAmountAfterComma': sessionStorage.getItem('lfnds-donation-donationAmountAfterComma')});\n\n                this.normalizeDonationAmount();\n\n                return true;\n            }\n\n            return false;\n        }\n    });\n});",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Model of the share module\n *\n * @extends Backbone.Model\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('model/shareModule',[\n    'jquery',\n    'underscore',\n    'backbone'\n], function ($, _, Backbone) {\n    'use strict';\n    return Backbone.Model.extend({\n        defaults: {\n            'link'      :   null,\n            'imgSrc'    :   null,\n            'baseURL'   :   'http://share.elefunds.de/on',\n            'service'   :   'facebook',\n            'clientID'  :   '1001',\n            'foreignID' :   '2000',\n            'receivers' :   ['Plan', 'WWF']\n        },\n\n        initialize: function () {\n            this.createLink();\n        },\n\n        /**\n         * @returns {string}\n         */\n        createLink: function () {\n            var link,\n                baseURL = this.get('baseURL'),\n                service = this.get('service'),\n                clientID = this.get('clientID'),\n                //TODO: receivers\n                foreignID = this.get('foreignID');\n\n            link = baseURL + '/' + service + '/' + clientID + '/' + foreignID;\n\n            this.set({'link' : link});\n\n            return link;\n        }\n    });\n});",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Collection of share-providers\n *\n * @extends Backbone.Collection\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('collection/shareModule',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'model/shareModule'\n], function ($, _, Backbone, shareModuleModel) {\n    'use strict';\n    return Backbone.Collection.extend({\n        model: shareModuleModel\n    });\n});",
    "\ndefine('text!template/donationForm.html',[],function () { return '<!--\\n This Form provides all model-values in a form-element to be able to get them with an PHP-Post\\n -->\\n\\n<form id=\"elefundsDonation\">\\n    <input id=\"suggestedAmount\" name=\"suggestedAmount\" value=\"<%= data.donationModel.suggestedAmount %>\" type=\"text\">\\n    <input id=\"donationAmount\" name=\"donationAmount\" value=\"<%= data.donationModel.donationAmount %>\" type=\"text\">\\n    <input id=\"donationAmountAbsolute\" name=\"donationAmountAbsolute\" value=\"<%= data.donationModel.donationAmountAbsolute %>\" type=\"text\">\\n\\n    <input id=\"donationAmountAfterComma\" name=\"donationAmountAfterComma\" value=\"<%= data.donationModel.donationAmountAfterComma %>\" type=\"text\">\\n    <input id=\"sumExcludingDonation\" name=\"sumExcludingDonation\" value=\"<%= data.donationModel.sumExcludingDonation %>\" type=\"text\">\\n    <input id=\"sumIncludingDonation\" name=\"sumIncludingDonation\" value=\"<%= data.donationModel.sumIncludingDonation %>\" type=\"text\">\\n\\n    <input id=\"maxDonation\" name=\"maxDonation\" value=\"<%= data.donationModel.maxDonation %>\" type=\"text\">\\n    <input id=\"currency\" name=\"currency\" value=\"<%= data.donationModel.currency %>\" type=\"text\">\\n\\n    <input id=\"sumExcludingDonationCent\" name=\"sumExcludingDonationCent\" value=\"<%= data.donationModel.sumExcludingDonationCent %>\" type=\"text\">\\n    <input id=\"sumIncludingDonationCent\" name=\"sumIncludingDonationCent\" value=\"<%= data.donationModel.sumIncludingDonationCent %>\" type=\"text\">\\n    <input id=\"suggestedAmountCent\" name=\"suggestedAmountCent\" value=\"<%= data.donationModel.suggestedAmountCent %>\" type=\"text\">\\n    <input id=\"donationAmountCent\" name=\"donationAmountCent\" value=\"<%= data.donationModel.donationAmountCent %>\" type=\"text\">\\n    <%\\n        _.each(data.receiverCollection, function (receiver) {\\n            if (receiver.active === true) { %>\\n                <%= receiver.id %>\\n                <%= receiver.name %>\\n           <%  }\\n        });\\n    %>\\n</form>';});\n",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Form-view\n * Include this view,\n * if you want to get the model as form-values for some reasons\n * f.e. when you want to receive the values via POST\n *\n * @extends Backbone.View\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('view/donationForm',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'text!template/donationForm.html'\n], function ($, _, Backbone, donationFormTemplate) {\n    'use strict';\n    return Backbone.View.extend({\n        el: $('#donation-form'),\n\n        /**\n         * Initializes the model\n         * Gets the template\n         * renders the view\n         */\n        initialize: function () {\n            this.addModelEvents();\n        },\n\n        /**\n         * Adds events\n         * Listening to changes in model\n         */\n        addModelEvents: function () {\n            var me = this;\n            /**\n             * Just re-render form on model/collection-changes\n             */\n            this.model.on('change', function () {\n                me.render();\n            });\n            this.collection.on('change', function () {\n                me.render();\n            });\n            this.collection.on('add', function () {\n                me.render();\n            });\n        },\n\n        /**\n         * Compiles the template\n         * Renders the template\n         * Appends the compiled template to the DOM\n         */\n        render: function () {\n            var me = this,\n                modelJSON = me.model.toJSON(),\n                collectionJSON = me.collection.toJSON();\n\n            _.templateSettings.variable = 'data';\n\n            me.template = _.template(donationFormTemplate, {donationModel: modelJSON, receiverCollection: collectionJSON});\n            me.template = $(me.template);\n\n            this.$el.html('');\n            this.$el.append(this.template, []);\n            return this;\n        }\n    });\n});",
    "\ndefine('text!template/shareModule.html',[],function () { return '<section id=\"elefunds-share-module\">\\n    <h1>\\n        <%= data.labels.heading %>\\n    </h1>\\n    <h2>\\n        <%= data.labels.subHeading %>\\n    </h2>\\n    <ul>\\n        <% _.each(data.shareCollection, function (shareItem) { %>\\n            <li>\\n                <a href=\"<%= shareItem.link %>\" class=\"button\" target=\"_blank\">\\n                    <img width=\"130\" src=\"<%= shareItem.imgSrc %>\">\\n                </a>\\n            </li>\\n        <% }); %>\\n    </ul>\\n    <span class=\"caption\"><%= data.labels.caption %>\\n        <a href=\"http://www.elefunds.de\" target=\"_blank\" rel=\"nofollow\">\\n                <svg id=\"elefundsLogo\" viewBox=\"0 0 407 84\" version=\"1.1\"\\n                xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\"\\n                x=\"0px\" y=\"0px\" width=\"80px\" height=\"15px\">\\n                <g id=\"logoLayer\">\\n                    <path class=\"elephantIcon\" d=\"M 0 82.9063 L 9.9961 83.2443 L 13.6443 77.7535 L 16.214 77.6728 L 24.9819 63.3615 L 35.1597 72.1091 L 38.3468 82.3896 L 46.1944 82.376 L 46.8734 76.5228 L 48.9711 76.245 L 50.3321 49.2482 L 66.3214 38.7624 L 73.5006 26.8895 L 76.1416 0 L 71.0248 0.947 L 62.1748 25.4859 L 50.5266 19.7129 L 26.4054 22.959 L 23.1412 33.4551 L 9.5418 40.7934 L 3.3376 51.6338 L 2.8823 61.4771 L 0 82.9063 Z\" fill=\"#2f2728\"/>\\n                    <g>\\n                        <path class=\"logoText\" d=\"M 98.4757 38.8498 C 110.8919 38.8498 117.696 47.8961 117.696 59.3111 C 117.696 60.5796 117.441 63.2847 117.441 63.2847 L 87.5045 63.2847 C 88.3546 70.895 93.9676 74.8677 100.5167 74.8677 C 107.4908 74.8677 112.6779 70.049 112.6779 70.049 L 117.186 77.4893 C 117.186 77.4893 110.5519 84 99.7507 84 C 85.3775 84 76.4484 73.6846 76.4484 61.4246 C 76.4484 48.1506 85.4625 38.8498 98.4757 38.8498 ZM 106.6398 55.8444 C 106.4698 50.6867 102.8978 47.1356 98.4757 47.1356 C 92.9476 47.1356 89.0346 50.4332 87.8445 55.8444 L 106.6398 55.8444 Z\" fill=\"#2f2728\"/>\\n                        <path class=\"logoText\" d=\"M 124.4962 33.9461 C 124.4962 32.6775 123.8152 32.086 122.6252 32.086 L 119.2231 32.086 L 119.2231 22.9542 L 129.5143 22.9542 C 133.5113 22.9542 135.2973 24.7297 135.2973 28.7039 L 135.2973 72.078 C 135.2973 73.2611 135.9774 73.9381 137.1684 73.9381 L 140.4854 73.9381 L 140.4854 82.985 L 130.2793 82.985 C 126.1972 82.985 124.4962 81.2939 124.4962 77.2357 L 124.4962 33.9461 Z\" fill=\"#2f2728\"/>\\n                        <path class=\"logoText\" d=\"M 165.0609 38.8498 C 177.4771 38.8498 184.2812 47.8961 184.2812 59.3111 C 184.2812 60.5796 184.0262 63.2847 184.0262 63.2847 L 154.0897 63.2847 C 154.9397 70.895 160.5528 74.8677 167.1019 74.8677 C 174.076 74.8677 179.2631 70.049 179.2631 70.049 L 183.7711 77.4893 C 183.7711 77.4893 177.1371 84 166.3359 84 C 151.9627 84 143.0335 73.6846 143.0335 61.4246 C 143.0335 48.1506 152.0477 38.8498 165.0609 38.8498 ZM 173.225 55.8444 C 173.055 50.6867 169.4829 47.1356 165.0609 47.1356 C 159.5328 47.1356 155.6198 50.4332 154.4297 55.8444 L 173.225 55.8444 Z\" fill=\"#2f2728\"/>\\n                        <path class=\"logoText\" d=\"M 192.6124 48.4041 L 187.2543 48.4041 L 187.2543 39.8643 L 192.6124 39.8643 L 192.6124 38.5963 C 192.6124 24.4762 204.2635 22.6161 210.3026 22.6161 C 212.5137 22.6161 213.9597 22.8697 213.9597 22.8697 L 213.9597 32.001 C 213.9597 32.001 213.0237 31.832 211.7477 31.832 C 208.6866 31.832 203.4135 32.593 203.4135 38.8498 L 203.4135 39.8643 L 212.6837 39.8643 L 212.6837 48.4041 L 203.4135 48.4041 L 203.4135 82.985 L 192.6124 82.985 L 192.6124 48.4041 Z\" fill=\"#2f2728\"/>\\n                        <path class=\"logoText\" d=\"M 221.7799 50.8557 C 221.7799 49.5882 221.0989 48.9957 219.9089 48.9957 L 216.5068 48.9957 L 216.5068 39.8643 L 226.798 39.8643 C 230.795 39.8643 232.4961 41.6399 232.4961 45.529 L 232.4961 65.3983 C 232.4961 70.6405 233.8561 74.1916 239.2142 74.1916 C 247.0393 74.1916 251.3763 67.3438 251.3763 59.6491 L 251.3763 39.8643 L 262.1775 39.8643 L 262.1775 72.078 C 262.1775 73.2611 262.8575 73.9381 264.0485 73.9381 L 267.4506 73.9381 L 267.4506 82.985 L 257.4995 82.985 C 253.7574 82.985 251.8014 81.2094 251.8014 78.1663 L 251.8014 76.9813 C 251.8014 75.9672 251.8864 75.0367 251.8864 75.0367 L 251.7164 75.0367 C 249.6753 79.5183 244.2322 84 236.7481 84 C 227.478 84 221.7799 79.3493 221.7799 67.5964 L 221.7799 50.8557 Z\" fill=\"#2f2728\"/>\\n                        <path class=\"logoText\" d=\"M 273.4838 50.8557 C 273.4838 49.5882 272.8038 48.9957 271.6128 48.9957 L 268.2107 48.9957 L 268.2107 39.8643 L 278.1609 39.8643 C 281.9889 39.8643 283.86 41.6399 283.86 44.684 L 283.86 45.9516 C 283.86 46.8821 283.6899 47.8126 283.6899 47.8126 L 283.86 47.8126 C 285.731 44.176 290.4081 38.8498 299.1682 38.8498 C 308.7783 38.8498 314.3064 43.838 314.3064 55.2529 L 314.3064 72.078 C 314.3064 73.2611 314.9874 73.9381 316.1774 73.9381 L 319.5795 73.9381 L 319.5795 82.985 L 309.2893 82.985 C 305.2063 82.985 303.5052 81.2939 303.5052 77.2357 L 303.5052 57.451 C 303.5052 52.2088 302.1452 48.6576 296.7021 48.6576 C 290.9181 48.6576 286.581 52.2933 285.05 57.451 C 284.455 59.2266 284.2 61.1711 284.2 63.2002 L 284.2 82.985 L 273.4838 82.985 L 273.4838 50.8557 Z\" fill=\"#2f2728\"/>\\n                        <path class=\"logoText\" d=\"M 341.4319 38.8498 C 350.873 38.8498 353.9341 44.0925 353.9341 44.0925 L 354.1041 44.0925 C 354.1041 44.0925 354.0191 42.9929 354.0191 41.5554 L 354.0191 33.9461 C 354.0191 32.6775 353.3391 32.086 352.1481 32.086 L 348.746 32.086 L 348.746 22.9542 L 359.0372 22.9542 C 363.0342 22.9542 364.8203 24.7297 364.8203 28.7039 L 364.8203 72.078 C 364.8203 73.2611 365.5013 73.9381 366.6913 73.9381 L 370.0084 73.9381 L 370.0084 82.985 L 360.0582 82.985 C 356.1451 82.985 354.7001 81.1249 354.7001 78.5878 C 354.7001 77.6583 354.7001 76.9813 354.7001 76.9813 L 354.5301 76.9813 C 354.5301 76.9813 350.9581 84 341.0069 84 C 329.2707 84 321.7007 74.7841 321.7007 61.4246 C 321.7007 47.7271 329.9507 38.8498 341.4319 38.8498 ZM 354.2741 61.3401 C 354.2741 54.6604 350.7881 48.0651 343.559 48.0651 C 337.6049 48.0651 332.6728 52.8848 332.6728 61.4246 C 332.6728 69.6264 337.0099 74.9531 343.388 74.9531 C 349.002 74.9531 354.2741 70.895 354.2741 61.3401 Z\" fill=\"#2f2728\"/>\\n                        <path class=\"logoText\" d=\"M 377.4036 69.2884 C 377.4036 69.2884 382.9316 75.6292 390.3307 75.6292 C 393.6478 75.6292 396.1989 74.2761 396.1989 71.402 C 396.1989 65.3138 373.3215 65.3983 373.3215 51.4473 C 373.3215 42.8234 381.1456 38.8498 390.1607 38.8498 C 396.0288 38.8498 405.384 40.7944 405.384 47.8126 L 405.384 52.2933 L 395.8588 52.2933 L 395.8588 50.1797 C 395.8588 48.1506 392.7968 47.1356 390.4157 47.1356 C 386.5887 47.1356 383.9526 48.4886 383.9526 51.0257 C 383.9526 57.789 407 56.436 407 70.8095 C 407 78.9268 399.7709 84 390.3307 84 C 378.4246 84 372.3005 76.3052 372.3005 76.3052 L 377.4036 69.2884 Z\" fill=\"#2f2728\"/>\\n                    </g>\\n                </g>\\n            </svg>\\n        </a>\\n    </span>\\n</section>';});\n",
    "\ndefine('nls/shareModule',{\n    'root'  : {\n        'heading'       :       'Juhu! Vielen Dank für Deine Spende.',\n        'subHeading'    :       'Teilen kann man nicht nur mit seinem Einkauf, sondern auch mit seinen Freunden. Erzähle Deinen Freunden von elefunds!',\n        'caption'       :       'Erfahre mehr über'\n    },\n    'de'    : true\n});",
    "",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\ndefine('view/shareModule',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'text!template/shareModule.html',\n    'i18n!nls/shareModule'\n], function ($, _, Backbone, shareModuleTemplate, shareModuleTranslations) {\n    'use strict';\n    return Backbone.View.extend({\n        el: $('#shareModule'),\n        initialize: function () {\n        },\n        events: {\n            'click .button' : 'onShareButtonClick'\n        },\n        render: function () {\n            var me = this;\n\n            _.templateSettings.variable = 'data';\n            me.template = _.template(shareModuleTemplate, {shareCollection: me.collection.toJSON(), labels: shareModuleTranslations});\n            me.$el.append(me.template, []);\n        },\n        onShareButtonClick: function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n            var url = $(event.target).attr('href'),\n                title = \"Facebook\";\n\n            if (!$(event.target).is('a')) {\n                url = $(event.target).parents('a').attr('href');\n            }\n\n            var shareWindow = window.open(url, title, 'left=100,top=50,width=400,height=400');\n            /** @namespace window.focus */\n            if (window.focus) {\n                shareWindow.focus();\n            }\n            return false;\n        }\n    });\n});",
    "\n/**\n * QUnit v1.11.0 - A JavaScript Unit Testing Framework\n *\n * http://qunitjs.com\n *\n * Copyright 2012 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n(function( window ) {\n\n    var QUnit,\n        assert,\n        config,\n        onErrorFnPrev,\n        testId = 0,\n        fileName = (sourceFromStacktrace( 0 ) || \"\" ).replace(/(:\\d+)+\\)?/, \"\").replace(/.+\\//, \"\"),\n        toString = Object.prototype.toString,\n        hasOwn = Object.prototype.hasOwnProperty,\n    // Keep a local reference to Date (GH-283)\n        Date = window.Date,\n        defined = {\n            setTimeout: typeof window.setTimeout !== \"undefined\",\n            sessionStorage: (function() {\n                var x = \"qunit-test-string\";\n                try {\n                    sessionStorage.setItem( x, x );\n                    sessionStorage.removeItem( x );\n                    return true;\n                } catch( e ) {\n                    return false;\n                }\n            }())\n        },\n        /**\n         * Provides a normalized error string, correcting an issue\n         * with IE 7 (and prior) where Error.prototype.toString is\n         * not properly implemented\n         *\n         * Based on http://es5.github.com/#x15.11.4.4\n         *\n         * @param {String|Error} error\n         * @return {String} error message\n         */\n            errorString = function( error ) {\n            var name, message,\n                errorString = error.toString();\n            if ( errorString.substring( 0, 7 ) === \"[object\" ) {\n                name = error.name ? error.name.toString() : \"Error\";\n                message = error.message ? error.message.toString() : \"\";\n                if ( name && message ) {\n                    return name + \": \" + message;\n                } else if ( name ) {\n                    return name;\n                } else if ( message ) {\n                    return message;\n                } else {\n                    return \"Error\";\n                }\n            } else {\n                return errorString;\n            }\n        },\n        /**\n         * Makes a clone of an object using only Array or Object as base,\n         * and copies over the own enumerable properties.\n         *\n         * @param {Object} obj\n         * @return {Object} New object with only the own properties (recursively).\n         */\n            objectValues = function( obj ) {\n            // Grunt 0.3.x uses an older version of jshint that still has jshint/jshint#392.\n            /*jshint newcap: false */\n            var key, val,\n                vals = QUnit.is( \"array\", obj ) ? [] : {};\n            for ( key in obj ) {\n                if ( hasOwn.call( obj, key ) ) {\n                    val = obj[key];\n                    vals[key] = val === Object(val) ? objectValues(val) : val;\n                }\n            }\n            return vals;\n        };\n\n    function Test( settings ) {\n        extend( this, settings );\n        this.assertions = [];\n        this.testNumber = ++Test.count;\n    }\n\n    Test.count = 0;\n\n    Test.prototype = {\n        init: function() {\n            var a, b, li,\n                tests = id( \"qunit-tests\" );\n\n            if ( tests ) {\n                b = document.createElement( \"strong\" );\n                b.innerHTML = this.nameHtml;\n\n                // `a` initialized at top of scope\n                a = document.createElement( \"a\" );\n                a.innerHTML = \"Rerun\";\n                a.href = QUnit.url({ testNumber: this.testNumber });\n\n                li = document.createElement( \"li\" );\n                li.appendChild( b );\n                li.appendChild( a );\n                li.className = \"running\";\n                li.id = this.id = \"qunit-test-output\" + testId++;\n\n                tests.appendChild( li );\n            }\n        },\n        setup: function() {\n            if ( this.module !== config.previousModule ) {\n                if ( config.previousModule ) {\n                    runLoggingCallbacks( \"moduleDone\", QUnit, {\n                        name: config.previousModule,\n                        failed: config.moduleStats.bad,\n                        passed: config.moduleStats.all - config.moduleStats.bad,\n                        total: config.moduleStats.all\n                    });\n                }\n                config.previousModule = this.module;\n                config.moduleStats = { all: 0, bad: 0 };\n                runLoggingCallbacks( \"moduleStart\", QUnit, {\n                    name: this.module\n                });\n            } else if ( config.autorun ) {\n                runLoggingCallbacks( \"moduleStart\", QUnit, {\n                    name: this.module\n                });\n            }\n\n            config.current = this;\n\n            this.testEnvironment = extend({\n                setup: function() {},\n                teardown: function() {}\n            }, this.moduleTestEnvironment );\n\n            this.started = +new Date();\n            runLoggingCallbacks( \"testStart\", QUnit, {\n                name: this.testName,\n                module: this.module\n            });\n\n            // allow utility functions to access the current test environment\n            // TODO why??\n            QUnit.current_testEnvironment = this.testEnvironment;\n\n            if ( !config.pollution ) {\n                saveGlobal();\n            }\n            if ( config.notrycatch ) {\n                this.testEnvironment.setup.call( this.testEnvironment );\n                return;\n            }\n            try {\n                this.testEnvironment.setup.call( this.testEnvironment );\n            } catch( e ) {\n                QUnit.pushFailure( \"Setup failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n            }\n        },\n        run: function() {\n            config.current = this;\n\n            var running = id( \"qunit-testresult\" );\n\n            if ( running ) {\n                running.innerHTML = \"Running: <br/>\" + this.nameHtml;\n            }\n\n            if ( this.async ) {\n                QUnit.stop();\n            }\n\n            this.callbackStarted = +new Date();\n\n            if ( config.notrycatch ) {\n                this.callback.call( this.testEnvironment, QUnit.assert );\n                this.callbackRuntime = +new Date() - this.callbackStarted;\n                return;\n            }\n\n            try {\n                this.callback.call( this.testEnvironment, QUnit.assert );\n                this.callbackRuntime = +new Date() - this.callbackStarted;\n            } catch( e ) {\n                this.callbackRuntime = +new Date() - this.callbackStarted;\n\n                QUnit.pushFailure( \"Died on test #\" + (this.assertions.length + 1) + \" \" + this.stack + \": \" + ( e.message || e ), extractStacktrace( e, 0 ) );\n                // else next test will carry the responsibility\n                saveGlobal();\n\n                // Restart the tests if they're blocking\n                if ( config.blocking ) {\n                    QUnit.start();\n                }\n            }\n        },\n        teardown: function() {\n            config.current = this;\n            if ( config.notrycatch ) {\n                if ( typeof this.callbackRuntime === \"undefined\" ) {\n                    this.callbackRuntime = +new Date() - this.callbackStarted;\n                }\n                this.testEnvironment.teardown.call( this.testEnvironment );\n                return;\n            } else {\n                try {\n                    this.testEnvironment.teardown.call( this.testEnvironment );\n                } catch( e ) {\n                    QUnit.pushFailure( \"Teardown failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n                }\n            }\n            checkPollution();\n        },\n        finish: function() {\n            config.current = this;\n            if ( config.requireExpects && this.expected === null ) {\n                QUnit.pushFailure( \"Expected number of assertions to be defined, but expect() was not called.\", this.stack );\n            } else if ( this.expected !== null && this.expected !== this.assertions.length ) {\n                QUnit.pushFailure( \"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack );\n            } else if ( this.expected === null && !this.assertions.length ) {\n                QUnit.pushFailure( \"Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.\", this.stack );\n            }\n\n            var i, assertion, a, b, time, li, ol,\n                test = this,\n                good = 0,\n                bad = 0,\n                tests = id( \"qunit-tests\" );\n\n            this.runtime = +new Date() - this.started;\n            config.stats.all += this.assertions.length;\n            config.moduleStats.all += this.assertions.length;\n\n            if ( tests ) {\n                ol = document.createElement( \"ol\" );\n                ol.className = \"qunit-assert-list\";\n\n                for ( i = 0; i < this.assertions.length; i++ ) {\n                    assertion = this.assertions[i];\n\n                    li = document.createElement( \"li\" );\n                    li.className = assertion.result ? \"pass\" : \"fail\";\n                    li.innerHTML = assertion.message || ( assertion.result ? \"okay\" : \"failed\" );\n                    ol.appendChild( li );\n\n                    if ( assertion.result ) {\n                        good++;\n                    } else {\n                        bad++;\n                        config.stats.bad++;\n                        config.moduleStats.bad++;\n                    }\n                }\n\n                // store result when possible\n                if ( QUnit.config.reorder && defined.sessionStorage ) {\n                    if ( bad ) {\n                        sessionStorage.setItem( \"qunit-test-\" + this.module + \"-\" + this.testName, bad );\n                    } else {\n                        sessionStorage.removeItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n                    }\n                }\n\n                if ( bad === 0 ) {\n                    addClass( ol, \"qunit-collapsed\" );\n                }\n\n                // `b` initialized at top of scope\n                b = document.createElement( \"strong\" );\n                b.innerHTML = this.nameHtml + \" <b class='counts'>(<b class='failed'>\" + bad + \"</b>, <b class='passed'>\" + good + \"</b>, \" + this.assertions.length + \")</b>\";\n\n                addEvent(b, \"click\", function() {\n                    var next = b.parentNode.lastChild,\n                        collapsed = hasClass( next, \"qunit-collapsed\" );\n                    ( collapsed ? removeClass : addClass )( next, \"qunit-collapsed\" );\n                });\n\n                addEvent(b, \"dblclick\", function( e ) {\n                    var target = e && e.target ? e.target : window.event.srcElement;\n                    if ( target.nodeName.toLowerCase() === \"span\" || target.nodeName.toLowerCase() === \"b\" ) {\n                        target = target.parentNode;\n                    }\n                    if ( window.location && target.nodeName.toLowerCase() === \"strong\" ) {\n                        window.location = QUnit.url({ testNumber: test.testNumber });\n                    }\n                });\n\n                // `time` initialized at top of scope\n                time = document.createElement( \"span\" );\n                time.className = \"runtime\";\n                time.innerHTML = this.runtime + \" ms\";\n\n                // `li` initialized at top of scope\n                li = id( this.id );\n                li.className = bad ? \"fail\" : \"pass\";\n                li.removeChild( li.firstChild );\n                a = li.firstChild;\n                li.appendChild( b );\n                li.appendChild( a );\n                li.appendChild( time );\n                li.appendChild( ol );\n\n            } else {\n                for ( i = 0; i < this.assertions.length; i++ ) {\n                    if ( !this.assertions[i].result ) {\n                        bad++;\n                        config.stats.bad++;\n                        config.moduleStats.bad++;\n                    }\n                }\n            }\n\n            runLoggingCallbacks( \"testDone\", QUnit, {\n                name: this.testName,\n                module: this.module,\n                failed: bad,\n                passed: this.assertions.length - bad,\n                total: this.assertions.length,\n                duration: this.runtime\n            });\n\n            QUnit.reset();\n\n            config.current = undefined;\n        },\n\n        queue: function() {\n            var bad,\n                test = this;\n\n            synchronize(function() {\n                test.init();\n            });\n            function run() {\n                // each of these can by async\n                synchronize(function() {\n                    test.setup();\n                });\n                synchronize(function() {\n                    test.run();\n                });\n                synchronize(function() {\n                    test.teardown();\n                });\n                synchronize(function() {\n                    test.finish();\n                });\n            }\n\n            // `bad` initialized at top of scope\n            // defer when previous test run passed, if storage is available\n            bad = QUnit.config.reorder && defined.sessionStorage &&\n                +sessionStorage.getItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\n            if ( bad ) {\n                run();\n            } else {\n                synchronize( run, true );\n            }\n        }\n    };\n\n// Root QUnit object.\n// `QUnit` initialized at top of scope\n    QUnit = {\n\n        // call on start of module test to prepend name to all tests\n        module: function( name, testEnvironment ) {\n            config.currentModule = name;\n            config.currentModuleTestEnvironment = testEnvironment;\n            config.modules[name] = true;\n        },\n\n        asyncTest: function( testName, expected, callback ) {\n            if ( arguments.length === 2 ) {\n                callback = expected;\n                expected = null;\n            }\n\n            QUnit.test( testName, expected, callback, true );\n        },\n\n        test: function( testName, expected, callback, async ) {\n            var test,\n                nameHtml = \"<span class='test-name'>\" + escapeText( testName ) + \"</span>\";\n\n            if ( arguments.length === 2 ) {\n                callback = expected;\n                expected = null;\n            }\n\n            if ( config.currentModule ) {\n                nameHtml = \"<span class='module-name'>\" + escapeText( config.currentModule ) + \"</span>: \" + nameHtml;\n            }\n\n            test = new Test({\n                nameHtml: nameHtml,\n                testName: testName,\n                expected: expected,\n                async: async,\n                callback: callback,\n                module: config.currentModule,\n                moduleTestEnvironment: config.currentModuleTestEnvironment,\n                stack: sourceFromStacktrace( 2 )\n            });\n\n            if ( !validTest( test ) ) {\n                return;\n            }\n\n            test.queue();\n        },\n\n        // Specify the number of expected assertions to gurantee that failed test (no assertions are run at all) don't slip through.\n        expect: function( asserts ) {\n            if (arguments.length === 1) {\n                config.current.expected = asserts;\n            } else {\n                return config.current.expected;\n            }\n        },\n\n        start: function( count ) {\n            // QUnit hasn't been initialized yet.\n            // Note: RequireJS (et al) may delay onLoad\n            if ( config.semaphore === undefined ) {\n                QUnit.begin(function() {\n                    // This is triggered at the top of QUnit.load, push start() to the event loop, to allow QUnit.load to finish first\n                    setTimeout(function() {\n                        QUnit.start( count );\n                    });\n                });\n                return;\n            }\n\n            config.semaphore -= count || 1;\n            // don't start until equal number of stop-calls\n            if ( config.semaphore > 0 ) {\n                return;\n            }\n            // ignore if start is called more often then stop\n            if ( config.semaphore < 0 ) {\n                config.semaphore = 0;\n                QUnit.pushFailure( \"Called start() while already started (QUnit.config.semaphore was 0 already)\", null, sourceFromStacktrace(2) );\n                return;\n            }\n            // A slight delay, to avoid any current callbacks\n            if ( defined.setTimeout ) {\n                window.setTimeout(function() {\n                    if ( config.semaphore > 0 ) {\n                        return;\n                    }\n                    if ( config.timeout ) {\n                        clearTimeout( config.timeout );\n                    }\n\n                    config.blocking = false;\n                    process( true );\n                }, 13);\n            } else {\n                config.blocking = false;\n                process( true );\n            }\n        },\n\n        stop: function( count ) {\n            config.semaphore += count || 1;\n            config.blocking = true;\n\n            if ( config.testTimeout && defined.setTimeout ) {\n                clearTimeout( config.timeout );\n                config.timeout = window.setTimeout(function() {\n                    QUnit.ok( false, \"Test timed out\" );\n                    config.semaphore = 1;\n                    QUnit.start();\n                }, config.testTimeout );\n            }\n        }\n    };\n\n// `assert` initialized at top of scope\n// Asssert helpers\n// All of these must either call QUnit.push() or manually do:\n// - runLoggingCallbacks( \"log\", .. );\n// - config.current.assertions.push({ .. });\n// We attach it to the QUnit object *after* we expose the public API,\n// otherwise `assert` will become a global variable in browsers (#341).\n    assert = {\n        /**\n         * Asserts rough true-ish result.\n         * @name ok\n         * @function\n         * @example ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );\n         */\n        ok: function( result, msg ) {\n            if ( !config.current ) {\n                throw new Error( \"ok() assertion outside test context, was \" + sourceFromStacktrace(2) );\n            }\n            result = !!result;\n\n            var source,\n                details = {\n                    module: config.current.module,\n                    name: config.current.testName,\n                    result: result,\n                    message: msg\n                };\n\n            msg = escapeText( msg || (result ? \"okay\" : \"failed\" ) );\n            msg = \"<span class='test-message'>\" + msg + \"</span>\";\n\n            if ( !result ) {\n                source = sourceFromStacktrace( 2 );\n                if ( source ) {\n                    details.source = source;\n                    msg += \"<table><tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr></table>\";\n                }\n            }\n            runLoggingCallbacks( \"log\", QUnit, details );\n            config.current.assertions.push({\n                result: result,\n                message: msg\n            });\n        },\n\n        /**\n         * Assert that the first two arguments are equal, with an optional message.\n         * Prints out both actual and expected values.\n         * @name equal\n         * @function\n         * @example equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );\n         */\n        equal: function( actual, expected, message ) {\n            /*jshint eqeqeq:false */\n            QUnit.push( expected == actual, actual, expected, message );\n        },\n\n        /**\n         * @name notEqual\n         * @function\n         */\n        notEqual: function( actual, expected, message ) {\n            /*jshint eqeqeq:false */\n            QUnit.push( expected != actual, actual, expected, message );\n        },\n\n        /**\n         * @name propEqual\n         * @function\n         */\n        propEqual: function( actual, expected, message ) {\n            actual = objectValues(actual);\n            expected = objectValues(expected);\n            QUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n        },\n\n        /**\n         * @name notPropEqual\n         * @function\n         */\n        notPropEqual: function( actual, expected, message ) {\n            actual = objectValues(actual);\n            expected = objectValues(expected);\n            QUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n        },\n\n        /**\n         * @name deepEqual\n         * @function\n         */\n        deepEqual: function( actual, expected, message ) {\n            QUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n        },\n\n        /**\n         * @name notDeepEqual\n         * @function\n         */\n        notDeepEqual: function( actual, expected, message ) {\n            QUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n        },\n\n        /**\n         * @name strictEqual\n         * @function\n         */\n        strictEqual: function( actual, expected, message ) {\n            QUnit.push( expected === actual, actual, expected, message );\n        },\n\n        /**\n         * @name notStrictEqual\n         * @function\n         */\n        notStrictEqual: function( actual, expected, message ) {\n            QUnit.push( expected !== actual, actual, expected, message );\n        },\n\n        \"throws\": function( block, expected, message ) {\n            var actual,\n                expectedOutput = expected,\n                ok = false;\n\n            // 'expected' is optional\n            if ( typeof expected === \"string\" ) {\n                message = expected;\n                expected = null;\n            }\n\n            config.current.ignoreGlobalErrors = true;\n            try {\n                block.call( config.current.testEnvironment );\n            } catch (e) {\n                actual = e;\n            }\n            config.current.ignoreGlobalErrors = false;\n\n            if ( actual ) {\n                // we don't want to validate thrown error\n                if ( !expected ) {\n                    ok = true;\n                    expectedOutput = null;\n                    // expected is a regexp\n                } else if ( QUnit.objectType( expected ) === \"regexp\" ) {\n                    ok = expected.test( errorString( actual ) );\n                    // expected is a constructor\n                } else if ( actual instanceof expected ) {\n                    ok = true;\n                    // expected is a validation function which returns true is validation passed\n                } else if ( expected.call( {}, actual ) === true ) {\n                    expectedOutput = null;\n                    ok = true;\n                }\n\n                QUnit.push( ok, actual, expectedOutput, message );\n            } else {\n                QUnit.pushFailure( message, null, 'No exception was thrown.' );\n            }\n        }\n    };\n\n    /**\n     * @deprecate since 1.8.0\n     * Kept assertion helpers in root for backwards compatibility.\n     */\n    extend( QUnit, assert );\n\n    /**\n     * @deprecated since 1.9.0\n     * Kept root \"raises()\" for backwards compatibility.\n     * (Note that we don't introduce assert.raises).\n     */\n    QUnit.raises = assert[ \"throws\" ];\n\n    /**\n     * @deprecated since 1.0.0, replaced with error pushes since 1.3.0\n     * Kept to avoid TypeErrors for undefined methods.\n     */\n    QUnit.equals = function() {\n        QUnit.push( false, false, false, \"QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead\" );\n    };\n    QUnit.same = function() {\n        QUnit.push( false, false, false, \"QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead\" );\n    };\n\n// We want access to the constructor's prototype\n    (function() {\n        function F() {}\n        F.prototype = QUnit;\n        QUnit = new F();\n        // Make F QUnit's constructor so that we can add to the prototype later\n        QUnit.constructor = F;\n    }());\n\n    /**\n     * Config object: Maintain internal state\n     * Later exposed as QUnit.config\n     * `config` initialized at top of scope\n     */\n    config = {\n        // The queue of tests to run\n        queue: [],\n\n        // block until document ready\n        blocking: true,\n\n        // when enabled, show only failing tests\n        // gets persisted through sessionStorage and can be changed in UI via checkbox\n        hidepassed: false,\n\n        // by default, run previously failed tests first\n        // very useful in combination with \"Hide passed tests\" checked\n        reorder: true,\n\n        // by default, modify document.title when suite is done\n        altertitle: true,\n\n        // when enabled, all tests must call expect()\n        requireExpects: false,\n\n        // add checkboxes that are persisted in the query-string\n        // when enabled, the id is set to `true` as a `QUnit.config` property\n        urlConfig: [\n            {\n                id: \"noglobals\",\n                label: \"Check for Globals\",\n                tooltip: \"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings.\"\n            },\n            {\n                id: \"notrycatch\",\n                label: \"No try-catch\",\n                tooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings.\"\n            }\n        ],\n\n        // Set of all modules.\n        modules: {},\n\n        // logging callback queues\n        begin: [],\n        done: [],\n        log: [],\n        testStart: [],\n        testDone: [],\n        moduleStart: [],\n        moduleDone: []\n    };\n\n// Export global variables, unless an 'exports' object exists,\n// in that case we assume we're in CommonJS (dealt with on the bottom of the script)\n    if ( typeof exports === \"undefined\" ) {\n        extend( window, QUnit );\n\n        // Expose QUnit object\n        window.QUnit = QUnit;\n    }\n\n// Initialize more QUnit.config and QUnit.urlParams\n    (function() {\n        var i,\n            location = window.location || { search: \"\", protocol: \"file:\" },\n            params = location.search.slice( 1 ).split( \"&\" ),\n            length = params.length,\n            urlParams = {},\n            current;\n\n        if ( params[ 0 ] ) {\n            for ( i = 0; i < length; i++ ) {\n                current = params[ i ].split( \"=\" );\n                current[ 0 ] = decodeURIComponent( current[ 0 ] );\n                // allow just a key to turn on a flag, e.g., test.html?noglobals\n                current[ 1 ] = current[ 1 ] ? decodeURIComponent( current[ 1 ] ) : true;\n                urlParams[ current[ 0 ] ] = current[ 1 ];\n            }\n        }\n\n        QUnit.urlParams = urlParams;\n\n        // String search anywhere in moduleName+testName\n        config.filter = urlParams.filter;\n\n        // Exact match of the module name\n        config.module = urlParams.module;\n\n        config.testNumber = parseInt( urlParams.testNumber, 10 ) || null;\n\n        // Figure out if we're running the tests from a server or not\n        QUnit.isLocal = location.protocol === \"file:\";\n    }());\n\n// Extend QUnit object,\n// these after set here because they should not be exposed as global functions\n    extend( QUnit, {\n        assert: assert,\n\n        config: config,\n\n        // Initialize the configuration options\n        init: function() {\n            extend( config, {\n                stats: { all: 0, bad: 0 },\n                moduleStats: { all: 0, bad: 0 },\n                started: +new Date(),\n                updateRate: 1000,\n                blocking: false,\n                autostart: true,\n                autorun: false,\n                filter: \"\",\n                queue: [],\n                semaphore: 1\n            });\n\n            var tests, banner, result,\n                qunit = id( \"qunit\" );\n\n            if ( qunit ) {\n                qunit.innerHTML =\n                    \"<h1 id='qunit-header'>\" + escapeText( document.title ) + \"</h1>\" +\n                        \"<h2 id='qunit-banner'></h2>\" +\n                        \"<div id='qunit-testrunner-toolbar'></div>\" +\n                        \"<h2 id='qunit-userAgent'></h2>\" +\n                        \"<ol id='qunit-tests'></ol>\";\n            }\n\n            tests = id( \"qunit-tests\" );\n            banner = id( \"qunit-banner\" );\n            result = id( \"qunit-testresult\" );\n\n            if ( tests ) {\n                tests.innerHTML = \"\";\n            }\n\n            if ( banner ) {\n                banner.className = \"\";\n            }\n\n            if ( result ) {\n                result.parentNode.removeChild( result );\n            }\n\n            if ( tests ) {\n                result = document.createElement( \"p\" );\n                result.id = \"qunit-testresult\";\n                result.className = \"result\";\n                tests.parentNode.insertBefore( result, tests );\n                result.innerHTML = \"Running...<br/>&nbsp;\";\n            }\n        },\n\n        // Resets the test setup. Useful for tests that modify the DOM.\n        reset: function() {\n            var fixture = id( \"qunit-fixture\" );\n            if ( fixture ) {\n                fixture.innerHTML = config.fixture;\n            }\n        },\n\n        // Trigger an event on an element.\n        // @example triggerEvent( document.body, \"click\" );\n        triggerEvent: function( elem, type, event ) {\n            if ( document.createEvent ) {\n                event = document.createEvent( \"MouseEvents\" );\n                event.initMouseEvent(type, true, true, elem.ownerDocument.defaultView,\n                    0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n                elem.dispatchEvent( event );\n            } else if ( elem.fireEvent ) {\n                elem.fireEvent( \"on\" + type );\n            }\n        },\n\n        // Safe object type checking\n        is: function( type, obj ) {\n            return QUnit.objectType( obj ) === type;\n        },\n\n        objectType: function( obj ) {\n            if ( typeof obj === \"undefined\" ) {\n                return \"undefined\";\n                // consider: typeof null === object\n            }\n            if ( obj === null ) {\n                return \"null\";\n            }\n\n            var match = toString.call( obj ).match(/^\\[object\\s(.*)\\]$/),\n                type = match && match[1] || \"\";\n\n            switch ( type ) {\n                case \"Number\":\n                    if ( isNaN(obj) ) {\n                        return \"nan\";\n                    }\n                    return \"number\";\n                case \"String\":\n                case \"Boolean\":\n                case \"Array\":\n                case \"Date\":\n                case \"RegExp\":\n                case \"Function\":\n                    return type.toLowerCase();\n            }\n            if ( typeof obj === \"object\" ) {\n                return \"object\";\n            }\n            return undefined;\n        },\n\n        push: function( result, actual, expected, message ) {\n            if ( !config.current ) {\n                throw new Error( \"assertion outside test context, was \" + sourceFromStacktrace() );\n            }\n\n            var output, source,\n                details = {\n                    module: config.current.module,\n                    name: config.current.testName,\n                    result: result,\n                    message: message,\n                    actual: actual,\n                    expected: expected\n                };\n\n            message = escapeText( message ) || ( result ? \"okay\" : \"failed\" );\n            message = \"<span class='test-message'>\" + message + \"</span>\";\n            output = message;\n\n            if ( !result ) {\n                expected = escapeText( QUnit.jsDump.parse(expected) );\n                actual = escapeText( QUnit.jsDump.parse(actual) );\n                output += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" + expected + \"</pre></td></tr>\";\n\n                if ( actual !== expected ) {\n                    output += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + actual + \"</pre></td></tr>\";\n                    output += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" + QUnit.diff( expected, actual ) + \"</pre></td></tr>\";\n                }\n\n                source = sourceFromStacktrace();\n\n                if ( source ) {\n                    details.source = source;\n                    output += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n                }\n\n                output += \"</table>\";\n            }\n\n            runLoggingCallbacks( \"log\", QUnit, details );\n\n            config.current.assertions.push({\n                result: !!result,\n                message: output\n            });\n        },\n\n        pushFailure: function( message, source, actual ) {\n            if ( !config.current ) {\n                throw new Error( \"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2) );\n            }\n\n            var output,\n                details = {\n                    module: config.current.module,\n                    name: config.current.testName,\n                    result: false,\n                    message: message\n                };\n\n            message = escapeText( message ) || \"error\";\n            message = \"<span class='test-message'>\" + message + \"</span>\";\n            output = message;\n\n            output += \"<table>\";\n\n            if ( actual ) {\n                output += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + escapeText( actual ) + \"</pre></td></tr>\";\n            }\n\n            if ( source ) {\n                details.source = source;\n                output += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n            }\n\n            output += \"</table>\";\n\n            runLoggingCallbacks( \"log\", QUnit, details );\n\n            config.current.assertions.push({\n                result: false,\n                message: output\n            });\n        },\n\n        url: function( params ) {\n            params = extend( extend( {}, QUnit.urlParams ), params );\n            var key,\n                querystring = \"?\";\n\n            for ( key in params ) {\n                if ( !hasOwn.call( params, key ) ) {\n                    continue;\n                }\n                querystring += encodeURIComponent( key ) + \"=\" +\n                    encodeURIComponent( params[ key ] ) + \"&\";\n            }\n            return window.location.protocol + \"//\" + window.location.host +\n                window.location.pathname + querystring.slice( 0, -1 );\n        },\n\n        extend: extend,\n        id: id,\n        addEvent: addEvent\n        // load, equiv, jsDump, diff: Attached later\n    });\n\n    /**\n     * @deprecated: Created for backwards compatibility with test runner that set the hook function\n     * into QUnit.{hook}, instead of invoking it and passing the hook function.\n     * QUnit.constructor is set to the empty F() above so that we can add to it's prototype here.\n     * Doing this allows us to tell if the following methods have been overwritten on the actual\n     * QUnit object.\n     */\n    extend( QUnit.constructor.prototype, {\n\n        // Logging callbacks; all receive a single argument with the listed properties\n        // run test/logs.html for any related changes\n        begin: registerLoggingCallback( \"begin\" ),\n\n        // done: { failed, passed, total, runtime }\n        done: registerLoggingCallback( \"done\" ),\n\n        // log: { result, actual, expected, message }\n        log: registerLoggingCallback( \"log\" ),\n\n        // testStart: { name }\n        testStart: registerLoggingCallback( \"testStart\" ),\n\n        // testDone: { name, failed, passed, total, duration }\n        testDone: registerLoggingCallback( \"testDone\" ),\n\n        // moduleStart: { name }\n        moduleStart: registerLoggingCallback( \"moduleStart\" ),\n\n        // moduleDone: { name, failed, passed, total }\n        moduleDone: registerLoggingCallback( \"moduleDone\" )\n    });\n\n    if ( typeof document === \"undefined\" || document.readyState === \"complete\" ) {\n        config.autorun = true;\n    }\n\n    QUnit.load = function() {\n        runLoggingCallbacks( \"begin\", QUnit, {} );\n\n        // Initialize the config, saving the execution queue\n        var banner, filter, i, label, len, main, ol, toolbar, userAgent, val,\n            urlConfigCheckboxesContainer, urlConfigCheckboxes, moduleFilter,\n            numModules = 0,\n            moduleFilterHtml = \"\",\n            urlConfigHtml = \"\",\n            oldconfig = extend( {}, config );\n\n        QUnit.init();\n        extend(config, oldconfig);\n\n        config.blocking = false;\n\n        len = config.urlConfig.length;\n\n        for ( i = 0; i < len; i++ ) {\n            val = config.urlConfig[i];\n            if ( typeof val === \"string\" ) {\n                val = {\n                    id: val,\n                    label: val,\n                    tooltip: \"[no tooltip available]\"\n                };\n            }\n            config[ val.id ] = QUnit.urlParams[ val.id ];\n            urlConfigHtml += \"<input id='qunit-urlconfig-\" + escapeText( val.id ) +\n                \"' name='\" + escapeText( val.id ) +\n                \"' type='checkbox'\" + ( config[ val.id ] ? \" checked='checked'\" : \"\" ) +\n                \" title='\" + escapeText( val.tooltip ) +\n                \"'><label for='qunit-urlconfig-\" + escapeText( val.id ) +\n                \"' title='\" + escapeText( val.tooltip ) + \"'>\" + val.label + \"</label>\";\n        }\n\n        moduleFilterHtml += \"<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' \" +\n            ( config.module === undefined  ? \"selected='selected'\" : \"\" ) +\n            \">< All Modules ></option>\";\n\n        for ( i in config.modules ) {\n            if ( config.modules.hasOwnProperty( i ) ) {\n                numModules += 1;\n                moduleFilterHtml += \"<option value='\" + escapeText( encodeURIComponent(i) ) + \"' \" +\n                    ( config.module === i ? \"selected='selected'\" : \"\" ) +\n                    \">\" + escapeText(i) + \"</option>\";\n            }\n        }\n        moduleFilterHtml += \"</select>\";\n\n        // `userAgent` initialized at top of scope\n        userAgent = id( \"qunit-userAgent\" );\n        if ( userAgent ) {\n            userAgent.innerHTML = navigator.userAgent;\n        }\n\n        // `banner` initialized at top of scope\n        banner = id( \"qunit-header\" );\n        if ( banner ) {\n            banner.innerHTML = \"<a href='\" + QUnit.url({ filter: undefined, module: undefined, testNumber: undefined }) + \"'>\" + banner.innerHTML + \"</a> \";\n        }\n\n        // `toolbar` initialized at top of scope\n        toolbar = id( \"qunit-testrunner-toolbar\" );\n        if ( toolbar ) {\n            // `filter` initialized at top of scope\n            filter = document.createElement( \"input\" );\n            filter.type = \"checkbox\";\n            filter.id = \"qunit-filter-pass\";\n\n            addEvent( filter, \"click\", function() {\n                var tmp,\n                    ol = document.getElementById( \"qunit-tests\" );\n\n                if ( filter.checked ) {\n                    ol.className = ol.className + \" hidepass\";\n                } else {\n                    tmp = \" \" + ol.className.replace( /[\\n\\t\\r]/g, \" \" ) + \" \";\n                    ol.className = tmp.replace( / hidepass /, \" \" );\n                }\n                if ( defined.sessionStorage ) {\n                    if (filter.checked) {\n                        sessionStorage.setItem( \"qunit-filter-passed-tests\", \"true\" );\n                    } else {\n                        sessionStorage.removeItem( \"qunit-filter-passed-tests\" );\n                    }\n                }\n            });\n\n            if ( config.hidepassed || defined.sessionStorage && sessionStorage.getItem( \"qunit-filter-passed-tests\" ) ) {\n                filter.checked = true;\n                // `ol` initialized at top of scope\n                ol = document.getElementById( \"qunit-tests\" );\n                ol.className = ol.className + \" hidepass\";\n            }\n            toolbar.appendChild( filter );\n\n            // `label` initialized at top of scope\n            label = document.createElement( \"label\" );\n            label.setAttribute( \"for\", \"qunit-filter-pass\" );\n            label.setAttribute( \"title\", \"Only show tests and assertons that fail. Stored in sessionStorage.\" );\n            label.innerHTML = \"Hide passed tests\";\n            toolbar.appendChild( label );\n\n            urlConfigCheckboxesContainer = document.createElement(\"span\");\n            urlConfigCheckboxesContainer.innerHTML = urlConfigHtml;\n            urlConfigCheckboxes = urlConfigCheckboxesContainer.getElementsByTagName(\"input\");\n            // For oldIE support:\n            // * Add handlers to the individual elements instead of the container\n            // * Use \"click\" instead of \"change\"\n            // * Fallback from event.target to event.srcElement\n            addEvents( urlConfigCheckboxes, \"click\", function( event ) {\n                var params = {},\n                    target = event.target || event.srcElement;\n                params[ target.name ] = target.checked ? true : undefined;\n                window.location = QUnit.url( params );\n            });\n            toolbar.appendChild( urlConfigCheckboxesContainer );\n\n            if (numModules > 1) {\n                moduleFilter = document.createElement( 'span' );\n                moduleFilter.setAttribute( 'id', 'qunit-modulefilter-container' );\n                moduleFilter.innerHTML = moduleFilterHtml;\n                addEvent( moduleFilter.lastChild, \"change\", function() {\n                    var selectBox = moduleFilter.getElementsByTagName(\"select\")[0],\n                        selectedModule = decodeURIComponent(selectBox.options[selectBox.selectedIndex].value);\n\n                    window.location = QUnit.url( { module: ( selectedModule === \"\" ) ? undefined : selectedModule } );\n                });\n                toolbar.appendChild(moduleFilter);\n            }\n        }\n\n        // `main` initialized at top of scope\n        main = id( \"qunit-fixture\" );\n        if ( main ) {\n            config.fixture = main.innerHTML;\n        }\n\n        if ( config.autostart ) {\n            QUnit.start();\n        }\n    };\n\n    addEvent( window, \"load\", QUnit.load );\n\n// `onErrorFnPrev` initialized at top of scope\n// Preserve other handlers\n    onErrorFnPrev = window.onerror;\n\n// Cover uncaught exceptions\n// Returning true will surpress the default browser handler,\n// returning false will let it run.\n    window.onerror = function ( error, filePath, linerNr ) {\n        var ret = false;\n        if ( onErrorFnPrev ) {\n            ret = onErrorFnPrev( error, filePath, linerNr );\n        }\n\n        // Treat return value as window.onerror itself does,\n        // Only do our handling if not surpressed.\n        if ( ret !== true ) {\n            if ( QUnit.config.current ) {\n                if ( QUnit.config.current.ignoreGlobalErrors ) {\n                    return true;\n                }\n                QUnit.pushFailure( error, filePath + \":\" + linerNr );\n            } else {\n                QUnit.test( \"global failure\", extend( function() {\n                    QUnit.pushFailure( error, filePath + \":\" + linerNr );\n                }, { validTest: validTest } ) );\n            }\n            return false;\n        }\n\n        return ret;\n    };\n\n    function done() {\n        config.autorun = true;\n\n        // Log the last module results\n        if ( config.currentModule ) {\n            runLoggingCallbacks( \"moduleDone\", QUnit, {\n                name: config.currentModule,\n                failed: config.moduleStats.bad,\n                passed: config.moduleStats.all - config.moduleStats.bad,\n                total: config.moduleStats.all\n            });\n        }\n\n        var i, key,\n            banner = id( \"qunit-banner\" ),\n            tests = id( \"qunit-tests\" ),\n            runtime = +new Date() - config.started,\n            passed = config.stats.all - config.stats.bad,\n            html = [\n                \"Tests completed in \",\n                runtime,\n                \" milliseconds.<br/>\",\n                \"<span class='passed'>\",\n                passed,\n                \"</span> assertions of <span class='total'>\",\n                config.stats.all,\n                \"</span> passed, <span class='failed'>\",\n                config.stats.bad,\n                \"</span> failed.\"\n            ].join( \"\" );\n\n        if ( banner ) {\n            banner.className = ( config.stats.bad ? \"qunit-fail\" : \"qunit-pass\" );\n        }\n\n        if ( tests ) {\n            id( \"qunit-testresult\" ).innerHTML = html;\n        }\n\n        if ( config.altertitle && typeof document !== \"undefined\" && document.title ) {\n            // show ✖ for good, ✔ for bad suite result in title\n            // use escape sequences in case file gets loaded with non-utf-8-charset\n            document.title = [\n                ( config.stats.bad ? \"\\u2716\" : \"\\u2714\" ),\n                document.title.replace( /^[\\u2714\\u2716] /i, \"\" )\n            ].join( \" \" );\n        }\n\n        // clear own sessionStorage items if all tests passed\n        if ( config.reorder && defined.sessionStorage && config.stats.bad === 0 ) {\n            // `key` & `i` initialized at top of scope\n            for ( i = 0; i < sessionStorage.length; i++ ) {\n                key = sessionStorage.key( i++ );\n                if ( key.indexOf( \"qunit-test-\" ) === 0 ) {\n                    sessionStorage.removeItem( key );\n                }\n            }\n        }\n\n        // scroll back to top to show results\n        if ( window.scrollTo ) {\n            window.scrollTo(0, 0);\n        }\n\n        runLoggingCallbacks( \"done\", QUnit, {\n            failed: config.stats.bad,\n            passed: passed,\n            total: config.stats.all,\n            runtime: runtime\n        });\n    }\n\n    /** @return Boolean: true if this test should be ran */\n    function validTest( test ) {\n        var include,\n            filter = config.filter && config.filter.toLowerCase(),\n            module = config.module && config.module.toLowerCase(),\n            fullName = (test.module + \": \" + test.testName).toLowerCase();\n\n        // Internally-generated tests are always valid\n        if ( test.callback && test.callback.validTest === validTest ) {\n            delete test.callback.validTest;\n            return true;\n        }\n\n        if ( config.testNumber ) {\n            return test.testNumber === config.testNumber;\n        }\n\n        if ( module && ( !test.module || test.module.toLowerCase() !== module ) ) {\n            return false;\n        }\n\n        if ( !filter ) {\n            return true;\n        }\n\n        include = filter.charAt( 0 ) !== \"!\";\n        if ( !include ) {\n            filter = filter.slice( 1 );\n        }\n\n        // If the filter matches, we need to honour include\n        if ( fullName.indexOf( filter ) !== -1 ) {\n            return include;\n        }\n\n        // Otherwise, do the opposite\n        return !include;\n    }\n\n// so far supports only Firefox, Chrome and Opera (buggy), Safari (for real exceptions)\n// Later Safari and IE10 are supposed to support error.stack as well\n// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\n    function extractStacktrace( e, offset ) {\n        offset = offset === undefined ? 3 : offset;\n\n        var stack, include, i;\n\n        if ( e.stacktrace ) {\n            // Opera\n            return e.stacktrace.split( \"\\n\" )[ offset + 3 ];\n        } else if ( e.stack ) {\n            // Firefox, Chrome\n            stack = e.stack.split( \"\\n\" );\n            if (/^error$/i.test( stack[0] ) ) {\n                stack.shift();\n            }\n            if ( fileName ) {\n                include = [];\n                for ( i = offset; i < stack.length; i++ ) {\n                    if ( stack[ i ].indexOf( fileName ) !== -1 ) {\n                        break;\n                    }\n                    include.push( stack[ i ] );\n                }\n                if ( include.length ) {\n                    return include.join( \"\\n\" );\n                }\n            }\n            return stack[ offset ];\n        } else if ( e.sourceURL ) {\n            // Safari, PhantomJS\n            // hopefully one day Safari provides actual stacktraces\n            // exclude useless self-reference for generated Error objects\n            if ( /qunit.js$/.test( e.sourceURL ) ) {\n                return;\n            }\n            // for actual exceptions, this is useful\n            return e.sourceURL + \":\" + e.line;\n        }\n    }\n    function sourceFromStacktrace( offset ) {\n        try {\n            throw new Error();\n        } catch ( e ) {\n            return extractStacktrace( e, offset );\n        }\n    }\n\n    /**\n     * Escape text for attribute or text content.\n     */\n    function escapeText( s ) {\n        if ( !s ) {\n            return \"\";\n        }\n        s = s + \"\";\n        // Both single quotes and double quotes (for attributes)\n        return s.replace( /['\"<>&]/g, function( s ) {\n            switch( s ) {\n                case '\\'':\n                    return '&#039;';\n                case '\"':\n                    return '&quot;';\n                case '<':\n                    return '&lt;';\n                case '>':\n                    return '&gt;';\n                case '&':\n                    return '&amp;';\n            }\n        });\n    }\n\n    function synchronize( callback, last ) {\n        config.queue.push( callback );\n\n        if ( config.autorun && !config.blocking ) {\n            process( last );\n        }\n    }\n\n    function process( last ) {\n        function next() {\n            process( last );\n        }\n        var start = new Date().getTime();\n        config.depth = config.depth ? config.depth + 1 : 1;\n\n        while ( config.queue.length && !config.blocking ) {\n            if ( !defined.setTimeout || config.updateRate <= 0 || ( ( new Date().getTime() - start ) < config.updateRate ) ) {\n                config.queue.shift()();\n            } else {\n                window.setTimeout( next, 13 );\n                break;\n            }\n        }\n        config.depth--;\n        if ( last && !config.blocking && !config.queue.length && config.depth === 0 ) {\n            done();\n        }\n    }\n\n    function saveGlobal() {\n        config.pollution = [];\n\n        if ( config.noglobals ) {\n            for ( var key in window ) {\n                // in Opera sometimes DOM element ids show up here, ignore them\n                if ( !hasOwn.call( window, key ) || /^qunit-test-output/.test( key ) ) {\n                    continue;\n                }\n                config.pollution.push( key );\n            }\n        }\n    }\n\n    function checkPollution() {\n        var newGlobals,\n            deletedGlobals,\n            old = config.pollution;\n\n        saveGlobal();\n\n        newGlobals = diff( config.pollution, old );\n        if ( newGlobals.length > 0 ) {\n            QUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join(\", \") );\n        }\n\n        deletedGlobals = diff( old, config.pollution );\n        if ( deletedGlobals.length > 0 ) {\n            QUnit.pushFailure( \"Deleted global variable(s): \" + deletedGlobals.join(\", \") );\n        }\n    }\n\n// returns a new Array with the elements that are in a but not in b\n    function diff( a, b ) {\n        var i, j,\n            result = a.slice();\n\n        for ( i = 0; i < result.length; i++ ) {\n            for ( j = 0; j < b.length; j++ ) {\n                if ( result[i] === b[j] ) {\n                    result.splice( i, 1 );\n                    i--;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    function extend( a, b ) {\n        for ( var prop in b ) {\n            if ( b[ prop ] === undefined ) {\n                delete a[ prop ];\n\n                // Avoid \"Member not found\" error in IE8 caused by setting window.constructor\n            } else if ( prop !== \"constructor\" || a !== window ) {\n                a[ prop ] = b[ prop ];\n            }\n        }\n\n        return a;\n    }\n\n    /**\n     * @param {HTMLElement} elem\n     * @param {string} type\n     * @param {Function} fn\n     */\n    function addEvent( elem, type, fn ) {\n        // Standards-based browsers\n        if ( elem.addEventListener ) {\n            elem.addEventListener( type, fn, false );\n            // IE\n        } else {\n            elem.attachEvent( \"on\" + type, fn );\n        }\n    }\n\n    /**\n     * @param {Array|NodeList} elems\n     * @param {string} type\n     * @param {Function} fn\n     */\n    function addEvents( elems, type, fn ) {\n        var i = elems.length;\n        while ( i-- ) {\n            addEvent( elems[i], type, fn );\n        }\n    }\n\n    function hasClass( elem, name ) {\n        return (\" \" + elem.className + \" \").indexOf(\" \" + name + \" \") > -1;\n    }\n\n    function addClass( elem, name ) {\n        if ( !hasClass( elem, name ) ) {\n            elem.className += (elem.className ? \" \" : \"\") + name;\n        }\n    }\n\n    function removeClass( elem, name ) {\n        var set = \" \" + elem.className + \" \";\n        // Class name may appear multiple times\n        while ( set.indexOf(\" \" + name + \" \") > -1 ) {\n            set = set.replace(\" \" + name + \" \" , \" \");\n        }\n        // If possible, trim it for prettiness, but not neccecarily\n        elem.className = window.jQuery ? jQuery.trim( set ) : ( set.trim ? set.trim() : set );\n    }\n\n    function id( name ) {\n        return !!( typeof document !== \"undefined\" && document && document.getElementById ) &&\n            document.getElementById( name );\n    }\n\n    function registerLoggingCallback( key ) {\n        return function( callback ) {\n            config[key].push( callback );\n        };\n    }\n\n// Supports deprecated method of completely overwriting logging callbacks\n    function runLoggingCallbacks( key, scope, args ) {\n        var i, callbacks;\n        if ( QUnit.hasOwnProperty( key ) ) {\n            QUnit[ key ].call(scope, args );\n        } else {\n            callbacks = config[ key ];\n            for ( i = 0; i < callbacks.length; i++ ) {\n                callbacks[ i ].call( scope, args );\n            }\n        }\n    }\n\n// Test for equality any JavaScript type.\n// Author: Philippe Rathé <prathe@gmail.com>\n    QUnit.equiv = (function() {\n\n        // Call the o related callback with the given arguments.\n        function bindCallbacks( o, callbacks, args ) {\n            var prop = QUnit.objectType( o );\n            if ( prop ) {\n                if ( QUnit.objectType( callbacks[ prop ] ) === \"function\" ) {\n                    return callbacks[ prop ].apply( callbacks, args );\n                } else {\n                    return callbacks[ prop ]; // or undefined\n                }\n            }\n        }\n\n        // the real equiv function\n        var innerEquiv,\n        // stack to decide between skip/abort functions\n            callers = [],\n        // stack to avoiding loops from circular referencing\n            parents = [],\n\n            getProto = Object.getPrototypeOf || function ( obj ) {\n                return obj.__proto__;\n            },\n            callbacks = (function () {\n\n                // for string, boolean, number and null\n                function useStrictEquality( b, a ) {\n                    /*jshint eqeqeq:false */\n                    if ( b instanceof a.constructor || a instanceof b.constructor ) {\n                        // to catch short annotaion VS 'new' annotation of a\n                        // declaration\n                        // e.g. var i = 1;\n                        // var j = new Number(1);\n                        return a == b;\n                    } else {\n                        return a === b;\n                    }\n                }\n\n                return {\n                    \"string\": useStrictEquality,\n                    \"boolean\": useStrictEquality,\n                    \"number\": useStrictEquality,\n                    \"null\": useStrictEquality,\n                    \"undefined\": useStrictEquality,\n\n                    \"nan\": function( b ) {\n                        return isNaN( b );\n                    },\n\n                    \"date\": function( b, a ) {\n                        return QUnit.objectType( b ) === \"date\" && a.valueOf() === b.valueOf();\n                    },\n\n                    \"regexp\": function( b, a ) {\n                        return QUnit.objectType( b ) === \"regexp\" &&\n                            // the regex itself\n                            a.source === b.source &&\n                            // and its modifers\n                            a.global === b.global &&\n                            // (gmi) ...\n                            a.ignoreCase === b.ignoreCase &&\n                            a.multiline === b.multiline &&\n                            a.sticky === b.sticky;\n                    },\n\n                    // - skip when the property is a method of an instance (OOP)\n                    // - abort otherwise,\n                    // initial === would have catch identical references anyway\n                    \"function\": function() {\n                        var caller = callers[callers.length - 1];\n                        return caller !== Object && typeof caller !== \"undefined\";\n                    },\n\n                    \"array\": function( b, a ) {\n                        var i, j, len, loop;\n\n                        // b could be an object literal here\n                        if ( QUnit.objectType( b ) !== \"array\" ) {\n                            return false;\n                        }\n\n                        len = a.length;\n                        if ( len !== b.length ) {\n                            // safe and faster\n                            return false;\n                        }\n\n                        // track reference to avoid circular references\n                        parents.push( a );\n                        for ( i = 0; i < len; i++ ) {\n                            loop = false;\n                            for ( j = 0; j < parents.length; j++ ) {\n                                if ( parents[j] === a[i] ) {\n                                    loop = true;// dont rewalk array\n                                }\n                            }\n                            if ( !loop && !innerEquiv(a[i], b[i]) ) {\n                                parents.pop();\n                                return false;\n                            }\n                        }\n                        parents.pop();\n                        return true;\n                    },\n\n                    \"object\": function( b, a ) {\n                        var i, j, loop,\n                        // Default to true\n                            eq = true,\n                            aProperties = [],\n                            bProperties = [];\n\n                        // comparing constructors is more strict than using\n                        // instanceof\n                        if ( a.constructor !== b.constructor ) {\n                            // Allow objects with no prototype to be equivalent to\n                            // objects with Object as their constructor.\n                            if ( !(( getProto(a) === null && getProto(b) === Object.prototype ) ||\n                                ( getProto(b) === null && getProto(a) === Object.prototype ) ) ) {\n                                return false;\n                            }\n                        }\n\n                        // stack constructor before traversing properties\n                        callers.push( a.constructor );\n                        // track reference to avoid circular references\n                        parents.push( a );\n\n                        for ( i in a ) { // be strict: don't ensures hasOwnProperty\n                            // and go deep\n                            loop = false;\n                            for ( j = 0; j < parents.length; j++ ) {\n                                if ( parents[j] === a[i] ) {\n                                    // don't go down the same path twice\n                                    loop = true;\n                                }\n                            }\n                            aProperties.push(i); // collect a's properties\n\n                            if (!loop && !innerEquiv( a[i], b[i] ) ) {\n                                eq = false;\n                                break;\n                            }\n                        }\n\n                        callers.pop(); // unstack, we are done\n                        parents.pop();\n\n                        for ( i in b ) {\n                            bProperties.push( i ); // collect b's properties\n                        }\n\n                        // Ensures identical properties name\n                        return eq && innerEquiv( aProperties.sort(), bProperties.sort() );\n                    }\n                };\n            }());\n\n        innerEquiv = function() { // can take multiple arguments\n            var args = [].slice.apply( arguments );\n            if ( args.length < 2 ) {\n                return true; // end transition\n            }\n\n            return (function( a, b ) {\n                if ( a === b ) {\n                    return true; // catch the most you can\n                } else if ( a === null || b === null || typeof a === \"undefined\" ||\n                    typeof b === \"undefined\" ||\n                    QUnit.objectType(a) !== QUnit.objectType(b) ) {\n                    return false; // don't lose time with error prone cases\n                } else {\n                    return bindCallbacks(a, callbacks, [ b, a ]);\n                }\n\n                // apply transition with (1..n) arguments\n            }( args[0], args[1] ) && arguments.callee.apply( this, args.splice(1, args.length - 1 )) );\n        };\n\n        return innerEquiv;\n    }());\n\n    /**\n     * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n     * http://flesler.blogspot.com Licensed under BSD\n     * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n     *\n     * @projectDescription Advanced and extensible data dumping for Javascript.\n     * @version 1.0.0\n     * @author Ariel Flesler\n     * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n     */\n    QUnit.jsDump = (function() {\n        function quote( str ) {\n            return '\"' + str.toString().replace( /\"/g, '\\\\\"' ) + '\"';\n        }\n        function literal( o ) {\n            return o + \"\";\n        }\n        function join( pre, arr, post ) {\n            var s = jsDump.separator(),\n                base = jsDump.indent(),\n                inner = jsDump.indent(1);\n            if ( arr.join ) {\n                arr = arr.join( \",\" + s + inner );\n            }\n            if ( !arr ) {\n                return pre + post;\n            }\n            return [ pre, inner + arr, base + post ].join(s);\n        }\n        function array( arr, stack ) {\n            var i = arr.length, ret = new Array(i);\n            this.up();\n            while ( i-- ) {\n                ret[i] = this.parse( arr[i] , undefined , stack);\n            }\n            this.down();\n            return join( \"[\", ret, \"]\" );\n        }\n\n        var reName = /^function (\\w+)/,\n            jsDump = {\n                // type is used mostly internally, you can fix a (custom)type in advance\n                parse: function( obj, type, stack ) {\n                    stack = stack || [ ];\n                    var inStack, res,\n                        parser = this.parsers[ type || this.typeOf(obj) ];\n\n                    type = typeof parser;\n                    inStack = inArray( obj, stack );\n\n                    if ( inStack !== -1 ) {\n                        return \"recursion(\" + (inStack - stack.length) + \")\";\n                    }\n                    if ( type === \"function\" )  {\n                        stack.push( obj );\n                        res = parser.call( this, obj, stack );\n                        stack.pop();\n                        return res;\n                    }\n                    return ( type === \"string\" ) ? parser : this.parsers.error;\n                },\n                typeOf: function( obj ) {\n                    var type;\n                    if ( obj === null ) {\n                        type = \"null\";\n                    } else if ( typeof obj === \"undefined\" ) {\n                        type = \"undefined\";\n                    } else if ( QUnit.is( \"regexp\", obj) ) {\n                        type = \"regexp\";\n                    } else if ( QUnit.is( \"date\", obj) ) {\n                        type = \"date\";\n                    } else if ( QUnit.is( \"function\", obj) ) {\n                        type = \"function\";\n                    } else if ( typeof obj.setInterval !== undefined && typeof obj.document !== \"undefined\" && typeof obj.nodeType === \"undefined\" ) {\n                        type = \"window\";\n                    } else if ( obj.nodeType === 9 ) {\n                        type = \"document\";\n                    } else if ( obj.nodeType ) {\n                        type = \"node\";\n                    } else if (\n                    // native arrays\n                        toString.call( obj ) === \"[object Array]\" ||\n                            // NodeList objects\n                            ( typeof obj.length === \"number\" && typeof obj.item !== \"undefined\" && ( obj.length ? obj.item(0) === obj[0] : ( obj.item( 0 ) === null && typeof obj[0] === \"undefined\" ) ) )\n                        ) {\n                        type = \"array\";\n                    } else if ( obj.constructor === Error.prototype.constructor ) {\n                        type = \"error\";\n                    } else {\n                        type = typeof obj;\n                    }\n                    return type;\n                },\n                separator: function() {\n                    return this.multiline ?\tthis.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&nbsp;\" : \" \";\n                },\n                // extra can be a number, shortcut for increasing-calling-decreasing\n                indent: function( extra ) {\n                    if ( !this.multiline ) {\n                        return \"\";\n                    }\n                    var chr = this.indentChar;\n                    if ( this.HTML ) {\n                        chr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&nbsp;\" );\n                    }\n                    return new Array( this._depth_ + (extra||0) ).join(chr);\n                },\n                up: function( a ) {\n                    this._depth_ += a || 1;\n                },\n                down: function( a ) {\n                    this._depth_ -= a || 1;\n                },\n                setParser: function( name, parser ) {\n                    this.parsers[name] = parser;\n                },\n                // The next 3 are exposed so you can use them\n                quote: quote,\n                literal: literal,\n                join: join,\n                //\n                _depth_: 1,\n                // This is the list of parsers, to modify them, use jsDump.setParser\n                parsers: {\n                    window: \"[Window]\",\n                    document: \"[Document]\",\n                    error: function(error) {\n                        return \"Error(\\\"\" + error.message + \"\\\")\";\n                    },\n                    unknown: \"[Unknown]\",\n                    \"null\": \"null\",\n                    \"undefined\": \"undefined\",\n                    \"function\": function( fn ) {\n                        var ret = \"function\",\n                        // functions never have name in IE\n                            name = \"name\" in fn ? fn.name : (reName.exec(fn) || [])[1];\n\n                        if ( name ) {\n                            ret += \" \" + name;\n                        }\n                        ret += \"( \";\n\n                        ret = [ ret, QUnit.jsDump.parse( fn, \"functionArgs\" ), \"){\" ].join( \"\" );\n                        return join( ret, QUnit.jsDump.parse(fn,\"functionCode\" ), \"}\" );\n                    },\n                    array: array,\n                    nodelist: array,\n                    \"arguments\": array,\n                    object: function( map, stack ) {\n                        var ret = [ ], keys, key, val, i;\n                        QUnit.jsDump.up();\n                        keys = [];\n                        for ( key in map ) {\n                            keys.push( key );\n                        }\n                        keys.sort();\n                        for ( i = 0; i < keys.length; i++ ) {\n                            key = keys[ i ];\n                            val = map[ key ];\n                            ret.push( QUnit.jsDump.parse( key, \"key\" ) + \": \" + QUnit.jsDump.parse( val, undefined, stack ) );\n                        }\n                        QUnit.jsDump.down();\n                        return join( \"{\", ret, \"}\" );\n                    },\n                    node: function( node ) {\n                        var len, i, val,\n                            open = QUnit.jsDump.HTML ? \"&lt;\" : \"<\",\n                            close = QUnit.jsDump.HTML ? \"&gt;\" : \">\",\n                            tag = node.nodeName.toLowerCase(),\n                            ret = open + tag,\n                            attrs = node.attributes;\n\n                        if ( attrs ) {\n                            for ( i = 0, len = attrs.length; i < len; i++ ) {\n                                val = attrs[i].nodeValue;\n                                // IE6 includes all attributes in .attributes, even ones not explicitly set.\n                                // Those have values like undefined, null, 0, false, \"\" or \"inherit\".\n                                if ( val && val !== \"inherit\" ) {\n                                    ret += \" \" + attrs[i].nodeName + \"=\" + QUnit.jsDump.parse( val, \"attribute\" );\n                                }\n                            }\n                        }\n                        ret += close;\n\n                        // Show content of TextNode or CDATASection\n                        if ( node.nodeType === 3 || node.nodeType === 4 ) {\n                            ret += node.nodeValue;\n                        }\n\n                        return ret + open + \"/\" + tag + close;\n                    },\n                    // function calls it internally, it's the arguments part of the function\n                    functionArgs: function( fn ) {\n                        var args,\n                            l = fn.length;\n\n                        if ( !l ) {\n                            return \"\";\n                        }\n\n                        args = new Array(l);\n                        while ( l-- ) {\n                            // 97 is 'a'\n                            args[l] = String.fromCharCode(97+l);\n                        }\n                        return \" \" + args.join( \", \" ) + \" \";\n                    },\n                    // object calls it internally, the key part of an item in a map\n                    key: quote,\n                    // function calls it internally, it's the content of the function\n                    functionCode: \"[code]\",\n                    // node calls it internally, it's an html attribute value\n                    attribute: quote,\n                    string: quote,\n                    date: quote,\n                    regexp: literal,\n                    number: literal,\n                    \"boolean\": literal\n                },\n                // if true, entities are escaped ( <, >, \\t, space and \\n )\n                HTML: false,\n                // indentation unit\n                indentChar: \"  \",\n                // if true, items in a collection, are separated by a \\n, else just a space.\n                multiline: true\n            };\n\n        return jsDump;\n    }());\n\n// from jquery.js\n    function inArray( elem, array ) {\n        if ( array.indexOf ) {\n            return array.indexOf( elem );\n        }\n\n        for ( var i = 0, length = array.length; i < length; i++ ) {\n            if ( array[ i ] === elem ) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /*\n     * Javascript Diff Algorithm\n     *  By John Resig (http://ejohn.org/)\n     *  Modified by Chu Alan \"sprite\"\n     *\n     * Released under the MIT license.\n     *\n     * More Info:\n     *  http://ejohn.org/projects/javascript-diff-algorithm/\n     *\n     * Usage: QUnit.diff(expected, actual)\n     *\n     * QUnit.diff( \"the quick brown fox jumped over\", \"the quick fox jumps over\" ) == \"the  quick <del>brown </del> fox <del>jumped </del><ins>jumps </ins> over\"\n     */\n    QUnit.diff = (function() {\n        /*jshint eqeqeq:false, eqnull:true */\n        function diff( o, n ) {\n            var i,\n                ns = {},\n                os = {};\n\n            for ( i = 0; i < n.length; i++ ) {\n                if ( !hasOwn.call( ns, n[i] ) ) {\n                    ns[ n[i] ] = {\n                        rows: [],\n                        o: null\n                    };\n                }\n                ns[ n[i] ].rows.push( i );\n            }\n\n            for ( i = 0; i < o.length; i++ ) {\n                if ( !hasOwn.call( os, o[i] ) ) {\n                    os[ o[i] ] = {\n                        rows: [],\n                        n: null\n                    };\n                }\n                os[ o[i] ].rows.push( i );\n            }\n\n            for ( i in ns ) {\n                if ( !hasOwn.call( ns, i ) ) {\n                    continue;\n                }\n                if ( ns[i].rows.length === 1 && hasOwn.call( os, i ) && os[i].rows.length === 1 ) {\n                    n[ ns[i].rows[0] ] = {\n                        text: n[ ns[i].rows[0] ],\n                        row: os[i].rows[0]\n                    };\n                    o[ os[i].rows[0] ] = {\n                        text: o[ os[i].rows[0] ],\n                        row: ns[i].rows[0]\n                    };\n                }\n            }\n\n            for ( i = 0; i < n.length - 1; i++ ) {\n                if ( n[i].text != null && n[ i + 1 ].text == null && n[i].row + 1 < o.length && o[ n[i].row + 1 ].text == null &&\n                    n[ i + 1 ] == o[ n[i].row + 1 ] ) {\n\n                    n[ i + 1 ] = {\n                        text: n[ i + 1 ],\n                        row: n[i].row + 1\n                    };\n                    o[ n[i].row + 1 ] = {\n                        text: o[ n[i].row + 1 ],\n                        row: i + 1\n                    };\n                }\n            }\n\n            for ( i = n.length - 1; i > 0; i-- ) {\n                if ( n[i].text != null && n[ i - 1 ].text == null && n[i].row > 0 && o[ n[i].row - 1 ].text == null &&\n                    n[ i - 1 ] == o[ n[i].row - 1 ]) {\n\n                    n[ i - 1 ] = {\n                        text: n[ i - 1 ],\n                        row: n[i].row - 1\n                    };\n                    o[ n[i].row - 1 ] = {\n                        text: o[ n[i].row - 1 ],\n                        row: i - 1\n                    };\n                }\n            }\n\n            return {\n                o: o,\n                n: n\n            };\n        }\n\n        return function( o, n ) {\n            o = o.replace( /\\s+$/, \"\" );\n            n = n.replace( /\\s+$/, \"\" );\n\n            var i, pre,\n                str = \"\",\n                out = diff( o === \"\" ? [] : o.split(/\\s+/), n === \"\" ? [] : n.split(/\\s+/) ),\n                oSpace = o.match(/\\s+/g),\n                nSpace = n.match(/\\s+/g);\n\n            if ( oSpace == null ) {\n                oSpace = [ \" \" ];\n            }\n            else {\n                oSpace.push( \" \" );\n            }\n\n            if ( nSpace == null ) {\n                nSpace = [ \" \" ];\n            }\n            else {\n                nSpace.push( \" \" );\n            }\n\n            if ( out.n.length === 0 ) {\n                for ( i = 0; i < out.o.length; i++ ) {\n                    str += \"<del>\" + out.o[i] + oSpace[i] + \"</del>\";\n                }\n            }\n            else {\n                if ( out.n[0].text == null ) {\n                    for ( n = 0; n < out.o.length && out.o[n].text == null; n++ ) {\n                        str += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n                    }\n                }\n\n                for ( i = 0; i < out.n.length; i++ ) {\n                    if (out.n[i].text == null) {\n                        str += \"<ins>\" + out.n[i] + nSpace[i] + \"</ins>\";\n                    }\n                    else {\n                        // `pre` initialized at top of scope\n                        pre = \"\";\n\n                        for ( n = out.n[i].row + 1; n < out.o.length && out.o[n].text == null; n++ ) {\n                            pre += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n                        }\n                        str += \" \" + out.n[i].text + nSpace[i] + pre;\n                    }\n                }\n            }\n\n            return str;\n        };\n    }());\n\n// for CommonJS enviroments, export everything\n    if ( typeof exports !== \"undefined\" ) {\n        extend( exports, QUnit );\n    }\n\n// get at whatever the global object is, like window in browsers\n}( (function() {return this;}.call()) ));\ndefine(\"qunit\", (function (global) {\n    return function () {\n        var ret, fn;\n       fn = function () {\n                QUnit.config.autoload = false;\n                QUnit.config.autostart = false;\n            };\n        ret = fn.apply(global, arguments);\n        return ret || global.QUnit;\n    };\n}(this)));\n",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Tests for the donation-model\n *\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('tests/model/donation',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'model/donation'\n], function ($, _, Backbone, DonationModel) {\n    'use strict';\n\n    var run = function () {\n        module('About the donation-model', {\n            setup: function () {\n            }\n        });\n        /* Test default values */\n\n\n        /* Test changed values */\n\n        /* Test session storage values */\n\n        test('Changing the donation-amount after comma.', function () {\n            var model = new DonationModel();\n            model.set({donationAmountAfterComma: 22});\n\n            ok(22 === model.get('donationAmountAfterComma'));\n        });\n        test('Changing the donation-amount before comma.', function () {\n            var model = new DonationModel();\n            model.set({donationAmountAbsolute: 150});\n\n            ok(150 === model.get('donationAmountAbsolute'));\n        });\n        test('Change before and after value and receive the correct complete donation-value.', function () {\n            var model = new DonationModel();\n            model.set({donationAmountAbsolute: 55});\n            model.set({donationAmountAfterComma: 99});\n            ok('55,99' === model.get('donationAmount').toString());\n        });\n        test('Change the currency-delimiter and receive the correct donation-amount with new delimiter.', function () {\n            var model = new DonationModel();\n            model.set({donationAmountAbsolute: 50});\n            model.set({donationAmountAfterComma: 50});\n            model.set({currencyDelimiter: ','});\n\n            ok('50,50' === model.get('donationAmount').toString());\n        });\n        test('Change the currency and receive the correct currency.', function () {\n            var model = new DonationModel();\n            model.set({currency: '€'});\n\n            ok('€' === model.get('currency'));\n        });\n    };\n    return {run: run};\n});",
    "\n/*global define*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Initialize the router\n *\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('tests/testMain',[\n    'qunit',\n    'tests/model/donation'\n], function (QUnit, donationTest) {\n    'use strict';\n    return {\n        init: function () {\n            QUnit.stop();\n\n            // start QUnit.\n            QUnit.load();\n            QUnit.start();\n\n            // run the tests.\n            donationTest.run();\n        }\n    };\n});",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Defines the routes of the appliation\n *\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('router',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'view/donationModule',\n    'model/donation',\n    'collection/shareModule',\n    'collection/receiver',\n    'view/donationForm',\n    'view/shareModule',\n    'tests/testMain'\n], function ($, _, Backbone, DonationModuleView, DonationModel, ShareModuleCollection, ReceiverCollection, DonationFormView, ShareModuleView, TestEnvironment) {\n    'use strict';\n    var AppRouter = Backbone.Router.extend({\n        routes: {\n            '*actions': 'defaultAction'\n        }\n    }),\n        initialize = function () {\n            var app_router = new AppRouter();\n            app_router.on('route:defaultAction', function () {\n\n                var donationModel = new DonationModel(),\n                    receiverCollection = new ReceiverCollection(null, {'clientID' : 1001}),\n                    shareModuleCollection = new ShareModuleCollection(),\n                    donationFormView = new DonationFormView({model: donationModel, collection: receiverCollection});\n\n                shareModuleCollection.add({\n                    'imgSrc'        :       'https://0ce8ff584bf613ee6639-c1fc539e0df6af03ccc14b5020ab4161.ssl.cf1.rackcdn.com/share_on_facebook.png',\n                    'service'       :       'facebook'\n                });\n\n                shareModuleCollection.add({\n                    'imgSrc'        :       'https://0ce8ff584bf613ee6639-c1fc539e0df6af03ccc14b5020ab4161.ssl.cf1.rackcdn.com/tweet_on_twitter.png',\n                    'service'       :       'twitter'\n                });\n\n                var donModule = new DonationModuleView({model: donationModel, receiverCollection: receiverCollection}),\n                    shareModule = new ShareModuleView({collection: shareModuleCollection});\n\n                donationFormView.render();\n                shareModule.render();\n                donModule.render();\n\n                TestEnvironment.init();\n            });\n            Backbone.history.start();\n        };\n    return {\n        initialize: initialize\n    };\n});",
    "\n/*global define*/\n/*jslint nomen: true*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Initialize the router\n *\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\ndefine('app',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'router'\n], function ($, _, Backbone, Router) {\n    'use strict';\n    var initialize = function () {\n        Router.initialize();\n    };\n\n    return {\n        initialize: initialize\n    };\n});",
    "\n/*global require*/\n\n/**\n * elefunds API Frontend SDK\n *\n * Copyright (c) 2013, elefunds GmbH <hello@elefunds.de>.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in\n *     the documentation and/or other materials provided with the\n *     distribution.\n *\n *   * Neither the name of the elefunds GmbH nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n/**\n * Entry-point of the application\n * Initializes the application\n *\n * @author roland@elefunds.de (Roland Luckenhuber)\n */\n\nrequire.config({\n    paths: {\n        jquery: '../lib/zepto',\n        underscore: '../lib/underscore',\n        backbone: '../lib/backbone',\n        qunit: '../lib/qunit',\n        sliderPlugin: '../lib/slider'\n    },\n    shim: {\n        underscore: {\n            exports: '_'\n        },\n        jquery: {\n            exports: '$'\n        },\n        qunit: {\n            exports: 'QUnit',\n            init: function() {\n                QUnit.config.autoload = false;\n                QUnit.config.autostart = false;\n            }\n        },\n        backbone: {\n            deps: [\"underscore\", \"jquery\"],\n            exports: \"Backbone\"\n        },\n        sliderPlugin: {\n            deps: [\"jquery\"],\n            exports: \"SliderPlugin\"\n        }\n    },\n    /**\n     * Sets the locale for handling translations\n     */\n    locale: 'en'\n});\n\nrequire([\n    'app'\n], function (App) {\n    'use strict';\n    App.initialize();\n});\ndefine(\"main\", function(){});\n"
  ]
}